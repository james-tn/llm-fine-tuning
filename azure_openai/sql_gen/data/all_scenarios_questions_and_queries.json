{
    "Order Analysis": {
        "questions": [
            "What is the total sales revenue for the current month?",
            "What is the average order value for customers this month?",
            "How many orders were placed in the last quarter?",
            "Which products have the highest sales revenue this year?",
            "What is the average time taken to fulfill an order this month?",
            "What is the on-time delivery rate for this quarter?",
            "Which shipping method is used most frequently?",
            "How many orders were shipped before the required date in the past year?",
            "What is the total freight cost for the last month?",
            "Identify customers with the highest total order value this year.",
            "Calculate the number of orders that each employee has processed.",
            "Find out the cities with the highest number of orders.",
            "Determine the average discount given on products.",
            "Identify orders that have not been shipped yet.",
            "List orders that had a delayed shipment past the required date.",
            "Which regions have the highest freight costs?",
            "Find the top 5 customers with the highest order count.",
            "Calculate the monthly total sales revenue over the last year.",
            "What is the average number of products per order?",
            "Determine the total sales per product category.",
            "What is the total sales amount for the current month?",
            "How many unique customers placed orders in the last quarter?",
            "Which product generated the highest revenue last year?",
            "What is the average order value for the month of July?",
            "List the top 5 cities by number of orders placed in the current year.",
            "Calculate the total freight cost incurred for orders shipped via each shipping method.",
            "How many days on average does it take to fulfill an order?",
            "What percentage of orders were delivered on time last month?",
            "Identify the employee who handled the most orders in the current week.",
            "Which customer placed the most orders in the last three months?",
            "What is the total discount given on orders placed in the current month?",
            "Find the order with the highest total value in the current year.",
            "What is the average number of items per order for the current quarter?",
            "Which product had the highest number of units sold last month?",
            "Determine the monthly trend in total sales over the past year.",
            "Calculate the total freight cost per country for the last six months.",
            "Identify the top 10 customers by total sales value in the current year.",
            "How many orders were received but not yet shipped as of today?",
            "What is the median order fulfillment time for the last six months?",
            "List all orders with a fulfillment time greater than 10 days in the current month.",
            "What is the total sales revenue for the month of January 2022?",
            "Which products were ordered in the highest quantity during the first quarter of 2022?",
            "Which customer placed the highest number of orders in 2021?",
            "What is the average order value for the year 2021?",
            "How many orders were shipped within their required dates in 2020?",
            "What is the total freight cost in February 2022?",
            "How many distinct customers placed orders in March 2022?",
            "Which shipping method was most commonly used in 2021?",
            "What is the average time taken to fulfill an order in December 2021?",
            "What percentage of orders were shipped on or before their required dates in 2021?",
            "Which employee handled the highest number of orders in 2021?",
            "What is the average discount given per order in 2021?",
            "Identify the top 5 cities with the highest order count in 2021.",
            "Calculate the monthly total sales for 2021.",
            "Identify customers who have placed more than 5 orders in a month during 2021.",
            "Calculate the average freight cost per order for each month in 2021.",
            "Find the total sales per customer for the year 2021.",
            "List all orders that took more than 10 days to fulfill in 2021.",
            "Identify the top 3 regions based on total sales in 2021.",
            "Calculate the monthly on-time delivery rate for 2021.",
            "What is the total sales revenue for each month?",
            "What is the average order value for each month?",
            "What is the average order fulfillment time for each month?",
            "What is the on-time delivery rate for each month?",
            "Which products contributed the most to the total sales revenue?",
            "Which customers placed the highest number of orders last year?",
            "Which employees handled the most orders over the past quarter?",
            "What are the top 5 countries by total sales revenue?",
            "How many orders were shipped via each shipping method?",
            "What is the total quantity of products sold for each month?",
            "Which product had the highest discount applied in the last six months?",
            "For each month, what is the number of orders placed and total revenue generated?",
            "What percentage of orders were shipped after the required date each month?",
            "Calculate the total freight cost incurred for each month.",
            "Identify the top 3 cities by the number of orders shipped to them in the last year.",
            "What is the total sales revenue generated for each product category?",
            "Find the number of unique customers who placed orders each month.",
            "Determine the total sales and average order value for orders that were delivered on time vs late.",
            "What is the average discount applied to orders each quarter?",
            "For each employee, what is the average fulfillment time for the orders they handled?",
            "What is the total sales for the current month?",
            "What is the average order value for the last quarter?",
            "How many orders were shipped on time this year?",
            "Which products have generated the highest total sales?",
            "What is the average time taken to fulfill an order each month?",
            "What is the total sales by country for the current year?",
            "Which customer made the highest number of orders last month?",
            "What is the total freight cost incurred this quarter?",
            "How many orders were placed by each employee last week?",
            "What is the monthly trend in average order value for the past year?",
            "How many orders were shipped more than a week late?",
            "Which shipping method is used the most?",
            "Which regions have the highest average order value?",
            "What is the percentage of orders that received a discount?",
            "What is the total sales for each product category this year?",
            "How many orders were placed by new customers this month?",
            "What is the average quantity of products ordered per order?",
            "How many unique products were ordered in the first half of this year?",
            "How many orders were placed on weekends in the last three months?",
            "What is the total revenue lost due to discounts this year?",
            "What is the total sales generated in February 2023?",
            "How many orders were placed by customer with ID 'CUST123'?",
            "What is the average order value for January 2023?",
            "List all orders that were shipped to 'Germany'.",
            "Calculate the order fulfillment time for orders placed in March 2023.",
            "Which shipping method was used most frequently in the first quarter of 2023?",
            "Identify customers who placed more than 10 orders in 2022.",
            "Find the total freight cost incurred in April 2023.",
            "Which product had the highest sales in Q2 2023?",
            "What percentage of orders were delivered on time in May 2023?",
            "List all orders that have a discount of more than 20%.",
            "Which employee processed the most orders in 2023?",
            "Find the total sales and the number of orders for each customer in March 2023.",
            "What is the average freight cost for orders shipped to 'France'?",
            "Determine the top 5 cities with the highest number of orders in 2023.",
            "Calculate the total sales generated from orders with a discount applied in June 2023.",
            "Which customer had the highest total sales in the second half of 2022?",
            "Find all orders that were not shipped by the required date.",
            "Calculate the average discount given per order in December 2022.",
            "Which product had the highest average unit price in Q3 2023?",
            "How many orders were placed by each customer?",
            "Which employee fulfilled the most orders?",
            "What is the average order value for the past year?",
            "How many distinct products were ordered this month?",
            "What is the total number of units sold for each product?",
            "How many orders were shipped late?",
            "What is the percentage of on-time deliveries for the past quarter?",
            "Which shipping method was used most frequently?",
            "What is the average fulfillment time of orders in days for the current month?",
            "What was the total freight cost incurred last month?",
            "What is the average discount applied per order?",
            "Which region had the highest number of orders?",
            "How many orders were cancelled?",
            "What is the revenue contribution of each employee?",
            "What is the total sales for each country?",
            "How many orders have freight costs greater than $50?",
            "Which customer placed the highest number of orders?",
            "What is the total sales revenue generated in the last month?",
            "Which product generated the highest sales revenue in the last year?",
            "How many orders were shipped late in the past month?",
            "What is the average time taken to fulfill an order this year?",
            "What is the on-time delivery rate for last month?",
            "Which customer placed the highest number of orders in the past year?",
            "What is the total freight cost for orders shipped by 'ShipVia' method 2 in the past month?",
            "Which shipping country had the highest number of orders in the past quarter?",
            "How many different products were sold in the last month?",
            "What is the total number of orders placed by each employee in the last year?",
            "Which month had the highest total sales this year?",
            "What is the average discount applied to orders last month?",
            "How many orders had a freight cost greater than $50 in the past year?",
            "Which city had the highest average order value in the past quarter?",
            "What is the total sales revenue generated by each product category in the last year?",
            "How many orders were required but not shipped by the required date last month?",
            "What is the total number of unique customers who placed orders in the last year?",
            "Which customer region had the highest average order fulfillment time in the past month?",
            "What is the count of orders and total freight cost grouped by shipping methods for the past month?",
            "What is the total sales revenue generated last month?",
            "What is the average value of orders placed in the last year?",
            "How long does it usually take to fulfill an order?",
            "What is the percentage of orders delivered on or before the required date?",
            "Which product generated the highest revenue last quarter?",
            "Which customers placed the most orders in the last month?",
            "What is the total freight cost for orders shipped last year?",
            "How many orders have been placed by each customer in total?",
            "What is the average discount given per order in the last week?",
            "Which employee handled the highest number of orders in the last quarter?",
            "How many orders were shipped late in the last month?",
            "What is the distribution of orders across different countries?",
            "What is the most frequently ordered product?",
            "Which month had the highest total sales revenue last year?",
            "How many different products were ordered in the last month?",
            "What is the average order quantity for each product?",
            "Which region has the highest order fulfillment time?",
            "Which customer received the highest total discount?",
            "What is the average freight cost per order in the last quarter?",
            "What is the total sales revenue generated in January 2023?",
            "How many orders were placed in January 2023?",
            "What was the average order value in January 2023?",
            "Who are the top 5 customers in terms of total sales revenue?",
            "What is the order fulfillment time for January 2023?",
            "Which shipping method was used the most in January 2023?",
            "What is the percentage of orders delivered on or before the required date in January 2023?",
            "What is the total sales revenue generated in February 2023?",
            "How many unique products were ordered in January 2023?",
            "What is the total freight cost for orders shipped in January 2023?",
            "Which product had the highest sales revenue in January 2023?",
            "How many orders included a discount in January 2023?",
            "Which employee processed the most orders in January 2023?",
            "In which city were the most orders delivered in January 2023?",
            "What is the total quantity of products sold in January 2023?",
            "What is the earliest order date in the database?",
            "How many orders have a freight cost greater than $50?",
            "Calculate the discount amount for each order in January 2023.",
            "Identify the order(s) with the highest total value in January 2023.",
            "Find the average discount applied to orders in January 2023.",
            "How many orders were placed each month?",
            "Which product generated the highest revenue?",
            "What is the total freight cost for each month?",
            "How many orders included more than 5 products?",
            "What is the total sales revenue for each country?",
            "Which shipping method is most frequently used?",
            "What is the total discount given in each month?",
            "Which city received the most orders?",
            "Which month had the highest sales revenue?",
            "What is the total sales revenue for each customer?",
            "How many orders were shipped after the required date?",
            "What is the average freight cost per order?",
            "Which product had the highest average discount?",
            "How many unique customers placed orders?",
            "Which products generated the highest revenue in the last year?",
            "Which employee handled the highest number of orders?",
            "What percentage of orders were delivered on time each month?",
            "What is the total freight cost incurred last month?",
            "What is the total number of products sold in each category last month?",
            "Identify the month-wise sales trend over the last year.",
            "How many orders were shipped to each country?",
            "Which customers have placed orders with a total value exceeding $500?",
            "What is the total discount given for each product category last year?",
            "What is the trend for the average order value over time?",
            "Which products are frequently ordered together?",
            "What is the distribution of order quantities?",
            "Track the monthly change in order fulfillment time.",
            "Which city has the highest number of orders shipped to?",
            "Calculate the top 5 customers based on their total order value.",
            "Which customer placed the most orders?",
            "What is the average order value by month?",
            "How many orders were placed by each employee?",
            "What is the overall average time taken to fulfill an order?",
            "Which orders shipped on time and which didn't?",
            "Calculate the monthly on-time delivery rate.",
            "Determine the total freight cost incurred each month.",
            "Identify the product that generated the highest revenue.",
            "Which customer order had the highest total value?",
            "What is the average discount given per order?",
            "Calculate the total quantity of products sold by each month.",
            "What is the percentage of orders delivered after the required date?",
            "Determine the city which received the most shipments.",
            "Calculate the average quantity of products ordered per order.",
            "What is the maximum, minimum, and average freight cost per order?",
            "How many unique products are ordered on average each month?",
            "Identify the country that placed the most orders.",
            "Find the most expensive product ordered in terms of unit price.",
            "Calculate the revenue generated per employee.",
            "What is the average value of orders placed each month?",
            "Which customers have placed the most orders?",
            "Which products have generated the highest sales revenue?",
            "What is the total discount given per product?",
            "How many orders did each employee manage?",
            "What is the average order fulfillment time each month?",
            "What is the total freight cost incurred each month?",
            "What is the percentage of orders delivered on or before the required date each month?",
            "How many orders were placed but not yet shipped?",
            "Which cities have the highest number of shipped orders?",
            "What is the average number of items per order?",
            "Which product had the highest discount given, on average?",
            "Which month had the highest total sales revenue?",
            "What is the cumulative sales revenue for the year?",
            "Which employee has managed the most number of orders that were delivered on time?",
            "What is the average discount applied to each order?",
            "Which customers are from the United States?",
            "Which regions generated the highest sales revenue?",
            "What was the total sales revenue for the month of January 2023?",
            "What is the average unit price of items sold in February 2023?",
            "Which shipping method was used the most in March 2023?",
            "How many orders were placed by each customer in April 2023?",
            "What was the total number of items ordered in May 2023?",
            "What was the average order value in June 2023?",
            "How many orders were shipped on-time in July 2023?",
            "What is the average order fulfillment time in August 2023?",
            "Which product generated the most revenue in September 2023?",
            "Which customer placed the highest number of orders in October 2023?",
            "What was the average discount applied in November 2023?",
            "List all orders placed by customer ID 'C123' in December 2023",
            "Which country had the highest total sales in the fourth quarter of 2023?",
            "Identify the employee who handled the most orders in 2023.",
            "What was the total freight cost incurred in 2023?",
            "Calculate the month-over-month growth rate of total sales for December 2023.",
            "Which product had the highest average discount in 2023?",
            "How many orders had a shipping delay in 2023?",
            "What is the average quantity of products ordered per order in 2023?",
            "How many orders were placed in the current year?",
            "Which product was ordered the most in terms of quantity?",
            "What is the average order value for last month?",
            "How many unique customers placed orders in the past year?",
            "What is the average fulfillment time for orders over the last three months?",
            "Which employee has handled the most orders?",
            "What is the percentage of orders that were delivered on or before the required date last month?",
            "How many orders were shipped via shipping method 2 in the current year?",
            "What is the total discount given on orders in the past year?",
            "Which country had the highest number of orders shipped to it last year?",
            "What is the average unit price of products ordered last week?",
            "How many orders got delayed (Shipped after the RequiredDate) last quarter?",
            "What is the total number of products ordered last month?",
            "What is the average discount applied to orders in the last year?",
            "How many orders had a freight cost greater than $100 last month?",
            "Which city received the highest number of shipments in the past quarter?",
            "What is the total sales revenue generated by EmployeeID 3?",
            "What was the busiest month for orders last year?",
            "What is the total sales revenue for the month of January 2023?",
            "What is the on-time delivery rate for the first half of 2023?",
            "What is the total sales revenue generated in the month of January 2023?",
            "What was the average order value in Q1 of 2023?",
            "Which product had the highest sales in 2022?",
            "How many orders were placed by each customer in the last quarter of 2022?",
            "What is the average order fulfillment time for the past six months?",
            "What percentage of orders were delivered on or before the required date in December 2022?",
            "List the top 5 customers by total sales revenue in 2023.",
            "How many orders were shipped via each shipping method in 2023?",
            "List the top 5 employees by number of orders handled in 2023.",
            "What is the total freight cost for orders shipped to 'USA' in 2023?",
            "Find the cities with the highest number of orders in 2023.",
            "List the top 5 products by total quantity sold in Q1 of 2023.",
            "Calculate the average discount given on orders in 2023.",
            "Identify the month with the highest total sales in 2022.",
            "Find the orders that were shipped late in 2022.",
            "Calculate the total sales revenue generated by each product category in Q2 of 2023.",
            "What is the average freight cost per order in 2022?",
            "How many orders were placed each day in the first week of January 2023?",
            "Find the average number of products per order in 2023.",
            "Identify the orders that were placed but never shipped in 2022.",
            "What is the total sales for each month?",
            "Which customer placed the highest value order?",
            "Which product is the most ordered?",
            "What is the total sales from each customer?",
            "Which city has the most shipped orders?",
            "What is the total sales for each product?",
            "What is the total number of orders for each employee?",
            "What is the average discount given on orders?",
            "Which region has the highest total sales?",
            "What is the total revenue generated from orders with over 20 items?",
            "How many orders include a discount greater than 10%?",
            "What is the average ship-to-order duration for each shipping method?",
            "What is the total sales value for the last month?",
            "What is the average order value for each month in the last year?",
            "Which customer placed the most orders last month?",
            "How many orders have been placed by each customer?",
            "What is the average order value by customer?",
            "Which employees have fulfilled the highest number of orders?",
            "Which shipping method was used most frequently last month?",
            "What is the total freight cost for orders shipped to each country?",
            "What is the average fulfillment time for orders by month?",
            "What is the on-time delivery rate for orders by month?",
            "Which city has the highest number of orders shipped to in the last year?",
            "What is the total sales for each product category?",
            "Which customers received the highest amount of discount on their orders?",
            "What is the total number of products ordered by each employee?",
            "Which products had the highest quantity ordered in the last year?",
            "What is the total sales generated by employee for the last month?",
            "What is the average order fulfillment time by employee?",
            "Which region had the highest sales in the last quarter?",
            "What is the total sales revenue generated in each month?",
            "What is the average order value per month?",
            "What is the on-time delivery rate per month?",
            "For which shipping method are the most orders shipped?",
            "Which product has generated the highest revenue?",
            "What is the total quantity of each product sold?",
            "How many unique customers placed orders each month?",
            "What is the average discount applied to products per month?",
            "Which regions have the highest total sales?",
            "What is the total freight cost incurred per month?",
            "Which city has received the most shipped orders?",
            "What is the total revenue generated from orders handled by each employee?",
            "Which customer has generated the highest total sales revenue?",
            "What is the number of orders placed each day?",
            "What is the average order fulfillment time for each employee?",
            "What was the total sales for the month of January 2023?",
            "What is the average order value for the month of February 2023?",
            "Which country had the highest total sales in 2022?",
            "Which product generated the most revenue in Q1 2023?",
            "Which customer placed the most orders in 2022?",
            "What is the average order fulfillment time for March 2023?",
            "What percentage of orders were delivered on-time in April 2023?",
            "How many orders were placed by each employee in Q2 2023?",
            "What was the total freight cost for shipments to the USA in May 2023?",
            "Which month had the highest total sales in 2022?",
            "How many orders included a discount greater than 20% in 2022?",
            "Which city received the highest number of shipments in July 2023?",
            "How many orders were shipped over a week late in August 2023?",
            "What is the distribution of orders by shipping method for September 2023?",
            "What is the total revenue generated by product categories in 2022?",
            "How many orders were placed by each customer in 2022?",
            "What is the median order value for the month of October 2023?",
            "How many unique customers placed orders in November 2023?",
            "Which employee achieved the highest sales in 2022?",
            "What was the total sales for each quarter of 2022?",
            "What is the total sales revenue generated each month?",
            "How long does it typically take to fulfill an order on average each month?",
            "What is the percentage of orders that were shipped on or before the required date each month?",
            "What is the total sales revenue generated by each customer?",
            "What is the average time taken to ship orders by each employee?",
            "Which product has the highest total sales revenue?",
            "What are the top 5 products by sales revenue?",
            "How many distinct customers placed orders each month?",
            "Which region generated the highest sales revenue?",
            "What is the total discount given each month?",
            "Calculate the total sales revenue for orders shipped late.",
            "Identify orders that had the highest freight cost.",
            "Which shipper has the highest on-time delivery rate?",
            "How many orders were shipped after the required date each month?",
            "Which country has the most orders with a discount applied?",
            "What is the average discount given across all orders?",
            "What is the sales trend for each product category?",
            "What is the average unit price for the products ordered each month?",
            "What was the total sales revenue generated each month in the year 2022?",
            "Which customer placed the highest number of orders in the year 2022?",
            "What are the top 5 products with the highest total sales revenue in 2022?",
            "Find the average fulfillment time for orders delivered in January 2022.",
            "What percentage of orders were delivered on or before the required date in 2022?",
            "Which month in 2022 had the highest total sales revenue?",
            "How many orders were placed by customers in each country in 2022?",
            "Identify the orders that had a fulfillment time of more than 30 days in 2022.",
            "Find the total freight cost for all orders shipped via each shipping method in 2022.",
            "What was the average order value each month for the year 2022?",
            "How many orders were placed by EmployeeID = 5 in 2022?",
            "Which city had the highest total number of orders in 2022?",
            "Which customer had the highest total sales revenue in 2022?",
            "Calculate the total number of orders placed, broken down by month for the year 2022.",
            "Which shipping method was used most frequently in 2022?",
            "Find the total discounts given across all orders in 2022.",
            "What is the total number of unique customers who placed orders in 2022?",
            "What is the average discount applied per order in 2022?",
            "Identify the top 5 employees by the number of orders managed in 2022.",
            "Calculate the monthly on-time delivery rate for the year 2022.",
            "How many orders were placed on each day?",
            "Which orders have a fulfillment time greater than 7 days?",
            "Which customer placed the most orders in the last year?",
            "What is the total freight cost for each shipping method?",
            "How many products have a discount greater than 10%?",
            "Which city has the highest number of orders?",
            "What are the top 5 products by sales volume?",
            "How many orders have a quantity greater than 100?",
            "Which employee handled the most number of orders?",
            "Find the order IDs of orders that were shipped to 'USA'.",
            "What is the total revenue generated by each employee?",
            "List the orders that have a freight cost greater than $100.",
            "Calculate the number of orders that were not delivered on time.",
            "What are the total sales from orders placed in '2023-03'?",
            "What is the total sales for the month of January 2023?",
            "What is the average order value for the month of January 2023?",
            "Which products have been ordered the most in 2023?",
            "How many orders were fulfilled within the promised shipping window in 2023?",
            "What is the average order fulfillment time for orders made in February 2023?",
            "List the top 5 countries by total sales in 2023.",
            "What is the total freight cost incurred for shipments in March 2023?",
            "Which employee had the highest total sales in Q1 of 2023?",
            "What is the percentage of orders delivered on or before the required date in April 2023?",
            "How many different products were ordered in 2023?",
            "What was the total sales for each month in 2023?",
            "What is the average discount applied per order in Q2 of 2023?",
            "Find the top 5 customers by total sales in 2023.",
            "Which city had the highest number of orders shipped to in 2023?",
            "What was the highest single order value in 2023?",
            "Which product had the highest total sales in March 2023?",
            "What is the average number of items per order in 2023?",
            "Which shipping method was used the most in Q1 of 2023?",
            "What is the average freight cost per order in Q2 of 2023?",
            "How many orders were shipped after the required date in 2023?"
        ],
        "sql_queries": [
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = MONTH(CURRENT_DATE) AND YEAR(o.OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = MONTH(CURRENT_DATE) AND YEAR(o.OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT COUNT(*) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS ProductRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY od.ProductID ORDER BY ProductRevenue DESC;",
            "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgFulfillmentTime FROM orders o WHERE MONTH(o.OrderDate) = MONTH(CURRENT_DATE) AND YEAR(o.OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM orders o WHERE o.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH)) AS OnTimeRate FROM orders o WHERE o.ShippedDate <= o.RequiredDate AND o.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH);",
            "SELECT ShipVia, COUNT(*) AS Frequency FROM orders GROUP BY ShipVia ORDER BY Frequency DESC;",
            "SELECT COUNT(*) AS OnTimeDeliveries FROM orders WHERE ShippedDate <= RequiredDate AND OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE MONTH(OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY CustomerID ORDER BY TotalOrderValue DESC;",
            "SELECT EmployeeID, COUNT(*) AS OrdersProcessed FROM orders GROUP BY EmployeeID;",
            "SELECT ShipCity, COUNT(*) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC;",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "SELECT * FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT ShipRegion, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipRegion ORDER BY TotalFreight DESC;",
            "SELECT CustomerID, COUNT(*) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY MONTH(o.OrderDate) ORDER BY Month;",
            "SELECT AVG(od.Quantity) AS AvgProductsPerOrder FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID;",
            "SELECT p.CategoryID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.CategoryID;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE QUARTER(OrderDate) = QUARTER(CURDATE() - INTERVAL 3 MONTH);",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalRevenue FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) - 1 GROUP BY ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(OrderDate) = 7 AND YEAR(OrderDate) = YEAR(CURDATE());",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE ShippedDate IS NOT NULL;",
            "SELECT (COUNT(OrderID) / (SELECT COUNT(OrderID) FROM orders WHERE MONTH(OrderDate) = MONTH(CURDATE()) - 1)) * 100 AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND MONTH(OrderDate) = MONTH(CURDATE()) - 1;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders WHERE WEEK(OrderDate) = WEEK(CURDATE()) AND YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 3 MONTH GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');",
            "SELECT OrderID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY OrderID ORDER BY TotalOrderValue DESC LIMIT 1;",
            "SELECT AVG(Quantity) AS AverageItemsPerOrder FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE QUARTER(OrderDate) = QUARTER(CURDATE()) AND YEAR(OrderDate) = YEAR(CURDATE()));",
            "SELECT ProductID, SUM(Quantity) AS TotalUnitsSold FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = MONTH(CURDATE()) - 1 AND YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY ProductID ORDER BY TotalUnitsSold DESC LIMIT 1;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= CURDATE() - INTERVAL 1 YEAR GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m') ORDER BY Month;",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreightCost FROM orders WHERE orders.OrderDate >= CURDATE() - INTERVAL 6 MONTH GROUP BY ShipCountry;",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY CustomerID ORDER BY TotalSales DESC LIMIT 10;",
            "SELECT COUNT(OrderID) AS PendingOrders FROM orders WHERE ShippedDate IS NULL;",
            "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY DATEDIFF(ShippedDate, OrderDate)) AS MedianFulfillmentTime FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 6 MONTH;",
            "SELECT * FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) > 10 AND DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = 1 AND YEAR(orders.OrderDate) = 2022;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-03-31') GROUP BY ProductID ORDER BY TotalQuantity DESC;",
            "SELECT CustomerID, COUNT(OrderID) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = 2021 GROUP BY CustomerID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2021;",
            "SELECT COUNT(OrderID) FROM orders WHERE YEAR(orders.OrderDate) = 2020 AND ShippedDate <= RequiredDate;",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE MONTH(OrderDate) = 2 AND YEAR(OrderDate) = 2022;",
            "SELECT COUNT(DISTINCT CustomerID) FROM orders WHERE MONTH(OrderDate) = 3 AND YEAR(OrderDate) = 2022;",
            "SELECT ShipVia, COUNT(OrderID) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = 2021 GROUP BY ShipVia ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE MONTH(OrderDate) = 12 AND YEAR(OrderDate) = 2021;",
            "SELECT (SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders WHERE YEAR(OrderDate) = 2021;",
            "SELECT EmployeeID, COUNT(OrderID) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = 2021 GROUP BY EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2021;",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2021 GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT YEAR(OrderDate) AS Year, MONTH(OrderDate) AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2021 GROUP BY YEAR(OrderDate), MONTH(OrderDate);",
            "SELECT CustomerID, COUNT(OrderID) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = 2021 GROUP BY CustomerID, MONTH(OrderDate) HAVING COUNT(OrderID) > 5;",
            "SELECT YEAR(OrderDate) AS Year, MONTH(OrderDate) AS Month, AVG(Freight) AS AverageFreight FROM orders WHERE YEAR(OrderDate) = 2021 GROUP BY YEAR(OrderDate), MONTH(OrderDate);",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2021 GROUP BY CustomerID;",
            "SELECT OrderID FROM orders WHERE YEAR(OrderDate) = 2021 AND DATEDIFF(ShippedDate, OrderDate) > 10;",
            "SELECT ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2021 GROUP BY ShipRegion ORDER BY TotalSales DESC LIMIT 3;",
            "SELECT YEAR(OrderDate) AS Year, MONTH(OrderDate) AS Month, (SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders WHERE YEAR(OrderDate) = 2021 GROUP BY YEAR(OrderDate), MONTH(OrderDate);",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(IF(ShippedDate <= RequiredDate, 1, NULL)) / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY TotalSales DESC",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) - 1 GROUP BY CustomerID ORDER BY OrderCount DESC",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY EmployeeID ORDER BY OrderCount DESC",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry ORDER BY TotalSales DESC LIMIT 5",
            "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipVia ORDER BY OrderCount DESC",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT [Order Details].ProductID, MAX([Order Details].Discount) AS MaxDiscount FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH)) GROUP BY [Order Details].ProductID ORDER BY MaxDiscount DESC LIMIT 1",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, COUNT(orders.OrderID) AS OrderCount, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN ShippedDate > RequiredDate THEN 1 END) / COUNT(OrderID) AS LateDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) - 1 GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 3",
            "SELECT ProductCategory, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductCategory ORDER BY TotalSales DESC",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT OnTime, SUM(TotalSales) AS TotalSales, AVG(OrderValue) AS AvgOrderValue FROM (SELECT IF(ShippedDate <= RequiredDate, 'On Time', 'Late') AS OnTime, orders.OrderID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS OrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID, OnTime) AS Sales GROUP BY OnTime",
            "SELECT QUARTER(OrderDate) AS Quarter, AVG(Discount) AS AvgDiscount FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID GROUP BY QUARTER(OrderDate) ORDER BY Quarter",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY EmployeeID",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) AND MONTH(orders.OrderDate) = MONTH(CURDATE())",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)",
            "SELECT COUNT(OrderID) AS OnTimeOrders FROM orders WHERE ShippedDate <= RequiredDate AND YEAR(OrderDate) = YEAR(CURDATE())",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS ProductSales FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY ProductSales DESC LIMIT 10",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY Month",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY ShipCountry",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) AND MONTH(OrderDate) = MONTH(CURDATE()) - 1 GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) GROUP BY EmployeeID",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Month ORDER BY Month",
            "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 7",
            "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipVia ORDER BY OrderCount DESC",
            "SELECT ShipRegion, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipRegion ORDER BY AverageOrderValue DESC",
            "SELECT COUNT(DISTINCT [Order Details].OrderID) * 100.0 / COUNT(DISTINCT orders.OrderID) AS DiscountRate FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE [Order Details].Discount > 0",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY categories.CategoryName",
            "SELECT COUNT(OrderID) AS NewCustomerOrders FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH AND CustomerID NOT IN (SELECT CustomerID FROM orders WHERE OrderDate < CURDATE() - INTERVAL 1 MONTH)",
            "SELECT AVG([Order Details].Quantity) AS AverageQuantity FROM [Order Details]",
            "SELECT COUNT(DISTINCT [Order Details].ProductID) AS UniqueProducts FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH)",
            "SELECT COUNT(OrderID) AS WeekendOrders FROM orders WHERE DAYOFWEEK(OrderDate) IN (1, 7) AND OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS LostRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE())",
            "SELECT SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-02';",
            "SELECT COUNT(*) AS OrderCount FROM orders WHERE CustomerID = 'CUST123';",
            "SELECT SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) / COUNT(DISTINCT O.OrderID) AS AverageOrderValue FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-01';",
            "SELECT * FROM orders WHERE ShipCountry = 'Germany';",
            "SELECT AVG(DATEDIFF(O.ShippedDate, O.OrderDate)) AS FulfillmentTime FROM orders O WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-03';",
            "SELECT O.ShipVia, COUNT(*) AS UsageCount FROM orders O WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') IN ('2023-01', '2023-02', '2023-03') GROUP BY O.ShipVia ORDER BY UsageCount DESC LIMIT 1;",
            "SELECT CustomerID, COUNT(*) AS OrderCount FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2022' GROUP BY CustomerID HAVING OrderCount > 10;",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-04';",
            "SELECT OD.ProductID, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') IN ('2023-04', '2023-05', '2023-06') GROUP BY OD.ProductID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM orders O WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-05') AS OnTimeDeliveryRate FROM orders O WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-05' AND O.ShippedDate <= O.RequiredDate;",
            "SELECT O.OrderID, OD.* FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE OD.Discount > 0.20;",
            "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2023' GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT O.CustomerID, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales, COUNT(O.OrderID) AS OrderCount FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-03' GROUP BY O.CustomerID;",
            "SELECT AVG(Freight) AS AverageFreight FROM orders WHERE ShipCountry = 'France';",
            "SELECT O.ShipCity, COUNT(*) AS OrderCount FROM orders O WHERE DATE_FORMAT(O.OrderDate, '%Y') = '2023' GROUP BY O.ShipCity ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-06' AND OD.Discount > 0;",
            "SELECT O.CustomerID, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') IN ('2022-07', '2022-08', '2022-09', '2022-10', '2022-11', '2022-12') GROUP BY O.CustomerID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT * FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT AVG(OD.Discount) AS AverageDiscount FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2022-12';",
            "SELECT OD.ProductID, AVG(OD.UnitPrice) AS AverageUnitPrice FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') IN ('2023-07', '2023-08', '2023-09') GROUP BY OD.ProductID ORDER BY AverageUnitPrice DESC LIMIT 1;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AverageOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE())",
            "SELECT COUNT(DISTINCT ProductID) AS DistinctProducts FROM [Order Details] WHERE DATE_FORMAT(OrderID, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m')",
            "SELECT ProductID, SUM(Quantity) AS TotalUnits FROM [Order Details] GROUP BY ProductID",
            "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate",
            "SELECT COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*) * 100 AS OnTimeDeliveryRate FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') >= DATE_FORMAT(NOW() - INTERVAL 3 MONTH, '%Y-%m')",
            "SELECT ShipVia, COUNT(OrderID) AS UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m')",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y-%m')",
            "SELECT AVG(od.Discount) AS AvgDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID",
            "SELECT ShipRegion, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipRegion ORDER BY OrderCount DESC LIMIT 1",
            "SELECT COUNT(*) AS CancelledOrders FROM orders WHERE ShippedDate IS NULL",
            "SELECT EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS EmployeeSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY EmployeeID",
            "SELECT ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCountry",
            "SELECT COUNT(*) AS OrdersWithHighFreightCost FROM orders WHERE Freight > 50",
            "SELECT CustomerID, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY CustomerID ORDER BY OrdersCount DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS ProductSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= CURDATE() - INTERVAL 1 YEAR GROUP BY ProductID ORDER BY ProductSales DESC LIMIT 1;",
            "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate AND OrderDate >= CURDATE() - INTERVAL 1 MONTH;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE());",
            "SELECT COUNT(OrderID) / (SELECT COUNT(OrderID) FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND OrderDate >= CURDATE() - INTERVAL 1 MONTH;",
            "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 YEAR GROUP BY CustomerID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipVia = 2 AND OrderDate >= CURDATE() - INTERVAL 1 MONTH;",
            "SELECT ShipCountry, COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 3 MONTH GROUP BY ShipCountry ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT ProductID) AS TotalProductsSold FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH);",
            "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 YEAR GROUP BY EmployeeID;",
            "SELECT MONTH(OrderDate) AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY MONTH(OrderDate) ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH);",
            "SELECT COUNT(OrderID) AS OrdersCount FROM orders WHERE Freight > 50 AND OrderDate >= CURDATE() - INTERVAL 1 YEAR;",
            "SELECT ShipCity, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= CURDATE() - INTERVAL 3 MONTH GROUP BY ShipCity ORDER BY AvgOrderValue DESC LIMIT 1;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= CURDATE() - INTERVAL 1 YEAR GROUP BY ProductID;",
            "SELECT COUNT(OrderID) AS UnshippedOrders FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH AND (ShippedDate > RequiredDate OR ShippedDate IS NULL);",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 YEAR;",
            "SELECT ShipRegion, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH GROUP BY ShipRegion ORDER BY AvgFulfillmentTime DESC;",
            "SELECT ShipVia, COUNT(OrderID) AS TotalOrders, SUM(Freight) AS TotalFreightCost FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH GROUP BY ShipVia;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Sales_Revenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH);",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS Average_Order_Value FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= CURDATE() - INTERVAL 1 YEAR;",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS Average_Fulfillment_Time FROM orders;",
            "SELECT COUNT(orders.OrderID) WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(*) * 100 AS On_time_Delivery_Rate FROM orders;",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Revenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE QUARTER(orders.OrderDate) = QUARTER(CURRENT_DATE - INTERVAL 1 QUARTER) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 QUARTER) GROUP BY [Order Details].ProductID ORDER BY Total_Revenue DESC LIMIT 1;",
            "SELECT orders.CustomerID, COUNT(orders.OrderID) AS Total_Orders FROM orders WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH) GROUP BY orders.CustomerID ORDER BY Total_Orders DESC;",
            "SELECT SUM(orders.Freight) AS Total_Freight_Cost FROM orders WHERE orders.OrderDate >= CURDATE() - INTERVAL 1 YEAR;",
            "SELECT orders.CustomerID, COUNT(orders.OrderID) AS Total_Orders FROM orders GROUP BY orders.CustomerID;",
            "SELECT AVG([Order Details].Discount) AS Average_Discount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);",
            "SELECT orders.EmployeeID, COUNT(orders.OrderID) AS Total_Orders FROM orders WHERE QUARTER(orders.OrderDate) = QUARTER(CURRENT_DATE - INTERVAL 1 QUARTER) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 QUARTER) GROUP BY orders.EmployeeID ORDER BY Total_Orders DESC;",
            "SELECT COUNT(orders.OrderID) AS Late_Orders FROM orders WHERE orders.RequiredDate < orders.ShippedDate AND MONTH(orders.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH);",
            "SELECT orders.ShipCountry, COUNT(orders.OrderID) AS Total_Orders FROM orders GROUP BY orders.ShipCountry;",
            "SELECT [Order Details].ProductID, COUNT([Order Details].OrderID) AS Frequency FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY Frequency DESC LIMIT 1;",
            "SELECT MONTH(orders.OrderDate) AS OrderMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Sales_Revenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 YEAR) GROUP BY OrderMonth ORDER BY Total_Sales_Revenue DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT [Order Details].ProductID) AS Unique_Products FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH);",
            "SELECT [Order Details].ProductID, AVG([Order Details].Quantity) AS Average_Quantity FROM [Order Details] GROUP BY [Order Details].ProductID;",
            "SELECT orders.ShipRegion, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS Average_Fulfillment_Time FROM orders GROUP BY orders.ShipRegion ORDER BY Average_Fulfillment_Time DESC;",
            "SELECT orders.CustomerID, SUM([Order Details].Discount) AS Total_Discount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.CustomerID ORDER BY Total_Discount DESC LIMIT 1;",
            "SELECT SUM(orders.Freight) / COUNT(orders.OrderID) AS Average_Freight_Cost FROM orders WHERE QUARTER(orders.OrderDate) = QUARTER(CURRENT_DATE - INTERVAL 1 QUARTER) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 QUARTER);",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY CustomerID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgFulfillmentTime FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT ShipVia, COUNT(ShipVia) AS UsageCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1;",
            "SELECT COUNT(o.OrderID) * 1.0 / COUNT(c.OrderID) AS OnTimeDeliveryRate FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' AND o.ShippedDate <= o.RequiredDate;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-02-01' AND '2023-02-28';",
            "SELECT COUNT(DISTINCT od.ProductID) AS UniqueProducts FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY od.ProductID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT o.OrderID) AS DiscountedOrders FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' AND od.Discount > 0;",
            "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY EmployeeID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT ShipCity, COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY ShipCity ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT SUM(Quantity) AS TotalQuantity FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT MIN(OrderDate) AS EarliestOrderDate FROM orders;",
            "SELECT COUNT(OrderID) AS OrdersWithHighFreight FROM orders WHERE Freight > 50;",
            "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS DiscountAmount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY o.OrderID;",
            "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY o.OrderID ORDER BY TotalValue DESC LIMIT 1;",
            "SELECT AVG(od.Discount) AS AvgDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT DATE_TRUNC('month', OrderDate) AS Month, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY DATE_TRUNC('month', OrderDate);",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS ProductRevenue FROM [Order Details] GROUP BY ProductID ORDER BY ProductRevenue DESC LIMIT 1;",
            "SELECT DATE_TRUNC('month', o.OrderDate) AS Month, SUM(o.Freight) AS TotalFreight FROM orders o GROUP BY DATE_TRUNC('month', o.OrderDate);",
            "SELECT COUNT(OrderID) AS OrderCount FROM (SELECT o.OrderID, COUNT(od.ProductID) AS ProductCount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID HAVING COUNT(od.ProductID) > 5) AS subquery;",
            "SELECT o.ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipCountry;",
            "SELECT o.ShipVia, COUNT(o.OrderID) AS OrderCount FROM orders o GROUP BY o.ShipVia ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT DATE_TRUNC('month', o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY DATE_TRUNC('month', o.OrderDate);",
            "SELECT o.ShipCity, COUNT(o.OrderID) AS OrderCount FROM orders o GROUP BY o.ShipCity ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT DATE_TRUNC('month', o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY DATE_TRUNC('month', o.OrderDate) ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT o.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.CustomerID;",
            "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT AVG(Freight) AS AvgFreightCost FROM orders;",
            "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY AvgDiscount DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Revenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY od.ProductID ORDER BY Revenue DESC;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(*) AS OnTimeDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE OrderDate >= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y-%m-01') AND OrderDate < DATE_FORMAT(NOW(), '%Y-%m-01');",
            "SELECT p.CategoryID, SUM(od.Quantity) AS TotalQuantitySold FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderDate >= DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y-%m-01') AND o.OrderDate < DATE_FORMAT(NOW(), '%Y-%m-01') GROUP BY p.CategoryID;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY DATE_FORMAT(o.OrderDate, '%Y-%m');",
            "SELECT ShipCountry, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipCountry;",
            "SELECT CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY CustomerID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 500;",
            "SELECT p.CategoryID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY p.CategoryID;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY DATE_FORMAT(o.OrderDate, '%Y-%m');",
            "SELECT od1.ProductID AS ProductA, od2.ProductID AS ProductB, COUNT(*) AS Frequency FROM [Order Details] od1 JOIN [Order Details] od2 ON od1.OrderID = od2.OrderID AND od1.ProductID < od2.ProductID GROUP BY od1.ProductID, od2.ProductID ORDER BY Frequency DESC LIMIT 10;",
            "SELECT Quantity, COUNT(*) AS Frequency FROM [Order Details] GROUP BY Quantity ORDER BY Frequency DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT ShipCity, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipCity ORDER BY TotalOrders DESC;",
            "SELECT CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY CustomerID ORDER BY TotalOrderValue DESC LIMIT 5;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AverageOrderValue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID GROUP BY Month;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders;",
            "SELECT OrderID, IF(ShippedDate <= RequiredDate, 'On Time', 'Late') AS DeliveryStatus FROM orders;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, 100.0 * SUM(IF(ShippedDate <= RequiredDate, 1, 0)) / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY Month;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od GROUP BY od.ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS OrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID ORDER BY OrderValue DESC LIMIT 1;",
            "SELECT AVG(od.Discount) AS AverageDiscount FROM [Order Details] od;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.Quantity) AS TotalQuantity FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY Month;",
            "SELECT 100.0 * SUM(IF(ShippedDate > RequiredDate, 1, 0)) / COUNT(OrderID) AS LateDeliveryRate FROM orders;",
            "SELECT ShipCity, COUNT(OrderID) AS ShipmentCount FROM orders GROUP BY ShipCity ORDER BY ShipmentCount DESC LIMIT 1;",
            "SELECT AVG(od.Quantity) AS AverageQuantity FROM [Order Details] od;",
            "SELECT MAX(Freight) AS MaxFreight, MIN(Freight) AS MinFreight, AVG(Freight) AS AvgFreight FROM orders;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, AVG(COUNT(DISTINCT od.ProductID)) AS AverageUniqueProducts FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY Month;",
            "SELECT ShipCountry, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCountry ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT ProductID, MAX(UnitPrice) AS MaxUnitPrice FROM [Order Details] GROUP BY ProductID ORDER BY MaxUnitPrice DESC LIMIT 1;",
            "SELECT o.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Revenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.EmployeeID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AverageOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC",
            "SELECT ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS ProductRevenue FROM [Order Details] od GROUP BY ProductID ORDER BY ProductRevenue DESC",
            "SELECT ProductID, SUM(Discount * Quantity) AS TotalDiscount FROM [Order Details] GROUP BY ProductID",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreight FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate) / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT COUNT(OrderID) AS NotShippedOrderCount FROM orders WHERE ShippedDate IS NULL",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE ShippedDate IS NOT NULL GROUP BY ShipCity ORDER BY OrderCount DESC",
            "SELECT AVG(Quantity) AS AvgItemsPerOrder FROM [Order Details]",
            "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY AvgDiscount DESC LIMIT 1",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY TotalSales DESC LIMIT 1",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS YearlySales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(OrderDate) = YEAR(CURDATE())",
            "SELECT EmployeeID, COUNT(OrderID) AS OnTimeOrders FROM orders WHERE ShippedDate <= RequiredDate GROUP BY EmployeeID ORDER BY OnTimeOrders DESC LIMIT 1",
            "SELECT AVG(Discount) AS AvgDiscountPerOrder FROM [Order Details]",
            "SELECT CustomerID FROM orders WHERE ShipCountry = 'USA'",
            "SELECT ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS RegionRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipRegion ORDER BY RegionRevenue DESC",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-01';",
            "SELECT AVG(od.UnitPrice) AS AvgUnitPrice FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-02';",
            "SELECT o.ShipVia, COUNT(*) AS ShippingMethodCount FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-03' GROUP BY o.ShipVia ORDER BY ShippingMethodCount DESC LIMIT 1;",
            "SELECT o.CustomerID, COUNT(*) AS OrderCount FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-04' GROUP BY o.CustomerID;",
            "SELECT SUM(od.Quantity) AS TotalItemsOrdered FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-05';",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-06';",
            "SELECT COUNT(o.OrderID) AS OnTimeOrders FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-07' AND o.ShippedDate <= o.RequiredDate;",
            "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgFulfillmentTime FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-08';",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-09' GROUP BY od.ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT o.CustomerID, COUNT(*) AS OrderCount FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-10' GROUP BY o.CustomerID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT AVG(od.Discount) AS AvgDiscount FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-11';",
            "SELECT * FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-12' AND o.CustomerID = 'C123';",
            "SELECT o.ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') IN ('2023-10', '2023-11', '2023-12') GROUP BY o.ShipCountry ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT o.EmployeeID, COUNT(*) AS OrderCount FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y') = '2023' GROUP BY o.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT SUM(o.Freight) AS TotalFreightCost FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y') = '2023';",
            "SELECT (SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) - LAG(SUM(od.UnitPrice * od.Quantity * (1 - od.Discount))) OVER (ORDER BY DATE_FORMAT(o.OrderDate, '%Y-%m'))) / LAG(SUM(od.UnitPrice * od.Quantity * (1 - od.Discount))) OVER (ORDER BY DATE_FORMAT(o.OrderDate, '%Y-%m') ) AS MoM_GrowthRate FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') IN ('2023-11', '2023-12');",
            "SELECT od.ProductID, AVG(od.Discount) AS AvgDiscount FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y') = '2023' GROUP BY od.ProductID ORDER BY AvgDiscount DESC LIMIT 1;",
            "SELECT COUNT(o.OrderID) AS DelayedOrders FROM orders o WHERE DATE_FORMAT(o.OrderDate, '%Y') = '2023' AND o.ShippedDate > o.RequiredDate;",
            "SELECT AVG(od.Quantity) AS AvgQuantity FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y') = '2023';",
            "SELECT COUNT(*) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AverageOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 SECOND MONTH);",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);",
            "SELECT EmployeeID, COUNT(*) AS TotalOrders FROM orders GROUP BY EmployeeID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT (COUNT(*) * 100) / (SELECT COUNT(*) FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 SECOND MONTH)) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 SECOND MONTH);",
            "SELECT COUNT(*) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURRENT_DATE) AND ShipVia = 2;",
            "SELECT SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT ShipCountry, COUNT(*) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) GROUP BY ShipCountry ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);",
            "SELECT COUNT(*) AS DelayedOrders FROM orders WHERE ShippedDate > RequiredDate AND OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);",
            "SELECT SUM(Quantity) AS TotalProductsOrdered FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 SECOND MONTH);",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT COUNT(*) AS HighFreightOrders FROM orders WHERE Freight > 100 AND OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT ShipCity, COUNT(*) AS TotalShipments FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY ShipCity ORDER BY TotalShipments DESC LIMIT 1;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.EmployeeID = 3;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS BusiestMonth, COUNT(*) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY BusiestMonth ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(OrderDate) = 1 AND YEAR(OrderDate) = 2023;",
            "SELECT COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE NULL END) * 100.0 / COUNT(OrderID) AS OnTimeRate FROM orders WHERE YEAR(OrderDate) = 2023 AND MONTH(OrderDate) <= 6;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 1",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2022-10-01' AND '2022-12-31' GROUP BY CustomerID",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE OrderDate BETWEEN DATE_ADD(CURDATE(), INTERVAL -6 MONTH) AND CURDATE()",
            "SELECT COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(OrderID) * 100 AS OnTimeDeliveryRate FROM orders WHERE OrderDate BETWEEN '2022-12-01' AND '2022-12-31'",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY CustomerID ORDER BY TotalSales DESC LIMIT 5",
            "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ShipVia",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 5",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCountry = 'USA' AND OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ShipCity ORDER BY OrderCount DESC",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 5",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(OrderDate, '%Y') = '2022' GROUP BY Month ORDER BY TotalSales DESC LIMIT 1",
            "SELECT OrderID FROM orders WHERE ShippedDate > RequiredDate AND DATE_FORMAT(OrderDate, '%Y') = '2022'",
            "SELECT products.ProductCategory, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY products.ProductCategory",
            "SELECT AVG(Freight) AS AvgFreightCost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2022'",
            "SELECT OrderDate, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-07' GROUP BY OrderDate",
            "SELECT AVG([Order Details].Quantity) AS AvgProductsPerOrder FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE DATE_FORMAT(OrderDate, '%Y') = '2023'",
            "SELECT OrderID FROM orders WHERE ShippedDate IS NULL AND DATE_FORMAT(OrderDate, '%Y') = '2022'",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY DATE_FORMAT(o.OrderDate, '%Y-%m')",
            "SELECT o.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS OrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.CustomerID ORDER BY OrderValue DESC LIMIT 1",
            "SELECT ProductID, COUNT(ProductID) AS ProductCount FROM [Order Details] GROUP BY ProductID ORDER BY ProductCount DESC LIMIT 1",
            "SELECT o.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.CustomerID",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 1",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM [Order Details] od GROUP BY od.ProductID ORDER BY TotalSales DESC",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details]",
            "SELECT ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipRegion ORDER BY TotalSales DESC",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE od.Quantity > 20",
            "SELECT COUNT(OrderID) AS DiscountedOrders FROM [Order Details] WHERE Discount > 0.10",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShipDuration FROM orders GROUP BY ShipVia",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATEADD(MONTH, -1, DATE_TRUNC('month', CURRENT_DATE))",
            "SELECT EXTRACT(MONTH FROM orders.OrderDate) AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATEADD(YEAR, -1, CURRENT_DATE) GROUP BY EXTRACT(MONTH FROM orders.OrderDate)",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATEADD(MONTH, -1, DATE_TRUNC('month', CURRENT_DATE)) GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC",
            "SELECT ShipVia, COUNT(OrderID) AS ShipCount FROM orders WHERE OrderDate >= DATEADD(MONTH, -1, DATE_TRUNC('month', CURRENT_DATE)) GROUP BY ShipVia ORDER BY ShipCount DESC",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCountry",
            "SELECT EXTRACT(MONTH FROM OrderDate) AS Month, AVG(DATEDIFF(DAY, OrderDate, ShippedDate)) AS AvgFulfillmentTime FROM orders GROUP BY EXTRACT(MONTH FROM OrderDate)",
            "SELECT EXTRACT(MONTH FROM OrderDate) AS Month, COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY EXTRACT(MONTH FROM OrderDate)",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATEADD(YEAR, -1, CURRENT_DATE) GROUP BY ShipCity ORDER BY OrderCount DESC",
            "SELECT CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY CategoryName",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID ORDER BY TotalDiscount DESC",
            "SELECT EmployeeID, SUM([Order Details].Quantity) AS TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY EmployeeID",
            "SELECT ProductID, SUM([Order Details].Quantity) AS TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATEADD(YEAR, -1, CURRENT_DATE) GROUP BY ProductID ORDER BY TotalQuantity DESC",
            "SELECT EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATEADD(MONTH, -1, DATE_TRUNC('month', CURRENT_DATE)) GROUP BY EmployeeID ORDER BY TotalSales DESC",
            "SELECT EmployeeID, AVG(DATEDIFF(DAY, orders.OrderDate, orders.ShippedDate)) AS AvgFulfillmentTime FROM orders GROUP BY EmployeeID",
            "SELECT ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATEADD(QUARTER, -1, CURRENT_DATE) GROUP BY ShipRegion ORDER BY TotalSales DESC",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*) AS OnTimeDeliveryRate FROM orders GROUP BY month;",
            "SELECT ShipVia, COUNT(*) AS OrderCount FROM orders GROUP BY ShipVia ORDER BY OrderCount DESC;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS Revenue FROM [Order Details] GROUP BY ProductID ORDER BY Revenue DESC;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders GROUP BY month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Discount) AS AverageDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY month;",
            "SELECT ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipRegion ORDER BY TotalSales DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY month;",
            "SELECT ShipCity, COUNT(*) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC;",
            "SELECT EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY EmployeeID;",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID ORDER BY TotalSales DESC;",
            "SELECT OrderDate, COUNT(*) AS DailyOrderCount FROM orders GROUP BY OrderDate;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY EmployeeID;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AverageOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-02-01' AND '2023-02-28';",
            "SELECT o.ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY o.ShipCountry ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Revenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY od.ProductID ORDER BY Revenue DESC LIMIT 1;",
            "SELECT o.CustomerID, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY o.CustomerID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageFulfillmentTime FROM orders o WHERE o.OrderDate BETWEEN '2023-03-01' AND '2023-03-31';",
            "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM orders WHERE OrderDate BETWEEN '2023-04-01' AND '2023-04-30') AS OnTimeDeliveryRate FROM orders o WHERE o.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' AND o.ShippedDate <= o.RequiredDate;",
            "SELECT o.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY o.EmployeeID;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCountry = 'USA' AND OrderDate BETWEEN '2023-05-01' AND '2023-05-31';",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY Month ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT o.OrderID) AS OrderCount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.Discount > 0.2 AND o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31';",
            "SELECT o.ShipCity, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2023-07-01' AND '2023-07-31' GROUP BY o.ShipCity ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 7 AND OrderDate BETWEEN '2023-08-01' AND '2023-08-31';",
            "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2023-09-01' AND '2023-09-30' GROUP BY ShipVia;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY od.ProductID;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY CustomerID;",
            "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY TotalSales) AS MedianOrderValue FROM (SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-10-01' AND '2023-10-31' GROUP BY o.OrderID) Subquery;",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE OrderDate BETWEEN '2023-11-01' AND '2023-11-30';",
            "SELECT o.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY o.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT QUARTER(OrderDate) AS Quarter, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY Quarter;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 1.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID ORDER BY TotalSales DESC;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShippingTime FROM orders GROUP BY EmployeeID;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, COUNT(DISTINCT orders.CustomerID) AS DistinctCustomers FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipRegion ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS LateOrderSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.ShippedDate > orders.RequiredDate;",
            "SELECT * FROM orders ORDER BY Freight DESC LIMIT 1;",
            "SELECT ShipVia, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 1.0 / COUNT(OrderID) AS OnTimeRate FROM orders GROUP BY ShipVia ORDER BY OnTimeRate DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN orders.ShippedDate > orders.RequiredDate THEN 1 END) AS LateOrders FROM orders GROUP BY Month;",
            "SELECT ShipCountry, COUNT(CASE WHEN [Order Details].Discount > 0 THEN 1 END) AS DiscountedOrders FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry ORDER BY DiscountedOrders DESC LIMIT 1;",
            "SELECT AVG([Order Details].Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT ProductID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ProductID, Month ORDER BY ProductID, Month;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, AVG([Order Details].UnitPrice) AS AvgUnitPrice FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE ShippedDate BETWEEN '2022-01-01' AND '2022-01-31';",
            "SELECT (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders WHERE YEAR(OrderDate) = 2022;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT ShipCountry, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY ShipCountry;",
            "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime FROM orders WHERE YEAR(OrderDate) = 2022 AND DATEDIFF(ShippedDate, OrderDate) > 30;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreight FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY ShipVia;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 AND EmployeeID = 5;",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY CustomerID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT ShipVia, COUNT(OrderID) AS UseCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY ShipVia ORDER BY UseCount DESC LIMIT 1;",
            "SELECT SUM(UnitPrice * Quantity * Discount) AS TotalDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(OrderDate) = 2022;",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE YEAR(OrderDate) = 2022;",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(OrderDate) = 2022;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT OrderDate, COUNT(OrderID) as NumberOfOrders FROM orders GROUP BY OrderDate;",
            "SELECT OrderID FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) > 7;",
            "SELECT CustomerID, COUNT(OrderID) as NumberOfOrders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY CustomerID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ShipVia, SUM(Freight) as TotalFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT COUNT(*) as NumberOfDiscountedProducts FROM [Order Details] WHERE Discount > 0.1;",
            "SELECT ShipCity, COUNT(OrderID) as NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ProductID, SUM(Quantity) as TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT COUNT(*) as HighQuantityOrders FROM [Order Details] WHERE Quantity > 100;",
            "SELECT EmployeeID, COUNT(OrderID) as NumberOfOrders FROM orders GROUP BY EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT OrderID FROM orders WHERE ShipCountry = 'USA';",
            "SELECT EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY EmployeeID;",
            "SELECT OrderID FROM orders WHERE Freight > 100;",
            "SELECT COUNT(*) as NumberOfLateOrders FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-03';",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = 1 AND YEAR(o.OrderDate) = 2023;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = 1 AND YEAR(o.OrderDate) = 2023;",
            "SELECT od.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY od.ProductID ORDER BY TotalQuantity DESC;",
            "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM orders WHERE YEAR(OrderDate) = 2023) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND YEAR(OrderDate) = 2023;",
            "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgFulfillmentTime FROM orders o WHERE MONTH(o.OrderDate) = 2 AND YEAR(o.OrderDate) = 2023;",
            "SELECT ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY ShipCountry ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE MONTH(OrderDate) = 3 AND YEAR(OrderDate) = 2023;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN employees e ON o.EmployeeID = e.EmployeeID WHERE QUARTER(o.OrderDate) = 1 AND YEAR(o.OrderDate) = 2023 GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE NULL END) * 100.0 / COUNT(*) AS OnTimeDeliveryRate FROM orders WHERE MONTH(OrderDate) = 4 AND YEAR(OrderDate) = 2023;",
            "SELECT COUNT(DISTINCT ProductID) AS UniqueProducts FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = 2023;",
            "SELECT MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY MONTH(o.OrderDate);",
            "SELECT AVG(od.Discount) AS AvgDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE QUARTER(o.OrderDate) = 2 AND YEAR(o.OrderDate) = 2023;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN customers c ON o.CustomerID = c.CustomerID WHERE YEAR(o.OrderDate) = 2023 GROUP BY c.CustomerID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT ShipCity, COUNT(*) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY ShipCity ORDER BY NumberOfOrders DESC;",
            "SELECT MAX(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MaxOrderValue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = 2023;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = 3 AND YEAR(o.OrderDate) = 2023 GROUP BY od.ProductID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT AVG(od.Quantity) AS AvgItemsPerOrder FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2023;",
            "SELECT ShipVia, COUNT(*) AS NumberOfShipments FROM orders WHERE QUARTER(OrderDate) = 1 AND YEAR(OrderDate) = 2023 GROUP BY ShipVia ORDER BY NumberOfShipments DESC;",
            "SELECT AVG(Freight) AS AvgFreightCost FROM orders WHERE QUARTER(OrderDate) = 2 AND YEAR(OrderDate) = 2023;",
            "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate AND YEAR(OrderDate) = 2023;"
        ],
        "reviews": [
            "Correct query.",
            "Correct query.",
            "Incorrect timeframe. Corrected to include from 3 months prior to today:  WHERE OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH).",
            "Correct query.",
            "Correct query.",
            "Incorrect operator. Corrected to >= for \"last quarter\": WHERE o.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH).",
            "Correct query.",
            "Incorrect timeframe. Corrected to include orders from the past year: WHERE OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR).",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Added the LIMIT clause for the top 5 customers: Corrected to use limit 5.",
            "Correct query.",
            "Correct query.",
            "Added join to products table to get category information: Corrected to include join with products table.",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect. It needs to join with the orders table to get the year correctly.",
            "Query is incorrect. It needs to filter orders by year.",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect. It should exclude orders that are not yet shipped.",
            "Query is incorrect. There is a division that needs parentheses and month calculation adjust.",
            "Query is incorrect. It needs to filter by year.",
            "Query is correct.",
            "Query is incorrect. It should filter results correctly by date format.",
            "Query is correct.",
            "Query is incorrect. It needs to filter by year as well.",
            "Query is incorrect. It needs to use the correct field in the WHERE clause.",
            "Query is mostly correct but needs formatting adjustment and book field corrections.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect. It should use PERCENTILE_CONT for median calculation.",
            "Query is incorrect. It should filter by date correctly.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct. The query properly joins the orders and [Order Details] tables, calculates the total sales, and groups the result by month.",
            "Correct. The query accurately calculates the average order value by dividing the total sales by the count of distinct orders, grouping by month.",
            "Correct. The query calculates the average fulfillment time by taking the difference between OrderDate and ShippedDate, grouping by month.",
            "Correct. The query correctly calculates the on-time delivery rate by counting the number of orders shipped on or before the required date, dividing by the total number of orders, and grouping by month.",
            "Correct. The query groups by ProductID and calculates the total sales for each product, ordering by TotalSales in descending order.",
            "Correct. The query filters orders placed last year, groups by CustomerID, and counts the number of orders, ordering by OrderCount in descending order.",
            "Correct. The query filters orders placed in the past three months, groups by EmployeeID, and counts the number of orders, ordering by OrderCount in descending order.",
            "Correct. The query groups by ShipCountry and calculates the total sales, ordering by TotalSales in descending order and limiting the result to the top 5 countries.",
            "Correct. The query groups by ShipVia and counts the number of orders, ordering by OrderCount in descending order.",
            "Correct. The query joins the orders and [Order Details] tables, groups by month, and sums the total quantity of products sold.",
            "Correct. The query filters orders placed in the last six months, groups by ProductID, and finds the maximum discount applied, ordering by MaxDiscount in descending order and limiting the result to one product.",
            "Correct. The query joins the orders and [Order Details] tables, groups by month, and calculates the number of orders placed and the total revenue generated.",
            "Correct. The query calculates the late delivery rate by grouping by month, counting the orders shipped after the required date, and dividing by the total number of orders.",
            "Correct. The query groups by month and sums the freight cost for each month.",
            "Correct. The query filters orders placed last year, groups by ShipCity, counts the number of orders, and orders by OrderCount in descending order, limiting the result to the top 3 cities.",
            "Correct. The query joins the products and [Order Details] tables, groups by ProductCategory, and calculates the total sales, ordering by TotalSales in descending order.",
            "Correct. The query groups by month and counts the number of unique customers who placed orders.",
            "Correct. The query groups orders by whether they were delivered on time or late, calculates the total sales and average order value for each group.",
            "Corrected. It is necessary to join the orders table to obtain the OrderDate. The corrected query is 'SELECT QUARTER(OrderDate) AS Quarter, AVG(Discount) AS AvgDiscount FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID GROUP BY QUARTER(OrderDate) ORDER BY Quarter'.",
            "Correct. The query groups by EmployeeID and calculates the average fulfillment time for each employee.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The query should calculate last month's value relative to the current month. Use `MONTH(CURDATE()) - 1`. Corrected query: SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) AND MONTH(OrderDate) = MONTH(CURDATE()) - 1 GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1",
            "Correct",
            "Correct",
            "Missing condition for the specified last year. Corrected query: SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Month ORDER BY Month",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The join should use categories table instead of ProductCategory. Corrected query: SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY categories.CategoryName",
            "Correct",
            "Correct",
            "The join with orders table is missing to get the OrderDate. Corrected query: SELECT COUNT(DISTINCT [Order Details].ProductID) AS UniqueProducts FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH)",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected - The original query was incorrectly computing the percentage of on-time deliveries.",
            "Corrected - The query needed to join the orders table to get the OrderID.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is incorrect. Correct query: SELECT COUNT(DISTINCT od.ProductID) AS DistinctProducts FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m')",
            "The query is correct.",
            "The query is correct.",
            "The query is incorrect. Correct query: SELECT COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*) * 100 AS OnTimeDeliveryRate FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct.",
            "Original query was missing the JOIN with orders table to filter based on the last year's OrderDate. Corrected by adding the JOIN.",
            "Correct.",
            "Correct.",
            "Original query may result in integer division which leads to an incorrect rate. Recommend ensuring decimal division, though original format is functionally similar.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Original query is missing the JOIN with orders table to ensure filtering based on the last year's OrderDate. Corrected by adding the JOIN.",
            "Original query was incorrect as it was counting orders shipped late instead of counting those required but not shipped. Corrected the logic.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct query for total sales revenue generated last month with a correct month and year interval.",
            "Correct query for average order value in the last year. Uses SUM and COUNT functions correctly.",
            "Correct query for the average fulfillment time.",
            "Mistake in the division. Revised query to calculate percentage correctly.",
            "The keyword 'TOP' might not work in all SQL dialects. Replaced with 'LIMIT 1' for compatibility.",
            "Correct query for customers with the most orders in the last month.",
            "Correct query for total freight cost for orders shipped last year.",
            "Correct query for total number of orders placed by each customer.",
            "Correct query for the most frequently used shipping method.",
            "Correct query for the employee handling the most orders last quarter.",
            "Correct query for the number of late-shipped orders in the last month.",
            "Correct query for orders distribution across countries.",
            "Adjusted the COUNT to reflect frequency correctly and match the scenario.",
            "Adjusted YEAR interval to correctly check the last year and match the scenario.",
            "Correct query for counting unique products ordered last month.",
            "Correct query to find the average order quantity for each product.",
            "Correct query for calculating region with the highest fulfillment time.",
            "Correct query for finding the customer with the highest total discount.",
            "Correct query for calculating the average freight cost per order last quarter.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Incorrect SQL query. Corrected query: SELECT COUNT(o.OrderID) * 1.0 / COUNT(orders.OrderID) AS OnTimeDeliveryRate FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' AND o.ShippedDate <= o.RequiredDate;",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct SQL query.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query correctly calculates the average order value per month using the correct formula and grouping by month.",
            "The query correctly counts the number of orders placed by each customer.",
            "The query correctly calculates the average order fulfillment time per month.",
            "The query calculates the on-time delivery rate percentage correctly, now using * 100.0 to convert it to a percentage.",
            "The query correctly calculates the total freight cost incurred last month.",
            "The query correctly calculates the total number of products sold in each category last month.",
            "The query correctly identifies the month-wise sales trend over the last year.",
            "The query correctly counts the number of orders shipped to each country.",
            "The query now correctly checks for customers who have placed orders exceeding $500 by using HAVING SUM(...).",
            "The query correctly calculates the total discount given for each product category last year.",
            "The query correctly identifies the trend for the average order value over time.",
            "The query correctly identifies products that are frequently ordered together.",
            "The query correctly calculates the distribution of order quantities.",
            "The query correctly tracks the monthly change in order fulfillment time.",
            "The query correctly identifies the city with the highest number of orders shipped to.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: The current SQL query uses the AVG function with COUNT which does not work as intended. Correct version: SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, AVG(od.ProductID_CT) AS AverageUniqueProducts FROM (SELECT OrderID, COUNT(DISTINCT ProductID) AS ProductID_CT FROM [Order Details] GROUP BY OrderID) od JOIN orders o ON o.OrderID = od.OrderID GROUP BY Month;",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "There's a missing period in `od Discount`, it should be `od.Discount`. Corrected Query: SELECT ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS ProductRevenue FROM [Order Details] od GROUP BY ProductID ORDER BY ProductRevenue DESC",
            "The calculation of total discount should be `SUM(Discount * Quantity)` instead of just `SUM(Discount)`. Corrected Query: SELECT ProductID, SUM(Discount * Quantity) AS TotalDiscount FROM [Order Details] GROUP BY ProductID",
            "Correct",
            "Correct",
            "Correct",
            "The filter condition syntax is incorrect. Use `FILTER (WHERE condition)` for calculating the count of orders delivered on time. Corrected Query: SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate) / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "Correct",
            "To correctly reflect the highest number of shipped orders, we should exclude orders with `NULL` ShippedDate. Corrected Query: SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders WHERE ShippedDate IS NOT NULL GROUP BY ShipCity ORDER BY OrderCount DESC",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The `customers` table was used in the SQL query but not in the schema. Corrected Query: SELECT CustomerID FROM orders WHERE ShipCountry = 'USA'",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The original query missed proper date boundary checks. Corrected with explicit date range.",
            "Query is correct.",
            "Query is correct.",
            "The original query missed proper date boundary checks. Corrected with explicit date range.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Revised the query to ensure it only covers the last month correctly.",
            "Query is correct.",
            "Query is correct.",
            "The original query incorrectly checked the current year. Corrected to check the previous year.",
            "Query is correct.",
            "Query is correct.",
            "Revised the query to ensure it only covers the last month correctly.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "The query for 'total sales revenue for the month of January 2023' is correct. The logic and calculations are accurate as per the given schema and the expected metrics.",
            "The original query contained a mistake in calculating the On-time Delivery Rate. The correct approach is to count orders that were shipped on or before the required date and divide that by the total number of orders. The correct query is provided.",
            "Correct as it follows the defined formula for Total Sales.",
            "Query construction is correct and follows the defined formula for Average Order Value.",
            "The original query is missing a condition to filter by the year 2022. Corrected query adds this condition.",
            "Correct as it accurately groups orders by CustomerID and counts them for the specified date range.",
            "The original query uses NOW() - INTERVAL 6 MONTH, which may not be supported in all SQL dialects. Changed to DATE_ADD(CURDATE(), INTERVAL -6 MONTH).",
            "Correct as it calculates the on-time delivery rate as per the defined formula.",
            "Correct as it follows the business question and sums up the total sales grouped by CustomerID.",
            "Correct as it groups orders by ShipVia and counts them for the specified date range.",
            "Correct as it groups by EmployeeID and counts the number of orders, sorting by order count.",
            "Correct as it sums up the freight costs for orders shipped to the USA in the specified date range.",
            "Correct as it counts orders grouped by ShipCity for the specified date range.",
            "Correct as it groups orders by ProductID and sums up the quantities for the specified date range.",
            "Correct as it calculates the average discount given on all orders in 2023.",
            "Correct as it identifies the top month by total sales in the year 2022.",
            "Correct as it selects orders that were shipped late in 2022.",
            "Correct as it joins with the products table to group sales by product category.",
            "Correct as it calculates the average freight cost for orders in 2022.",
            "Correct as it counts the number of orders for each day in the specified date range.",
            "The original query used AVG(Quantity). Changed this to AVG([Order Details].Quantity) for clarity.",
            "Correct as it selects orders that were placed but not shipped in 2022.",
            "Incorrect. Correction: SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Should be as follows: SELECT COUNT(DISTINCT OrderID) AS DiscountedOrders FROM [Order Details] WHERE Discount > 0.10",
            "Correct.",
            "Corrected to use DATE_TRUNC to get the first day of the current month before subtracting one month.",
            "Corrected DATEPART to EXTRACT and changed DATEADD(YEAR, -1, CURRENT_DATE) to maintain consistency.",
            "No changes needed.",
            "No changes needed.",
            "No changes needed.",
            "No changes needed.",
            "Corrected to use DATE_TRUNC to get the first day of the current month before subtracting one month.",
            "No changes needed.",
            "Corrected DATEPART to EXTRACT.",
            "Corrected DATEPART to EXTRACT.",
            "No changes needed.",
            "Added a JOIN on the products table and categories table to get the product category names.",
            "Corrected to use DATE_TRUNC to get the first day of the current month before subtracting one month.",
            "No changes needed.",
            "No changes needed.",
            "Corrected to use DATE_TRUNC to get the first day of the current month before subtracting one month.",
            "No changes needed.",
            "No changes needed.",
            "Correct. The query correctly calculates total sales revenue per month.",
            "Correct. The query accurately calculates the average fulfillment time per month.",
            "Correct. The query correctly computes the on-time delivery rate per month.",
            "Correct. The query correctly identifies the shipping method with the most orders.",
            "Correct. The query correctly identifies the product with the highest revenue.",
            "Correct. The query correctly calculates the total quantity of each product sold.",
            "Correct. The query correctly counts the number of unique customers per month.",
            "Correct. The query correctly calculates the average discount applied per month.",
            "Correct. The query correctly counts the number of late orders.",
            "Correct. The query correctly calculates the average freight cost per order.",
            "Correct. The query correctly identifies the city that has received the most orders.",
            "Correct. The query correctly calculates total revenue generated by each employee.",
            "Correct. The query correctly identifies the customer generating the highest total sales.",
            "Correct. The query correctly counts the number of orders placed each day.",
            "Correct. The query correctly calculates average order fulfillment time for employees.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "The DATE_FORMAT function should be replaced with a proper SQL function to extract the month and year if the database does not support it: SELECT EXTRACT(YEAR_MONTH FROM OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY Month ORDER BY TotalSales DESC LIMIT 1;",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "The table 'products' should be joined to retrieve product categories: SELECT p.CategoryID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY p.CategoryID;",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic.",
            "Correct syntax and logic. It correctly calculates sales per quarter.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The provided query is correct. To ensure accurate results, floating-point arithmetic is used for the on-time delivery rate.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "The condition should be based on OrderDate for selecting January 2022 orders, not ShippedDate. Corrected query: SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-01-31';",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "The query is correct.",
            "The query is incorrect. Division should be cast to a decimal for percentage calculation.\nCorrect query: SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / CAST(COUNT(OrderID) AS DECIMAL)) as OnTimeDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct",
            "Correct",
            "Correct",
            "The query correctly calculates the on-time delivery rate.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The formula should use SUM() function over discounts as it's applying per order not product item. Correct Query: SELECT SUM(od.Discount) / COUNT(DISTINCT o.OrderID) AS AvgDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE QUARTER(o.OrderDate) = 2 AND YEAR(o.OrderDate) = 2023;",
            "The table 'customers' is missing in schema. Assuming it exists. Correct Query: SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN customers c ON o.CustomerID = c.CustomerID WHERE YEAR(o.OrderDate) = 2023 GROUP BY c.CustomerID ORDER BY TotalSales DESC LIMIT 5;",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct"
        ],
        "difficulty": [
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium"
        ]
    },
    "Customer Analysis": {
        "questions": [
            "What is the total revenue generated by each customer?",
            "Which customers have placed the highest number of orders?",
            "What is the average order value?",
            "Which products have generated the most revenue?",
            "Which customers are located in a specific country (e.g., USA)?",
            "How many orders were placed in the last year?",
            "What is the most common shipping method used by customers?",
            "Which employees have processed the most orders?",
            "What are the total freight costs by shipping country?",
            "What is the average time between order date and shipped date?",
            "Which customers have never placed an order?",
            "What is the total discount given to each customer?",
            "How many orders included products with a discount of more than 10%?",
            "What is the total revenue generated per product?",
            "Which city has the highest number of customers?",
            "What is the total quantity of products ordered per customer?",
            "Which orders have not been shipped yet?",
            "What is the customer retention rate for the last month?",
            "Which customers have spent more than $10,000?",
            "What is the distribution of order quantities?",
            "What is the total revenue generated from a customer with ID 'C0001'?",
            "How many unique customers have placed orders in the year 2023?",
            "What is the average order value for each customer?",
            "Which customers have placed more than 5 orders?",
            "What are the top 5 cities with the highest number of orders?",
            "How many orders were shipped after the required date?",
            "What is the total freight cost for orders shipped via shipping method 1?",
            "How many orders were placed by customers from 'USA' in the last month?",
            "Which product has the highest total sales value?",
            "What is the total discount given on orders placed in 2022?",
            "Find the CustomerID and the total number of orders for each customer who has ordered more than 10 times.",
            "Calculate the average time taken to ship an order.",
            "What is the total quantity of products ordered by a customer with ID 'C0002'?",
            "List the customers who have not placed an order in the last year.",
            "Which orders have the highest freight cost and what are their details?",
            "Which employee has processed the most orders?",
            "What is the monthly revenue for the year 2023?",
            "What was the average quantity of products ordered per order in 2023?",
            "Identify the top 3 products by total quantity sold.",
            "How many orders included a discount of more than 0.1?",
            "What is the total revenue generated per customer?",
            "Which customers have placed orders in the last month?",
            "Which products have been ordered more than 100 times?",
            "Who are the top 5 customers by revenue?",
            "What is the most popular product in terms of quantity sold?",
            "What is the total freight cost by shipping country?",
            "What is the average discount given per order?",
            "How many orders were shipped late?",
            "What is the total quantity of products ordered in the last year?",
            "What is the average number of products per order?",
            "Which employees have handled the highest number of orders?",
            "What is the most common shipping method?",
            "Which customers have not placed any orders in the last year?",
            "What is the average time taken to ship an order?",
            "Which countries have the highest total order values?",
            "What is the Customer Lifetime Value (CLTV) for each customer?",
            "What is the Customer Retention Rate for the last year?",
            "Which products generate the highest revenue?",
            "What is the total revenue generated by each customer over their lifetime?",
            "How many distinct customers placed orders each month?",
            "What is the average freight cost per order?",
            "How many orders were shipped to each city?",
            "What is the total quantity of products ordered by each customer?",
            "Which order had the highest discount applied?",
            "How many orders were placed by each customer in the last year?",
            "What is the percentage of orders that were shipped late?",
            "What are the top five customers by total order value?",
            "How many days on average does it take for an order to be shipped after it is placed?",
            "Which customer has the highest Customer Lifetime Value?",
            "What is the total number of products sold in each region?",
            "How many customers are there in each country?",
            "How many orders were placed by each employee?",
            "What is the average discount per order?",
            "Which products were ordered the most frequently?",
            "Calculate the Customer Retention Rate for the last month.",
            "Which city has the highest number of unique customers?",
            "Which customers are based in Germany?",
            "Count the total number of orders placed by each customer.",
            "What is the total revenue generated from each customer?",
            "Which customer has placed the highest number of orders?",
            "Show the details of orders placed in the month of January 2023.",
            "What is the average order value per customer?",
            "List the top 5 customers by total revenue generated.",
            "What is the customer retention rate for January 2023?",
            "Find the total quantity ordered for each product.",
            "Which customers have not placed any orders?",
            "Identify the order with the highest freight cost.",
            "Show the average discount applied on all orders.",
            "Find the total freight cost for each country.",
            "List the customers along with their last order date.",
            "What is the total revenue generated from orders placed in 2023?",
            "Find the top 3 cities with the most orders placed.",
            "How many orders were shipped to 'USA' in the last six months?",
            "Identify customers who have received a discount greater than 15% on any product.",
            "What is the average shipping time (difference between OrderDate and ShippedDate)?",
            "List customers with their respective regions and count of orders placed.",
            "What is the total revenue generated from each customer over their lifetime?",
            "What is the percentage of returning customers in January 2023?",
            "List the top 5 cities with the highest number of customers.",
            "Find the average discount applied on all orders.",
            "Identify customers who have never placed an order.",
            "Calculate the total freight cost for orders shipped in the month of March 2023.",
            "Get the total quantity of products ordered by each customer.",
            "Determine the customer with the highest lifetime value.",
            "Find the most frequently ordered product.",
            "What is the total revenue generated by each city's customers?",
            "List the customers who have placed orders above a certain amount ($5000).",
            "Get the breakdown of orders by shipping method.",
            "Calculate the average order value for each customer.",
            "Identify the month with the highest revenue in 2020.",
            "Find the top 10 most popular products based on quantity ordered.",
            "Which country has the highest number of orders?",
            "Get the list of customers along with their total order count and total revenue generated.",
            "Find the average number of orders placed by each customer per year.",
            "Calculate the total number of orders placed and the total revenue for each employee.",
            "List all customers along with their contact names and phone numbers.",
            "Find all orders placed by a particular customer identified by CustomerID 'VINET'.",
            "Calculate the total number of orders placed in each country.",
            "Determine the average freight cost per order.",
            "Find the top 5 customers by the number of orders placed.",
            "List the distinct cities where customers are located.",
            "Get the total revenue generated from each customer.",
            "Calculate the total discount provided on all orders combined.",
            "Identify which customer placed the largest single order by amount.",
            "Find all orders that have not yet been shipped.",
            "List customers who have placed orders within the last 30 days.",
            "Calculate the Customer Lifetime Value for each customer.",
            "Find the average quantity of products ordered per order.",
            "List the top 3 shipping methods by the number of orders.",
            "Calculate the Customer Retention Rate for the past month.",
            "Find the 10 most frequently ordered products.",
            "Get the total revenue generated grouped by region.",
            "Identify which month has the highest number of orders historically.",
            "List the customers along with their total spent amounts, ordered by highest to lowest total spent.",
            "Calculate the average order amount of customers in each country.",
            "Which customers have not placed any orders in the past year?",
            "How many orders were placed each month in the last two years?",
            "Which customers have the highest lifetime value?",
            "What is the total discount given per product?",
            "How many unique products were purchased by each customer?",
            "Which employees processed the highest number of orders?",
            "Which shipping method is used the most?",
            "Which product has the highest sales volume?",
            "Calculate the customer retention rate for the last year.",
            "Which regions have the most returning customers?",
            "What are the top 10 most frequently ordered products?",
            "How many orders were shipped late (shipped after the required date)?",
            "What is the most common job title among contact persons?",
            "What is the distribution of order quantities per product?",
            "Find the monthly freight cost for the past year.",
            "Which customers have placed the largest orders by value?",
            "List all customers along with their order count.",
            "What is the average order amount per customer?",
            "Who are the top 5 customers by order quantity?",
            "Identify customers who placed orders in the last month.",
            "Determine the total revenue generated from orders shipped to Germany.",
            "Which products have the highest sales by quantity?",
            "Find all customers who ordered a specific product (ProductID=1).",
            "Calculate the average freight cost per order.",
            "What are the total sales per country?",
            "List the top 3 cities with the highest order volume.",
            "Identify the most frequently shipped product.",
            "Calculate the customer retention rate for the past year.",
            "Determine the average time between order date and shipped date.",
            "Find the total number of orders handled by each employee.",
            "Which product has the highest total revenue from sales?",
            "How many orders were placed by each customer?",
            "Which customers have placed more than 10 orders?",
            "What is the most expensive order placed by a customer?",
            "Identify the top 5 cities with the highest number of orders.",
            "Which customer has the highest lifetime value?",
            "Calculate the total revenue for each country.",
            "Find the average freight cost per order.",
            "What is the average discount applied per product?",
            "How many orders were shipped but not yet delivered?",
            "Identify customers who have placed orders every month for the past year.",
            "Which products are ordered most frequently?",
            "Find the total quantity of each product ordered by all customers.",
            "Calculate the average number of orders per customer per year.",
            "Identify the customer with the most late shipments.",
            "Calculate Customer Retention Rate for the last year.",
            "What percentage of orders include a discount?",
            "What are the top 5 customers based on the total revenue they generated?",
            "How many orders were placed in the year 2022?",
            "What is the average freight cost for orders shipped to 'USA'?",
            "What is the total revenue generated by customer 'ALFKI'?",
            "What percentage of orders were shipped after the required date?",
            "How many distinct products were ordered in the month of January 2022?",
            "What is the total number of orders placed by customers from 'Germany'?",
            "Who are the top 3 employees based on the number of orders they handled?",
            "What is the total discount given for orders placed in December 2021?",
            "Which products have been ordered more than 10 times?",
            "What is the average order value for orders placed in the last 6 months?",
            "How many orders were placed each month in 2021?",
            "Which regions have the highest freight costs on average?",
            "What is the customer retention rate for the year 2020?",
            "What is the total quantity of each product ordered?",
            "How many orders were placed on weekends?",
            "What is the total revenue generated each year?",
            "How many orders have been placed by customers in Canada?",
            "What is the total number of orders placed in the last month?",
            "Which product has been ordered the most times?",
            "What is the total discount given on all orders?",
            "List the top 5 customers based on their total spending.",
            "What is the retention rate for the last quarter?",
            "Which customer placed the earliest order?",
            "What is the average order quantity for products in category 'Electronics'?",
            "Which employee has handled the most orders?",
            "List all orders that were shipped to Germany.",
            "What is the total freight cost for orders shipped via method ID 3?",
            "What is the total revenue generated from orders shipped in 2021?",
            "Which product has the highest total revenue?",
            "What was the total revenue for each year?",
            "What is the average discount applied per order?",
            "What is the total number of orders placed by customers from each country?",
            "What is the total freight cost for all orders made in the year 2022?",
            "Which product has generated the most revenue?",
            "How many orders were shipped late (i.e., shipped after the required date)?",
            "How many customers placed orders in January 2023?",
            "What is the retention rate for customers from March 2022 to March 2023?",
            "How many unique customers placed orders each month in 2022?",
            "What is the total revenue generated each month in 2022?",
            "What is the average unit price for each product?",
            "Which shipping method is used the most frequently?",
            "What is the total quantity of products sold in each order?",
            "What is the average order processing time (i.e., the duration between order date and shipped date)?",
            "How many products were ordered with a discount greater than 20%?",
            "What is the total revenue generated from orders with no discount?",
            "List all customers who have placed an order with a freight cost greater than $100.",
            "How many orders were placed by each customer in December 2022?",
            "Identify the top 5 customers by total revenue.",
            "Calculate the total discount given for each order.",
            "How many distinct products have been ordered?",
            "What is the total quantity of products ordered in January 2023?",
            "List all orders along with the names of the customers who placed them.",
            "Determine the customer retention rate for the first quarter of 2023.",
            "Find the total freight cost for each shipping method.",
            "Identify the customers who have not placed any orders in the last year.",
            "List all orders along with their associated shipping details.",
            "Which cities have the highest number of customers?",
            "What is the total amount of revenue generated by each customer?",
            "How many orders did each customer place?",
            "Which customer generated the highest revenue?",
            "How many customers are from each country?",
            "What are the order details (products, quantities, and prices) for a specific order?",
            "What is the average discount applied to the orders of each customer?",
            "How many orders were shipped within the required date period?",
            "What is the total freight cost for each customer?",
            "What is the most frequently ordered product?",
            "What is the total revenue generated by month?",
            "What percentage of customers are returning customers over the last year?",
            "Which month had the highest number of orders?",
            "How many orders were placed each month by each customer?",
            "What is the city with the highest number of customers?",
            "Which employee handled the most orders?",
            "Which shipping method is used most frequently?",
            "What is the average shipping time for each customer?",
            "Which products have the highest discount percentages?",
            "Get the total number of customers in the database.",
            "Find the total revenue generated by each customer.",
            "List all customers who have placed an order in the last year.",
            "Find the average order value by country.",
            "Identify the top 5 customers with the highest lifetime value.",
            "Calculate the total number of orders placed each month.",
            "Identify the regions with the highest number of customers.",
            "List the orders that have not been shipped yet.",
            "Find the total freight charges by each shipping method.",
            "List the top 10 products with the highest revenue.",
            "Identify the customers who have placed more than 10 orders.",
            "Find the average discount offered per order.",
            "Calculate the total revenue generated for each month of the year.",
            "Identify the customers who have not placed an order in the last 6 months.",
            "Find the number of orders shipped to each country.",
            "List all orders along with their respective shipping addresses.",
            "Calculate the average number of products per order.",
            "Find the highest and lowest freight charges for orders placed last year.",
            "Which customers have placed the most orders?",
            "Which products are ordered the most?",
            "Which region has the highest number of customers?",
            "What is the total quantity ordered for each product?",
            "Which customer generated the highest lifetime value?",
            "What is the total freight cost for all orders?",
            "What is the total revenue generated per country?",
            "What are the top 5 customers by order value?",
            "How many orders were placed each month in the current year?",
            "Which employees handled the most orders?",
            "What is the total revenue generated per product category?",
            "Identify the top 3 regions by total sales revenue.",
            "What is the average number of products ordered per order?",
            "How many unique customers have placed an order?",
            "How many orders were placed in the last month?",
            "What are the top 5 products by total revenue?",
            "How many orders have been shipped to the 'USA'?",
            "What is the total discount given across all orders?",
            "What is the Customer Retention Rate for the last 6 months?",
            "List the orders where the order date is greater than the required date.",
            "Find the average order value for each month.",
            "Which shipping recipient (ShipName) has the highest freight cost?",
            "How many orders were shipped via each shipping method?",
            "What is the average quantity per product across all orders?",
            "What is the average shipping time (difference between ShippedDate and OrderDate)?",
            "Which region has generated the highest revenue?",
            "What is the average discount applied to products in each order?",
            "Which customers have placed orders in the last 30 days?",
            "What is the average discount given on orders?",
            "How many orders were placed in each month of the current year?",
            "What is the sales revenue by country?",
            "Which customers have made repeat purchases?",
            "Which products were ordered the most in the last year?",
            "What is the most frequently used shipping method?",
            "How many unique customers placed orders in the last quarter?",
            "Which customers generate the highest Customer Lifetime Value?",
            "Which products are the least popular based on quantities ordered?",
            "What is the total revenue generated by each customer throughout their entire relationship with the company?",
            "How many customers are located in each country?",
            "Which products have been ordered most frequently?",
            "What is the average order value across all orders?",
            "How many unique customers placed orders in the year 2022?",
            "What is the total freight cost for orders shipped to each country?",
            "What is the average discount applied across all order details?",
            "Calculate the total quantity of products sold per product category.",
            "What percentage of orders were placed in the last quarter?",
            "Find all customers who have not placed any orders in the last year.",
            "Identify the most expensive order placed by any customer.",
            "What is the most common city for shipping addresses?",
            "Determine the customer retention rate for the last six months.",
            "Which countries have the highest and lowest average order values?",
            "What is the average number of orders placed by returning customers?",
            "Find customers with at least one order where the freight cost exceeds $100.",
            "What is the total number of orders placed?",
            "Find the total revenue generated from each customer.",
            "Get the list of customers who placed orders in the last month.",
            "Calculate Customer Lifetime Value for each customer.",
            "Identify the top 5 customers with the highest total orders.",
            "Find the average order value for each customer.",
            "What is the total freight cost for each shipping method?",
            "Count the number of orders shipped by country.",
            "Identify the customers with orders that had a discount applied.",
            "Calculate the Customer Retention Rate for the last quarter.",
            "Determine the month with the highest total sales.",
            "Get the list of orders that were not shipped on time.",
            "What is the percentage of orders shipped within the same country as the customer?",
            "Find the total revenue generated from each country.",
            "Identify the top 3 regions with the highest number of orders.",
            "What is the average discount given per product?",
            "What is the total revenue for each product?",
            "List customers who have not placed any orders in the last year.",
            "What is the customer retention rate for the last quarter?",
            "List all orders that were shipped after the required date.",
            "Which employee handled the highest number of orders?",
            "Calculate the customer lifetime value for each customer.",
            "What is the monthly revenue trend for the past year?",
            "List the top 3 regions by total revenue.",
            "List the customers who have ordered a specific product.",
            "Calculate the total freight cost incurred by each customer.",
            "Find the top 5 customers with the highest order quantities.",
            "Determine the number of orders shipped to each country.",
            "Identify the customers with orders that have never been shipped.",
            "List the customers who have spent more than $10,000.",
            "Calculate the average number of products per order for each customer.",
            "Find the orders with the highest discount applied.",
            "Determine the total revenue generated by each customer in a specific country.",
            "List the customers who have placed orders in the last month.",
            "Calculate the Customer Lifetime Value (CLV) for each customer.",
            "Determine the Customer Retention Rate for the last year.",
            "Find the customer with the highest average order value.",
            "Identify the orders that have a shipping address different from the customer's address.",
            "Count the number of orders placed by each customer in a given time period.",
            "List the top 10 products by revenue for each customer.",
            "What is the total number of customers in each country?",
            "What was the total revenue generated from orders in the year 2022?",
            "Which products have been ordered the most frequently?",
            "How many orders were placed in each month of 2022?",
            "How many distinct customers placed orders in the first quarter of 2022?",
            "What is the total revenue generated for each product?",
            "What is the total discount given on all orders in 2022?",
            "How many orders were shipped late (after the required date) in 2022?",
            "What is the average quantity of products ordered per order?",
            "Which shipping method is the most frequently used?",
            "What is the total number of orders shipped to each region?",
            "What is the percentage of returning customers in 2022?",
            "What is the total revenue generated by customers from the USA?",
            "What are the top 5 products by revenue?",
            "List the top 5 cities by number of orders placed.",
            "Calculate the total freight costs for orders shipped to each country.",
            "How many customers are there in each region?",
            "Find the number of orders that were shipped after the required date.",
            "Identify customers who have not placed any orders in the last year.",
            "What is the total discount provided for each product?",
            "What is the Customer Lifetime Value (CLV) for each customer?",
            "Determine the Customer Retention Rate for the last month.",
            "List customers and the count of orders they have placed in the last six months.",
            "Calculate the average shipping time in days for each shipping method.",
            "Identify the top 3 customers by revenue in the last quarter.",
            "How many orders have been placed each month for the current year?",
            "What is the distribution of order quantities for each product?",
            "List customers from the USA who have placed more than 5 orders.",
            "Calculate the total revenue generated each month.",
            "Find customers who have placed orders with a total discount greater than $100."
        ],
        "sql_queries": [
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, COUNT(o.OrderID) AS OrderCount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID ORDER BY OrderCount DESC;",
            "SELECT AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od GROUP BY od.ProductID ORDER BY TotalRevenue DESC;",
            "SELECT * FROM customers WHERE Country = 'USA';",
            "SELECT COUNT(*) FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT ShipVia, COUNT(*) AS ShippingMethodCount FROM orders GROUP BY ShipVia ORDER BY ShippingMethodCount DESC;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC;",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCountry ORDER BY TotalFreight DESC;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders WHERE ShippedDate IS NOT NULL;",
            "SELECT * FROM customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM orders);",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT COUNT(*) FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.Discount > 0.1;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od GROUP BY od.ProductID;",
            "SELECT City, COUNT(CustomerID) AS CustomerCount FROM customers GROUP BY City ORDER BY CustomerCount DESC;",
            "SELECT c.CustomerID, SUM(od.Quantity) AS TotalQuantity FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "WITH previous_month AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH)), current_month AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE()) SELECT (SELECT COUNT(*) FROM current_month WHERE CustomerID IN (SELECT CustomerID FROM previous_month)) / (SELECT COUNT(*) FROM previous_month) AS RetentionRate;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSpending FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID HAVING TotalSpending > 10000;",
            "SELECT Quantity, COUNT(*) AS QuantityCount FROM [Order Details] GROUP BY Quantity ORDER BY QuantityCount DESC;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.CustomerID = 'C0001'",
            "SELECT COUNT(DISTINCT CustomerID) AS unique_customers FROM orders WHERE YEAR(OrderDate) = 2023",
            "SELECT customers.CustomerID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS avg_order_value FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS total_orders FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID HAVING COUNT(orders.OrderID) > 5",
            "SELECT ShipCity, COUNT(OrderID) AS order_count FROM orders GROUP BY ShipCity ORDER BY order_count DESC LIMIT 5",
            "SELECT COUNT(OrderID) AS late_orders FROM orders WHERE ShippedDate > RequiredDate",
            "SELECT SUM(Freight) AS total_freight FROM orders WHERE ShipVia = 1",
            "SELECT COUNT(OrderID) AS orders_last_month FROM orders WHERE CustomerID IN (SELECT CustomerID FROM customers WHERE Country = 'USA') AND OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE()",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY total_sales DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS total_discount FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2022",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID HAVING COUNT(orders.OrderID) > 10",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_shipping_time FROM orders WHERE ShippedDate IS NOT NULL",
            "SELECT SUM([Order Details].Quantity) AS total_quantity FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.CustomerID = 'C0002'",
            "SELECT customers.CustomerID, customers.CompanyName FROM customers WHERE customers.CustomerID NOT IN (SELECT CustomerID FROM orders WHERE OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR))",
            "SELECT orders.OrderID, orders.Freight, customers.CompanyName, orders.ShipName, orders.ShipCity FROM orders INNER JOIN customers ON orders.CustomerID = customers.CustomerID ORDER BY Freight DESC LIMIT 5",
            "SELECT EmployeeID, COUNT(OrderID) AS order_count FROM orders GROUP BY EmployeeID ORDER BY order_count DESC LIMIT 1",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS monthly_revenue FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2023 GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
            "SELECT AVG([Order Details].Quantity) AS avg_quantity FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2023",
            "SELECT [Order Details].ProductID, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY total_quantity DESC LIMIT 3",
            "SELECT COUNT(OrderID) AS discounted_orders FROM [Order Details] WHERE Discount > 0.1",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
            "SELECT DISTINCT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT ProductID FROM [Order Details] GROUP BY ProductID HAVING SUM(Quantity) > 100;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ProductID, SUM(Quantity) as TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT ShipCountry, SUM(Freight) as TotalFreight FROM orders GROUP BY ShipCountry;",
            "SELECT OrderID, AVG(Discount) as AverageDiscount FROM [Order Details] GROUP BY OrderID;",
            "SELECT COUNT(OrderID) FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT SUM(Quantity) as TotalQuantity FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
            "SELECT OrderID, AVG(Quantity) as AverageQuantity FROM [Order Details] GROUP BY OrderID;",
            "SELECT EmployeeID, COUNT(OrderID) as NumberOfOrders FROM orders GROUP BY EmployeeID ORDER BY NumberOfOrders DESC LIMIT 5;",
            "SELECT ShipVia, COUNT(OrderID) as NumberOfOrders FROM orders GROUP BY ShipVia ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT CustomerID, CompanyName FROM customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) as AverageShippingTime FROM orders;",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry ORDER BY TotalValue DESC;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as CustomerLifetimeValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
            "SELECT (COUNT(DISTINCT Orders1.CustomerID) / COUNT(DISTINCT Orders2.CustomerID)) * 100 as CustomerRetentionRate FROM (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE()) as Orders1, (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) as Orders2;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) as TotalRevenue FROM [Order Details] GROUP BY ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS LifetimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT DATE_TRUNC('month', o.OrderDate) AS Month, COUNT(DISTINCT o.CustomerID) AS UniqueCustomers FROM orders o GROUP BY Month;",
            "SELECT ROUND(AVG(Freight), 2) AS AverageFreightCost FROM orders;",
            "SELECT ShipCity, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCity;",
            "SELECT c.CustomerID, SUM(od.Quantity) AS TotalQuantity FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT TOP 1 o.OrderID, od.Discount AS HighestDiscount FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID ORDER BY od.Discount DESC LIMIT 1;",
            "SELECT c.CustomerID, COUNT(o.OrderID) AS OrdersInLastYear FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderDate > CURRENT_DATE - INTERVAL '1 year' GROUP BY c.CustomerID;",
            "SELECT ROUND((COUNT(OrderID) FILTER (WHERE ShippedDate > RequiredDate) * 1.0 / COUNT(OrderID)), 2) * 100 AS LateShipmentsPercentage FROM orders;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalOrderValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalOrderValue DESC LIMIT 5;",
            "SELECT ROUND(AVG(DATE_PART('day', ShippedDate - OrderDate)), 2) AS AvgShippingTime FROM orders;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS CLV FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY CLV DESC LIMIT 1;",
            "SELECT c.Region, SUM(od.Quantity) AS TotalQuantity FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.Region;",
            "SELECT Country, COUNT(CustomerID) AS NumberOfCustomers FROM customers GROUP BY Country;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrdersHandled FROM orders GROUP BY EmployeeID;",
            "SELECT ROUND(AVG(od.Discount), 2) AS AverageDiscount FROM [Order Details] od;",
            "SELECT ProductID, COUNT(*) AS OrderCount FROM [Order Details] GROUP BY ProductID ORDER BY OrderCount DESC;",
            "WITH DistinctCustomers AS (SELECT COUNT(DISTINCT o.CustomerID) AS TotalCustomers FROM orders o WHERE o.OrderDate BETWEEN CURRENT_DATE - INTERVAL '1 month' AND CURRENT_DATE) SELECT (DistinctCustomers.TotalCustomers::NUMERIC / (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate < CURRENT_DATE - INTERVAL '1 month'))*100 AS RetentionRate FROM DistinctCustomers;",
            "SELECT City, COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM customers GROUP BY City ORDER BY UniqueCustomers DESC LIMIT 1;",
            "SELECT * FROM customers WHERE Country = 'Germany';",
            "SELECT CustomerID, COUNT(*) AS total_orders FROM orders GROUP BY CustomerID;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
            "SELECT CustomerID, COUNT(*) AS order_count FROM orders GROUP BY CustomerID ORDER BY order_count DESC LIMIT 1;",
            "SELECT * FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT customers.CustomerID, AVG(orders.revenue) AS avg_order_value FROM (SELECT orders.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS revenue FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID) orders INNER JOIN customers ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY total_revenue DESC LIMIT 5;",
            "SELECT (COUNT(DISTINCT CASE WHEN orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' THEN orders.CustomerID END) / COUNT(DISTINCT CASE WHEN orders.OrderDate < '2023-01-01' THEN orders.CustomerID END)) AS customer_retention_rate FROM orders;",
            "SELECT ProductID, SUM(Quantity) AS total_quantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT * FROM customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM orders);",
            "SELECT OrderID, Freight FROM orders ORDER BY Freight DESC LIMIT 1;",
            "SELECT AVG(Discount) AS avg_discount FROM [Order Details];",
            "SELECT ShipCountry, SUM(Freight) AS total_freight_cost FROM orders GROUP BY ShipCountry;",
            "SELECT customers.CustomerID, MAX(orders.OrderDate) AS last_order_date FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
            "SELECT ShipCity, COUNT(*) AS total_orders FROM orders GROUP BY ShipCity ORDER BY total_orders DESC LIMIT 3;",
            "SELECT COUNT(*) FROM orders WHERE ShipCountry = 'USA' AND OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE();",
            "SELECT DISTINCT customers.CustomerID, customers.CompanyName FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE [Order Details].Discount > 0.15;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_shipping_time FROM orders WHERE ShippedDate IS NOT NULL;",
            "SELECT customers.CustomerID, customers.Region, COUNT(orders.OrderID) AS total_orders FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID, customers.Region;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "WITH previous_period AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate < '2023-01-01'), current_period AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31') SELECT (SELECT COUNT(*) FROM current_period) / (SELECT COUNT(*) FROM previous_period) AS RetentionRate;",
            "SELECT City, COUNT(CustomerID) AS NumberOfCustomers FROM customers GROUP BY City ORDER BY NumberOfCustomers DESC LIMIT 5;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT c.CustomerID FROM customers c LEFT JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.CustomerID IS NULL;",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE OrderDate BETWEEN '2023-03-01' AND '2023-03-31';",
            "SELECT c.CustomerID, SUM(od.Quantity) AS TotalQuantity FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT ProductID, COUNT(*) AS OrderCount FROM [Order Details] GROUP BY ProductID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT c.City, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.City;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 5000;",
            "SELECT ShipVia, COUNT(*) AS OrderCount FROM orders GROUP BY ShipVia;",
            "SELECT c.CustomerID, AVG((od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(o.OrderID)) AS AverageOrderValue FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "WITH monthly_revenue AS (SELECT DATE_TRUNC('month', OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE EXTRACT(YEAR FROM OrderDate) = 2020 GROUP BY DATE_TRUNC('month', OrderDate)) SELECT OrderMonth, TotalRevenue FROM monthly_revenue ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 10;",
            "SELECT ShipCountry, COUNT(*) AS NumberOfOrders FROM orders GROUP BY ShipCountry ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT c.CustomerID, COUNT(o.OrderID) AS OrderCount, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, COUNT(o.OrderID) / (DATE_PART('year', age(MAX(o.OrderDate), MIN(o.OrderDate))) + 1) AS AvgOrdersPerYear FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT CustomerID, ContactName, Phone FROM customers;",
            "SELECT * FROM orders WHERE CustomerID = 'VINET';",
            "SELECT ShipCountry, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipCountry;",
            "SELECT AVG(Freight) AS AverageFreight FROM orders;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT DISTINCT City FROM customers;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT SUM(Quantity * UnitPrice * Discount) AS TotalDiscount FROM [Order Details];",
            "SELECT o.CustomerID, o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS OrderAmount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.CustomerID, o.OrderID ORDER BY OrderAmount DESC LIMIT 1;",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "SELECT * FROM orders WHERE OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY);",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS CustomerLifetimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT AVG(Quantity) AS AverageQuantityPerOrder FROM [Order Details];",
            "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipVia ORDER BY OrderCount DESC LIMIT 3;",
            "(SELECT COUNT(DISTINCT o1.CustomerID) AS ReturningCustomers FROM orders o1 WHERE o1.OrderDate BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) AND CURRENT_DATE) / (SELECT COUNT(DISTINCT CustomerID) FROM orders WHERE OrderDate < DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH)) AS CustomerRetentionRate;",
            "SELECT ProductID, COUNT(OrderID) AS OrderFrequency FROM [Order Details] GROUP BY ProductID ORDER BY OrderFrequency DESC LIMIT 10;",
            "SELECT c.Region, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.Region;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSpent FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalSpent DESC;",
            "SELECT c.Country, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderAmount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.Country;",
            "SELECT CustomerID, CompanyName FROM customers WHERE CustomerID NOT IN (SELECT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(*) AS NumberOfOrders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR) GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS LifetimeValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY LifetimeValue DESC LIMIT 10;",
            "SELECT ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM [Order Details] GROUP BY ProductID;",
            "SELECT orders.CustomerID, COUNT(DISTINCT [Order Details].ProductID) AS UniqueProductsPurchased FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.CustomerID;",
            "SELECT EmployeeID, COUNT(*) AS NumberOfOrders FROM orders GROUP BY EmployeeID ORDER BY NumberOfOrders DESC;",
            "SELECT ShipVia, COUNT(*) AS NumberOfOrders FROM orders GROUP BY ShipVia ORDER BY NumberOfOrders DESC;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT orders.CustomerID) * 100.0 / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AS RetentionRate FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();",
            "SELECT Region, COUNT(DISTINCT customers.CustomerID) AS ReturningCustomers FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Region;",
            "SELECT ProductID, COUNT(*) AS NumberOfOrders FROM [Order Details] GROUP BY ProductID ORDER BY NumberOfOrders DESC LIMIT 10;",
            "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT ContactTitle, COUNT(*) AS NumberOfContacts FROM customers GROUP BY ContactTitle ORDER BY NumberOfContacts DESC LIMIT 1;",
            "SELECT ProductID, SUM(Quantity) AS OrderQuantity FROM [Order Details] GROUP BY ProductID ORDER BY OrderQuantity DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS MonthlyFreightCost FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT customers.CustomerID, MAX([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS LargestOrderValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY LargestOrderValue DESC;",
            "SELECT customers.CustomerID, customers.CompanyName, COUNT(orders.OrderID) AS OrderCount FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID, customers.CompanyName;",
            "SELECT customers.CustomerID, customers.CompanyName, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderAmount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID, customers.CompanyName;",
            "SELECT customers.CustomerID, customers.CompanyName, SUM([Order Details].Quantity) AS TotalQuantity FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID, customers.CompanyName ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.ShipCountry = 'Germany';",
            "SELECT [Order Details].ProductID, SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY TotalQuantity DESC;",
            "SELECT DISTINCT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE [Order Details].ProductID = 1;",
            "SELECT AVG(Freight) AS AverageFreightCost FROM orders;",
            "SELECT orders.ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.ShipCountry;",
            "SELECT orders.ShipCity, COUNT(orders.OrderID) AS OrderCount FROM orders GROUP BY orders.ShipCity ORDER BY OrderCount DESC LIMIT 3;",
            "SELECT [Order Details].ProductID, COUNT([Order Details].OrderID) AS OrderCount FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT CASE WHEN orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() THEN orders.CustomerID END) / COUNT(DISTINCT CASE WHEN orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR) THEN orders.CustomerID END) AS RetentionRate FROM orders;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders WHERE ShippedDate IS NOT NULL;",
            "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY EmployeeID;",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID HAVING COUNT(OrderID) > 10;",
            "SELECT c.CustomerID, o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS OrderValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID, o.OrderID ORDER BY OrderValue DESC LIMIT 1;",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS LifeTimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY LifeTimeValue DESC LIMIT 1;",
            "SELECT c.Country, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.Country;",
            "SELECT AVG(Freight) AS AverageFreight FROM orders;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT OrderID FROM orders WHERE ShippedDate IS NOT NULL AND RequiredDate IS NULL;",
            "SELECT c.CustomerID FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderDate >= DATEADD(MONTH, -12, CURRENT_DATE) GROUP BY c.CustomerID HAVING COUNT(DISTINCT MONTH(o.OrderDate)) = 12;",
            "SELECT ProductID, COUNT(OrderID) AS OrderCount FROM [Order Details] GROUP BY ProductID ORDER BY OrderCount DESC;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT c.CustomerID, COUNT(o.OrderID) / (YEAR(CURRENT_DATE) - YEAR(MIN(o.OrderDate)) + 1) AS AvgOrdersPerYear FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, COUNT(o.OrderID) AS LateOrderCount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.RequiredDate < o.ShippedDate GROUP BY c.CustomerID ORDER BY LateOrderCount DESC LIMIT 1;",
            "SELECT (COUNT(DISTINCT CASE WHEN o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' THEN o.CustomerID END) / COUNT(DISTINCT CASE WHEN o.OrderDate < '2022-01-01' THEN o.CustomerID END)) AS RetentionRate FROM orders o;",
            "SELECT (COUNT(DISTINCT CASE WHEN Discount > 0 THEN OrderID END) / COUNT(DISTINCT OrderID)) * 100 AS DiscountPercentage FROM [Order Details];",
            "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT COUNT(*) FROM orders WHERE YEAR(OrderDate) = 2022;",
            "SELECT AVG(Freight) FROM orders WHERE ShipCountry = 'USA';",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE customers.CustomerID = 'ALFKI';",
            "SELECT (COUNT(*) FILTER (WHERE ShippedDate > RequiredDate)) * 100.0 / COUNT(*) AS PercentageLate FROM orders;",
            "SELECT COUNT(DISTINCT ProductID) FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate BETWEEN '2022-01-01' AND '2022-01-31';",
            "SELECT COUNT(*) FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE customers.Country = 'Germany';",
            "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 3;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice * [Order Details].Discount) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate BETWEEN '2021-12-01' AND '2021-12-31';",
            "SELECT ProductID, COUNT(*) AS OrderCount FROM [Order Details] GROUP BY ProductID HAVING OrderCount > 10;",
            "SELECT AVG(SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount))) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate > (CURRENT_DATE - INTERVAL '6 months') GROUP BY orders.OrderID;",
            "SELECT TO_CHAR(OrderDate, 'YYYY-MM') AS Month, COUNT(*) FROM orders WHERE OrderDate BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY TO_CHAR(OrderDate, 'YYYY-MM');",
            "SELECT ShipRegion, AVG(Freight) AS AvgFreight FROM orders GROUP BY ShipRegion ORDER BY AvgFreight DESC;",
            "SELECT (COUNT(DISTINCT orders.CustomerID) FILTER (WHERE OrderDate BETWEEN '2020-01-01' AND '2020-12-31')) * 100.0 / (COUNT(DISTINCT orders.CustomerID) FILTER (WHERE OrderDate < '2020-01-01')) AS RetentionRate FROM orders;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT COUNT(*) FROM orders WHERE EXTRACT(DOW FROM OrderDate) IN (0, 6);",
            "SELECT EXTRACT(YEAR FROM OrderDate) AS Year, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS YearlyRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Year ORDER BY Year;",
            "SELECT COUNT(*) AS NumberOfOrders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.Country = 'Canada';",
            "SELECT COUNT(*) AS NumberOfOrders FROM orders WHERE OrderDate >= CURRENT_DATE - INTERVAL '1 month';",
            "SELECT ProductID, COUNT(*) AS OrderCount FROM [Order Details] GROUP BY ProductID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT SUM(Quantity * UnitPrice * Discount) AS TotalDiscount FROM [Order Details];",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSpending FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY TotalSpending DESC LIMIT 5;",
            "SELECT (COUNT(DISTINCT CASE WHEN orders.OrderDate BETWEEN '2023-07-01' AND '2023-09-30' THEN orders.CustomerID ELSE NULL END) / COUNT(DISTINCT CASE WHEN orders.OrderDate < '2023-07-01' THEN orders.CustomerID ELSE NULL END)) AS RetentionRate FROM orders;",
            "SELECT customers.CustomerID, MIN(orders.OrderDate) AS EarliestOrderDate FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID ORDER BY EarliestOrderDate ASC LIMIT 1;",
            "SELECT AVG([Order Details].Quantity) AS AverageQuantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.Category = 'Electronics';",
            "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC;",
            "SELECT * FROM orders WHERE ShipCountry = 'Germany';",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShipVia = 3;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE EXTRACT(YEAR FROM orders.ShippedDate) = 2021;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalRevenue FROM [Order Details] GROUP BY ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT EXTRACT(YEAR FROM orders.OrderDate) AS OrderYear, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY EXTRACT(YEAR FROM orders.OrderDate);",
            "SELECT AVG([Order Details].Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT c.Country, COUNT(o.OrderID) AS TotalOrders FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.Country ORDER BY TotalOrders DESC;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-12-31';",
            "SELECT p.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT COUNT(DISTINCT CustomerID) AS CustomerCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT (COUNT(DISTINCT CASE WHEN o.OrderDate BETWEEN '2022-03-01' AND '2023-03-31' THEN o.CustomerID END)::DECIMAL / COUNT(DISTINCT CASE WHEN o.OrderDate < '2022-03-01' THEN o.CustomerID END)::DECIMAL) AS RetentionRate FROM orders o;",
            "SELECT EXTRACT(MONTH FROM o.OrderDate) AS Month, COUNT(DISTINCT o.CustomerID) AS UniqueCustomers FROM orders o WHERE EXTRACT(YEAR FROM o.OrderDate) = 2022 GROUP BY Month ORDER BY Month;",
            "SELECT EXTRACT(MONTH FROM o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE EXTRACT(YEAR FROM o.OrderDate) = 2022 GROUP BY Month ORDER BY Month;",
            "SELECT p.ProductID, p.ProductName, AVG(od.UnitPrice) AS AverageUnitPrice FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT ShipVia, COUNT(OrderID) AS ShippingCount FROM orders GROUP BY ShipVia ORDER BY ShippingCount DESC;",
            "SELECT o.OrderID, SUM(od.Quantity) AS TotalQuantity FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID;",
            "SELECT AVG(julianday(ShippedDate) - julianday(OrderDate)) AS AverageProcessingTime FROM orders;",
            "SELECT COUNT(*) AS DiscountedOrders FROM [Order Details] WHERE Discount > 0.2;",
            "SELECT SUM(od.UnitPrice * od.Quantity) AS TotalRevenue FROM [Order Details] od WHERE od.Discount = 0;",
            "SELECT DISTINCT customers.* FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.Freight > 100;",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS OrderCount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate BETWEEN '2022-12-01' AND '2022-12-31' GROUP BY customers.CustomerID;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT OrderID, SUM((UnitPrice * Quantity * Discount)) AS TotalDiscount FROM [Order Details] GROUP BY OrderID;",
            "SELECT COUNT(DISTINCT ProductID) AS DistinctProducts FROM [Order Details];",
            "SELECT SUM(Quantity) AS TotalQuantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT orders.*, customers.ContactName FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID;",
            "SELECT (COUNT(DISTINCT CASE WHEN orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' THEN orders.CustomerID END) * 1.0 / COUNT(DISTINCT orders.CustomerID)) AS RetentionRate FROM orders;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipVia;",
            "SELECT customers.* FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderID IS NULL OR orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT orders.*, ShipName, ShipCity, ShipPostalCode, ShipCountry FROM orders;",
            "SELECT City, COUNT(*) AS CustomerCount FROM customers GROUP BY City ORDER BY CustomerCount DESC;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, COUNT(o.OrderID) AS OrderCount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT Country, COUNT(CustomerID) AS CustomerCount FROM customers GROUP BY Country;",
            "SELECT o.OrderID, p.ProductID, p.ProductName, od.Quantity, od.UnitPrice FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderID = ?;",
            "SELECT c.CustomerID, AVG(od.Discount) AS AvgDiscount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT COUNT(OrderID) AS OnTimeOrders FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT c.CustomerID, SUM(o.Freight) AS TotalFreight FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID;",
            "SELECT p.ProductName, COUNT(od.ProductID) AS OrderCount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY OrderMonth;",
            "WITH PreviousCustomers AS (SELECT CustomerID FROM orders WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) SELECT (SELECT COUNT(DISTINCT CustomerID) FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() AND CustomerID IN (SELECT * FROM PreviousCustomers)) / (SELECT COUNT(DISTINCT CustomerID) FROM PreviousCustomers) AS RetentionRate;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS OrderCount FROM orders GROUP BY OrderMonth ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT c.CustomerID, DATE_FORMAT(o.OrderDate, '%Y-%m') AS OrderMonth, COUNT(o.OrderID) AS OrderCount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID, OrderMonth;",
            "SELECT City, COUNT(CustomerID) AS CustomerCount FROM customers GROUP BY City ORDER BY CustomerCount DESC LIMIT 1;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT ShipVia, COUNT(OrderID) AS ShipCount FROM orders GROUP BY ShipVia ORDER BY ShipCount DESC LIMIT 1;",
            "SELECT c.CustomerID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgShippingTime FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID;",
            "SELECT p.ProductID, p.ProductName, MAX(od.Discount) AS MaxDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY MaxDiscount DESC LIMIT 1;",
            "SELECT COUNT(*) FROM customers;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT DISTINCT c.CustomerID, c.CompanyName FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);",
            "SELECT c.Country, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.Country;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS LifetimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY LifetimeValue DESC LIMIT 5;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, COUNT(o.OrderID) AS TotalOrders FROM orders o GROUP BY Month;",
            "SELECT c.Region, COUNT(c.CustomerID) AS NumberOfCustomers FROM customers c GROUP BY c.Region;",
            "SELECT o.OrderID FROM orders o WHERE o.ShippedDate IS NULL;",
            "SELECT o.ShipVia, SUM(o.Freight) AS TotalFreight FROM orders o GROUP BY o.ShipVia;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS ProductRevenue FROM [Order Details] od GROUP BY od.ProductID ORDER BY ProductRevenue DESC LIMIT 10;",
            "SELECT c.CustomerID, COUNT(o.OrderID) AS NumberOfOrders FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID HAVING COUNT(o.OrderID) > 10;",
            "SELECT AVG(od.Discount) AS AverageDiscount FROM [Order Details] od;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlyRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY Month;",
            "SELECT c.CustomerID, c.CompanyName FROM customers c WHERE c.CustomerID NOT IN (SELECT o.CustomerID FROM orders o WHERE o.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH));",
            "SELECT o.ShipCountry, COUNT(o.OrderID) AS NumberOfOrders FROM orders o GROUP BY o.ShipCountry;",
            "SELECT o.OrderID, o.ShipAddress, o.ShipCity, o.ShipRegion, o.ShipPostalCode, o.ShipCountry FROM orders o;",
            "SELECT AVG(od.Quantity) AS AverageProductsPerOrder FROM [Order Details] od;",
            "SELECT MAX(o.Freight) AS MaxFreight, MIN(o.Freight) AS MinFreight FROM orders o WHERE o.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS TotalOrders FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID ORDER BY TotalOrders DESC;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC;",
            "SELECT Region, COUNT(CustomerID) AS TotalCustomers FROM customers GROUP BY Region ORDER BY TotalCustomers DESC;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS CustomerLifetimeValue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY CustomerLifetimeValue DESC LIMIT 1;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders;",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry ORDER BY TotalRevenue DESC;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY TotalOrderValue DESC LIMIT 5;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY OrderMonth ORDER BY OrderMonth;",
            "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY EmployeeID ORDER BY TotalOrders DESC;",
            "SELECT products.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.CategoryID ORDER BY TotalRevenue DESC;",
            "SELECT customers.Region, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesRevenue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.Region ORDER BY TotalSalesRevenue DESC LIMIT 3;",
            "SELECT OrderID, AVG(Quantity) AS AverageProductsOrdered FROM [Order Details] GROUP BY OrderID;",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders;",
            "SELECT COUNT(*) AS OrdersLastMonth FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalRevenue FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT COUNT(*) AS OrdersInUSA FROM orders WHERE ShipCountry = 'USA';",
            "SELECT SUM(Discount * Quantity * UnitPrice) AS TotalDiscount FROM [Order Details];",
            "SELECT (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE()) / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH)) AS CustomerRetentionRate;",
            "SELECT * FROM orders WHERE OrderDate > RequiredDate;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG([Order Details].UnitPrice * [Order Details].Quantity) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT ShipName, MAX(Freight) AS HighestFreight FROM orders GROUP BY ShipName ORDER BY HighestFreight DESC LIMIT 1;",
            "SELECT ShipVia, COUNT(*) AS OrdersShipped FROM orders GROUP BY ShipVia;",
            "SELECT AVG(Quantity) AS AverageQuantity FROM [Order Details];",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders;",
            "SELECT ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipRegion ORDER BY TotalRevenue DESC;",
            "SELECT OrderID, AVG(Discount) AS AverageDiscount FROM [Order Details] GROUP BY OrderID;",
            "SELECT DISTINCT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate >= DATEADD(DAY, -30, GETDATE());",
            "SELECT AVG(Discount) as AverageDiscount FROM [Order Details];",
            "SELECT MONTH(OrderDate) as Month, COUNT(*) as OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(GETDATE()) GROUP BY MONTH(OrderDate);",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry ORDER BY TotalRevenue DESC;",
            "SELECT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID, customers.CompanyName HAVING COUNT(orders.OrderID) > 1;",
            "SELECT [Order Details].ProductID, SUM([Order Details].Quantity) as TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(GETDATE())-1 GROUP BY [Order Details].ProductID ORDER BY TotalQuantity DESC;",
            "SELECT ShipVia, COUNT(*) as UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC;",
            "SELECT COUNT(DISTINCT CustomerID) FROM orders WHERE OrderDate >= DATEADD(MONTH, -3, GETDATE());",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as CustomerLifetimeValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY CustomerLifetimeValue DESC;",
            "SELECT [Order Details].ProductID, SUM([Order Details].Quantity) as TotalQuantity FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY TotalQuantity ASC;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID",
            "SELECT Country, COUNT(CustomerID) AS NumberOfCustomers FROM customers GROUP BY Country",
            "SELECT ProductID, COUNT(ProductID) AS Frequency FROM [Order Details] GROUP BY ProductID ORDER BY Frequency DESC",
            "SELECT AVG(TotalOrderValue) AS AverageOrderValue FROM (SELECT orders.OrderID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID) AS OrderValues",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipCountry",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details]",
            "SELECT CategoryID, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY CategoryID",
            "SELECT (COUNT(OrderID) FILTER (WHERE OrderDate BETWEEN '2022-10-01' AND '2022-12-31')) / (COUNT(OrderID)) * 100 AS PercentageOrders FROM orders",
            "SELECT customers.CustomerID, customers.CompanyName FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderID IS NULL OR orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR)",
            "SELECT OrderID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalOrderValue FROM [Order Details] GROUP BY OrderID ORDER BY TotalOrderValue DESC LIMIT 1",
            "SELECT ShipCity, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 1",
            "SELECT (COUNT(DISTINCT CustomerID) FILTER (WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE())) / (COUNT(DISTINCT CustomerID) FILTER (WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH))) AS RetentionRate FROM orders",
            "SELECT ShipCountry, AVG(TotalOrderValue) AS AverageOrderValue FROM (SELECT orders.ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID) AS OrderValues GROUP BY ShipCountry ORDER BY AverageOrderValue DESC",
            "SELECT AVG(OrderCount) AS AverageOrders FROM (SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID HAVING COUNT(OrderID) > 1) AS ReturningCustomers",
            "SELECT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.Freight > 100 GROUP BY customers.CustomerID, customers.CompanyName",
            "SELECT COUNT(*) as total_orders FROM orders;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as total_revenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, c.CompanyName FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as lifetime_value FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, c.CompanyName, COUNT(o.OrderID) as total_orders FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID ORDER BY total_orders DESC LIMIT 5;",
            "SELECT c.CustomerID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) as average_order_value FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT ShipVia, SUM(Freight) as total_freight_cost FROM orders GROUP BY ShipVia;",
            "SELECT ShipCountry, COUNT(*) as number_of_orders FROM orders GROUP BY ShipCountry;",
            "SELECT DISTINCT c.CustomerID, c.CompanyName FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.Discount > 0.0;",
            "SELECT (COUNT(DISTINCT returning_customers.CustomerID) * 100.0 / COUNT(DISTINCT initial_customers.CustomerID)) as retention_rate FROM (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN '2021-10-01' AND '2021-12-31') returning_customers, (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate < '2021-07-01') initial_customers;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as order_month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as total_sales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY order_month ORDER BY total_sales DESC LIMIT 1;",
            "SELECT o.OrderID, o.RequiredDate, o.ShippedDate FROM orders o WHERE o.ShippedDate > o.RequiredDate;",
            "SELECT (COUNT(*) / (SELECT COUNT(*) from orders) * 100) as percent_same_country FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE o.ShipCountry = c.Country;",
            "SELECT ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as total_revenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCountry;",
            "SELECT ShipRegion, COUNT(*) as number_of_orders FROM orders GROUP BY ShipRegion ORDER BY number_of_orders DESC LIMIT 3;",
            "SELECT ProductID, AVG(Discount) as average_discount FROM [Order Details] GROUP BY ProductID;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as TotalRevenue FROM [Order Details] od GROUP BY od.ProductID;",
            "SELECT c.CustomerID, c.CompanyName FROM customers c LEFT JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderID IS NULL OR o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT (COUNT(DISTINCT o1.CustomerID) / COUNT(DISTINCT o2.CustomerID)) * 100 as RetentionRate FROM orders o1, orders o2 WHERE o1.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE() AND o2.OrderDate < DATE_SUB(CURDATE(), INTERVAL 3 MONTH);",
            "SELECT * FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT EmployeeID, COUNT(OrderID) as OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as CustomerLifetimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as MonthlyRevenue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY Month;",
            "SELECT ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipRegion ORDER BY TotalRevenue DESC LIMIT 3;",
            "SELECT DISTINCT c.CustomerID FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.ProductID = <specific_product_id>;",
            "SELECT c.CustomerID, SUM(o.Freight) AS TotalFreightCost FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID;",
            "SELECT TOP 5 c.CustomerID, SUM(od.Quantity) AS TotalQuantity FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalQuantity DESC;",
            "SELECT o.ShipCountry, COUNT(o.OrderID) AS NumberOfOrders FROM orders o GROUP BY o.ShipCountry;",
            "SELECT c.CustomerID FROM customers c LEFT JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.ShippedDate IS NULL AND o.OrderID IS NOT NULL;",
            "SELECT c.CustomerID FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 10000;",
            "SELECT c.CustomerID, AVG(od.Quantity) AS AverageProductsPerOrder FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT o.OrderID, MAX(od.Discount) AS MaxDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID ORDER BY MaxDiscount DESC;",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE c.Country = '<specific_country>' GROUP BY c.CustomerID;",
            "SELECT DISTINCT c.CustomerID FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderDate >= DATEADD(month, -1, GETDATE());",
            "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS CustomerLifetimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
            "SELECT (COUNT(DISTINCT o.CustomerID) WHERE o.OrderDate BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE()) / (COUNT(DISTINCT o.CustomerID) WHERE o.OrderDate < DATEADD(year, -1, GETDATE())) AS CustomerRetentionRate FROM orders o;",
            "SELECT c.CustomerID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY AverageOrderValue DESC LIMIT 1;",
            "SELECT o.OrderID FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE o.ShipAddress <> c.Address OR o.ShipCity <> c.City OR o.ShipRegion <> c.Region OR o.ShipPostalCode <> c.PostalCode OR o.ShipCountry <> c.Country;",
            "SELECT c.CustomerID, COUNT(o.OrderID) AS NumberOfOrders FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderDate BETWEEN 'YYYY-MM-DD' AND 'YYYY-MM-DD' GROUP BY c.CustomerID;",
            "SELECT c.CustomerID, od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Revenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID, od.ProductID ORDER BY Revenue DESC LIMIT 10;",
            "SELECT Country, COUNT(*) AS NumberOfCustomers FROM customers GROUP BY Country;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2022;",
            "SELECT [Order Details].ProductID, COUNT([Order Details].ProductID) AS OrderCount FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY OrderCount DESC;",
            "SELECT MONTH(OrderDate) AS OrderMonth, COUNT(*) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY OrderMonth;",
            "SELECT COUNT(DISTINCT CustomerID) AS DistinctCustomers FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-03-31';",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] GROUP BY [Order Details].ProductID;",
            "SELECT SUM([Order Details].Discount * [Order Details].UnitPrice * [Order Details].Quantity) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2022;",
            "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate AND YEAR(OrderDate) = 2022;",
            "SELECT AVG(Quantity) AS AverageQuantity FROM [Order Details];",
            "SELECT ShipVia, COUNT(*) AS ShippingCount FROM orders GROUP BY ShipVia ORDER BY ShippingCount DESC;",
            "SELECT ShipRegion, COUNT(*) AS NumberOfOrders FROM orders GROUP BY ShipRegion;",
            "SELECT (COUNT(DISTINCT CASE WHEN YEAR(orders.OrderDate) = 2022 THEN orders.CustomerID END) * 1.0) / (COUNT(DISTINCT orders.CustomerID) WHERE YEAR(orders.OrderDate) < 2022) AS RetentionRate FROM orders;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.Country = 'USA';",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ShipCity, COUNT(OrderID) as NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 5;",
            "SELECT ShipCountry, SUM(Freight) as TotalFreight FROM orders GROUP BY ShipCountry;",
            "SELECT Region, COUNT(CustomerID) as NumberOfCustomers FROM customers GROUP BY Region;",
            "SELECT OrderID FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT customers.CustomerID FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID WHERE customers.CustomerID NOT IN (SELECT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(NOW(), INTERVAL 1 YEAR));",
            "SELECT ProductID, SUM(Quantity * UnitPrice * Discount) as TotalDiscount FROM [Order Details] GROUP BY ProductID;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as CLV FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
            "SELECT (COUNT(DISTINCT a.CustomerID) / COUNT(DISTINCT b.CustomerID)) * 100 as RetentionRate FROM orders a, orders b WHERE a.OrderDate BETWEEN CURDATE() - INTERVAL 1 MONTH AND CURDATE() AND b.OrderDate < CURDATE() - INTERVAL 1 MONTH;",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) as OrderCount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate > DATE_SUB(NOW(), INTERVAL 6 MONTH) GROUP BY customers.CustomerID;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) as AverageShippingTime FROM orders GROUP BY ShipVia;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as Revenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate > DATE_SUB(NOW(), INTERVAL 3 MONTH) GROUP BY customers.CustomerID ORDER BY Revenue DESC LIMIT 3;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, COUNT(OrderID) as TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY Month;",
            "SELECT ProductID, SUM(Quantity) as TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC;",
            "SELECT customers.CustomerID FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE customers.Country = 'USA' GROUP BY customers.CustomerID HAVING COUNT(orders.OrderID) > 5;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * Discount) as TotalDiscount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID HAVING TotalDiscount > 100;"
        ],
        "reviews": [
            "Correct. The SQL query properly calculates the total revenue generated by each customer.",
            "Correct. The SQL query properly counts the number of orders placed by each customer and orders the result in descending order.",
            "Correct. The SQL query correctly calculates the average order value from the [Order Details] table.",
            "Correct. The SQL query properly calculates the total revenue generated by each product and orders the result in descending order.",
            "Correct. The SQL query correctly retrieves customers located in the USA.",
            "Correct. The SQL query correctly counts the number of orders placed in the last year.",
            "Correct. The SQL query properly counts the number of times each shipping method was used and orders the result in descending order.",
            "Incorrect. There is no mention of an 'employees' table in the schema. Correct version might be: SELECT o.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM orders o GROUP BY o.EmployeeID ORDER BY OrderCount DESC;",
            "Correct. The SQL query correctly calculates the total freight costs by shipping country and orders the result in descending order.",
            "Correct. The SQL query properly calculates the average time between the order date and the shipped date.",
            "Correct. The SQL query correctly retrieves customers who have never placed an order.",
            "Correct. The SQL query properly calculates the total discount given to each customer.",
            "Correct. The SQL query properly counts the number of orders that included products with a discount of more than 10%.",
            "Correct. The SQL query properly calculates the total revenue generated per product.",
            "Correct. The SQL query correctly counts the number of customers in each city and orders the result in descending order.",
            "Correct. The SQL query properly calculates the total quantity of products ordered per customer.",
            "Correct. The SQL query correctly retrieves orders that have not been shipped yet.",
            "Correct. The SQL query correctly calculates the customer retention rate for the last month.",
            "Correct. The SQL query properly calculates the total spending per customer and filters for customers who have spent more than $10,000.",
            "Correct. The SQL query properly counts the occurrence of each order quantity and orders the result in descending order.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The query is returning the average shipping time for each order instead of the overall average shipping time. Correct query: SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) as AverageShippingTime FROM orders;",
            "Correct.",
            "Correct.",
            "Incorrect. The formula needs to include the specific dates for the last year. Correct query: SELECT (COUNT(DISTINCT Orders1.CustomerID) / COUNT(DISTINCT Orders2.CustomerID)) * 100 as CustomerRetentionRate FROM (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE()) as Orders1 JOIN (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) as Orders2 ON Orders1.CustomerID = Orders2.CustomerID;",
            "Correct.",
            "Correct. The query accurately calculates the lifetime value by aggregating the revenue from each customer's orders.",
            "Correct. The query properly groups by month and counts distinct customers for each month.",
            "Correct. The query efficiently calculates the average freight cost across all orders.",
            "Correct. The query counts the number of orders shipped to each city by grouping on ShipCity.",
            "Correct. This query aggregates the quantity of products ordered by each customer as required.",
            "Incorrect. To find the order with the highest discount, you should use LIMIT 1 after ordering by discount in descending order. Updated query: SELECT TOP 1 o.OrderID, od.Discount AS HighestDiscount FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID ORDER BY od.Discount DESC LIMIT 1;",
            "Correct. The query counts orders placed by each customer in the past year.",
            "Correct. The query calculates late shipments as a percentage of all orders.",
            "Correct. The query correctly uses aggregation and filtering to find the top five customers by total order value.",
            "Correct. The query accurately calculates the average shipping time in days.",
            "Correct. The query identifies the customer with the highest lifetime value by ordering the summed values in descending order and limiting to 1 result.",
            "Incorrect. The original query mistakenly references a region alias that doesn't exist. The corrected query is: SELECT c.Region, SUM(od.Quantity) AS TotalQuantity FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.Region;",
            "Correct. The query counts the number of customers in each country by grouping on the Country field.",
            "Correct. The query counts the number of orders handled by each employee.",
            "Correct. The query calculates the average discount across all order details.",
            "Correct. The query counts and orders products based on their frequency of being ordered.",
            "Incorrect. The initial CTE was missing a SELECT statement point to the result. Corrected query: WITH DistinctCustomers AS (SELECT COUNT(DISTINCT o.CustomerID) AS TotalCustomers FROM orders o WHERE o.OrderDate BETWEEN CURRENT_DATE - INTERVAL '1 month' AND CURRENT_DATE) SELECT (DistinctCustomers.TotalCustomers::NUMERIC / (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate < CURRENT_DATE - INTERVAL '1 month'))*100 AS RetentionRate FROM DistinctCustomers;",
            "Correct. The query finds the city with the highest number of unique customers by grouping and ordering the results appropriately.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Original query computes the average order value by individual items, not by orders. Corrected query computes the average order value based on orders which reflects individual transactions.",
            "Correct.",
            "Original query syntax is not correct for the conditional aggregation. Corrected query uses conditional aggregation to compute the retention rate.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct query to calculate the total revenue from each customer over their lifetime.",
            "Correct query to calculate the retention rate for January 2023. However, the final select statement should ensure that retention rate is computed as a percentage.",
            "Correct query to list the top 5 cities with the highest number of customers.",
            "Correct query to calculate the average discount applied on all orders.",
            "Correct query to identify customers who have never placed an order.",
            "Correct query to calculate total freight cost for orders shipped in March 2023.",
            "Correct query to get the total quantity of products ordered by each customer.",
            "Correct query to determine the customer with the highest lifetime value.",
            "Correct query to find the most frequently ordered product.",
            "Correct query to calculate the total revenue generated by each city's customers.",
            "Correct query to list customers who have placed orders above $5000.",
            "Correct query to get the breakdown of orders by shipping method.",
            "The original query calculated average order value, but it needs to factor in the total value of each order instead of unit price quantities. Fixed in the corrected query.",
            "The original query had issues in identifying the month with the highest revenue. The corrected query accurately finds the month and its revenue.",
            "Correct query to find the top 10 most popular products based on quantity ordered.",
            "Correct query to find the country with the highest number of orders.",
            "Correct query to get the list of customers with their total orders and revenue.",
            "Correct query to find the average number of orders placed per year by each customer, with a slight adjustment to account for partial years in the calculation.",
            "Correct query to calculate the total number of orders and revenue generated for each employee.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The provided query needs to be adjusted to correctly consider the date ranges for both returning and total customers before the start date.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "This query is correct.",
            "Corrected the GROUP BY clause to use DATE_FORMAT(OrderDate, '%Y-%m') instead of 'Month'.",
            "Corrected query to include 'customers.CustomerID' in the GROUP BY clause.",
            "This query is correct.",
            "Corrected the clause to use 'orders.CustomerID' instead of 'CustomerID'.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "Corrected the SUM() function to sum up 'Quantity' instead of COUNT().",
            "Corrected query to use 'DATE_FORMAT(OrderDate, '%Y-%m')' instead of 'Month' in the GROUP BY and ORDER BY clauses.",
            "Corrected query to include 'customers.CustomerID' in the GROUP BY clause.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The original query syntax is problematic because it uses the WHERE clause directly on aggregated results. The corrected query uses COUNT with CASE WHEN to achieve customer retention rate calculation.",
            "Correct",
            "Correct",
            "Correct",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query. The correct query is: SELECT OrderID FROM orders WHERE ShippedDate IS NOT NULL AND RequiredDate IS NULL;",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query. The correct query is: SELECT (COUNT(DISTINCT CASE WHEN o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' THEN o.CustomerID END) / COUNT(DISTINCT CASE WHEN o.OrderDate < '2022-01-01' THEN o.CustomerID END)) AS RetentionRate FROM orders o;",
            "Correct query.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query correctly counts the orders placed by customers in Canada by joining the orders and customers tables and applying the appropriate filter.",
            "CORRECTED: The query uses 'CURRENT_DATE - INTERVAL '1 month'' for calculating the date a month ago instead of 'NOW()'.",
            "The query correctly counts the number of times each product has been ordered and orders them to find the most frequently ordered product.",
            "The query correctly calculates the total discount given on all orders by summing the product of Quantity, UnitPrice, and Discount.",
            "The query correctly lists the top 5 customers based on their total spending by calculating the revenue in a similar manner to the first query and then limiting the results.",
            "CORRECTED: The query should use the correct syntax for conditional aggregation with 'CASE WHEN' and dividing the counts appropriately.",
            "The query correctly identifies the customer with the earliest order date by using the MIN function and ordering by the result.",
            "CORRECTED: The query correctly calculates the average order quantity for products in the 'Electronics' category by joining the Order Details and Products tables.",
            "The query correctly counts the number of orders handled by each employee and orders the results in descending order.",
            "The query correctly lists all orders that were shipped to Germany by applying the appropriate filter.",
            "The query correctly calculates the total freight cost for orders shipped via method ID 3.",
            "CORRECTED: The query correctly sums the revenue for orders shipped in 2021 by using 'EXTRACT(YEAR FROM orders.ShippedDate)' instead of 'YEAR'.",
            "The query correctly finds the product with the highest total revenue by summing the product of UnitPrice, Quantity, and the adjustment for Discount, then ordering the results.",
            "CORRECTED: The query calculates total revenue for each year using 'EXTRACT(YEAR FROM orders.OrderDate)' for grouping instead of 'YEAR'.",
            "The query correctly calculates the average discount applied per order by averaging the Discount field.",
            "Correct. The query correctly calculates the total number of orders placed by customers from each country.",
            "Correct. The query correctly calculates the total freight cost for all orders made in the year 2022.",
            "Correct. The query correctly identifies the product that has generated the most revenue.",
            "Correct. The query correctly counts the number of orders shipped late.",
            "Correct. The query correctly counts the number of customers who placed orders in January 2023.",
            "Incorrect. The query as written is not valid SQL syntax and needs to use correct CASE WHEN syntax to count customers in the different time frames. The corrected query is: SELECT (COUNT(DISTINCT CASE WHEN o.OrderDate BETWEEN '2022-03-01' AND '2023-03-31' THEN o.CustomerID END)::DECIMAL / COUNT(DISTINCT CASE WHEN o.OrderDate < '2022-03-01' THEN o.CustomerID END)::DECIMAL) AS RetentionRate FROM orders o;",
            "Correct. The query correctly counts the number of unique customers who placed orders each month in 2022.",
            "Correct. The query correctly calculates the total revenue generated each month in 2022.",
            "Correct. The query correctly calculates the average unit price for each product.",
            "Correct. The query correctly identifies the most frequently used shipping method.",
            "Correct. The query correctly calculates the total quantity of products sold in each order.",
            "Correct. The query correctly calculates the average order processing time.",
            "Correct. The query correctly counts the number of products ordered with a discount greater than 20%.",
            "Correct. The query correctly calculates the total revenue generated from orders with no discount.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected query: SELECT (COUNT(DISTINCT CASE WHEN orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' THEN orders.CustomerID END) * 1.0 / COUNT(DISTINCT orders.CustomerID)) AS RetentionRate FROM orders;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The subquery for calculating previous customers is misplaced. Correct query: WITH PreviousCustomers AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR)), CurrentReturningCustomers AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() AND CustomerID IN (SELECT * FROM PreviousCustomers)) SELECT (SELECT COUNT(*) FROM CurrentReturningCustomers) / (SELECT COUNT(*) FROM PreviousCustomers) AS RetentionRate;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Fixed the position of the LIMIT clause, now correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Fixed the HAVING clause condition to use COUNT instead of alias, now correct.",
            "Correct.",
            "Correct.",
            "Fixed the query to use NOT IN clause to identify customers without an order in the last 6 months, now correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Removed unnecessary join with customers table and corrected join placement with proper grouping.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Added products alias to correct the reference for CategoryID.",
            "Fixed alias usage and join references between customers, orders, and [Order Details].",
            "Query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Added missing parentheses for correct aggregation logic.",
            "Correct.",
            "Correct. Fixed percentage symbol for DATE_FORMAT.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The subquery in this query should utilize a FILTER clause to properly calculate the total and percentage counts. Corrected SQL: SELECT (COUNT(OrderID) FILTER (WHERE OrderDate BETWEEN '2022-10-01' AND '2022-12-31')) / (COUNT(OrderID)) * 100 AS PercentageOrders FROM orders",
            "The WHERE clause should account for customers who have no orders in the past year correctly. Switching the NULL check and the date condition within the JOIN on orders will solve this. Corrected SQL: SELECT customers.CustomerID, customers.CompanyName FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderID IS NULL OR orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND orders.CustomerID IS NULL",
            "Correct.",
            "Correct.",
            "Correct.",
            "The subquery in this query should utilize a FILTER clause for precise counting. Corrected SQL: SELECT (COUNT(DISTINCT CustomerID) FILTER (WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE())) / (COUNT(DISTINCT CustomerID) FILTER (WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH))) AS RetentionRate FROM orders",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Query is incorrect. Correct query: SELECT c.CustomerID, c.CompanyName FROM customers c LEFT JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.CustomerID IS NULL OR o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct, but TOP 5 is not standard SQL syntax. Use LIMIT 5 instead: SELECT c.CustomerID, SUM(od.Quantity) AS TotalQuantity FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalQuantity DESC LIMIT 5;",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect use of WHERE clause within the COUNT function. Correct query: SELECT (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE()) / (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate < DATEADD(year, -1, GETDATE())) AS CustomerRetentionRate;",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Original query was incorrect as it missed joining the orders table to use the OrderDate. Corrected query added necessary join.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Original query used an incorrect formula for the retention rate. Corrected query uses conditional aggregation.",
            "Query is correct.",
            "Query is correct.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Fixed the condition to correctly identify customers who have not placed any orders in the last year.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Changed query to correctly display order quantities.",
            "Correct query.",
            "Correct query.",
            "Correct query."
        ],
        "difficulty": [
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced"
        ]
    },
    "Product Analysis": {
        "questions": [
            "What is the total quantity of each product sold?",
            "Which products have been discontinued?",
            "How many products have less than 10 units in stock?",
            "Which categories have the highest number of distinct products?",
            "What is the total sales revenue generated by each product?",
            "Which products are currently on order?",
            "Which suppliers provide the most products?",
            "How many units of each product were ordered last month?",
            "What is the average unit price of products by category?",
            "Which products are below their reorder level?",
            "Which products have the highest inventory turnover ratio?",
            "What is the total value of products currently in stock?",
            "Which products have the highest quantity per unit?",
            "What is the average discount applied to products in order details?",
            "What is the reorder level for each product?",
            "Which products have not been ordered in the last year?",
            "What is the monthly sales trend for each product over the last year?",
            "How many units of each product are currently on order?",
            "What is the total number of orders for each product?",
            "Which products contribute the most to total sales revenue?",
            "What are the total sales (in quantity) for each product?",
            "Which products have a stock level below their reorder level?",
            "What is the total revenue generated by each product?",
            "List the top 5 products with the highest sales revenue.",
            "Which products are discontinued?",
            "What is the average price of products supplied by each supplier?",
            "Which product has the highest unit price?",
            "How many products are supplied by each supplier?",
            "What is the total quantity of each product that is on order?",
            "Which products have not been ordered at all?",
            "What are the total sales (in quantity) for each month?",
            "Calculate the inventory turnover ratio for each product.",
            "Which product categories have the highest sales revenue?",
            "What is the total number of units in stock for each category?",
            "Identify products with high revenue but low stock levels.",
            "What is the average discount applied to products?",
            "List the products along with their suppliers' names.",
            "Find the total quantity sold for each product, excluding discontinued products.",
            "What is the reorder level for each product category?",
            "Calculate the monthly revenue for each product over the past year.",
            "What are the total sales for each product?",
            "What is the average price per unit for products in each category?",
            "What are the total units in stock for each supplier?",
            "Which products have reorder levels below their current stock?",
            "Which suppliers provide the highest number of unique products?",
            "What is the total revenue generated by each product, including discounts?",
            "What is the monthly performance of products based on sales?",
            "Which products have the highest discount applied on average?",
            "What are the top 5 best-selling products?",
            "What is the total quantity ordered for each product?",
            "Which products have no units on order but are below reorder level?",
            "What is the average quantity per unit for products across all categories?",
            "What is the total revenue generated from orders placed in the last month?",
            "Which category has the highest average unit price for its products?",
            "What are the average units in stock for each product?",
            "What is the sum of units ordered for products that are not discontinued?",
            "Which products have been ordered the most times?",
            "What is the average discount given for each supplier's products?",
            "Which products have stock levels below their reorder level?",
            "What is the average unit price of all the products?",
            "List all discontinued products.",
            "Which supplier has supplied the most quantity of products?",
            "What is the total revenue for each product?",
            "Which product has the highest number of units on order?",
            "Calculate the Inventory Turnover Ratio for each product.",
            "Find the products that have never been ordered.",
            "What is the average discount applied to all products in orders?",
            "Which category contributes the most to the total order quantity?",
            "Identify the products with the lowest and highest unit prices.",
            "Which products have been ordered more than 1000 times?",
            "What are the top 5 products with the highest sales revenue?",
            "List the suppliers and the number of distinct products they supply.",
            "Which products are priced above the average unit price?",
            "What is the total number of orders that include a discount of more than 10%?",
            "Calculate the monthly product performance for each product.",
            "What is the total quantity and total revenue for each product category?",
            "Which products have more units on order than units in stock?",
            "What is the total sales quantity for each product?",
            "Which products have over 500 units in stock?",
            "What is the average unit price of products for each supplier?",
            "What is the total revenue generated for each product?",
            "Get the list of all products along with their supplier name.",
            "Find products with a reorder level of 50 or less.",
            "Identify the top 5 products by sales quantity.",
            "What is the inventory turnover ratio for each product?",
            "Which suppliers provide more than 10 different products?",
            "Calculate the monthly product performance in terms of sales quantity.",
            "List the products with the highest and lowest unit prices.",
            "How many products belong to each category?",
            "Calculate the total discount given for each product.",
            "What is the average reorder level for all products?",
            "List products that need to be reordered (UnitsInStock <= ReorderLevel).",
            "Get the total units on order for each supplier.",
            "Determine the total value of units in stock for each product.",
            "Find the product with the highest sales revenue.",
            "What are the names and prices of all products?",
            "Which products are currently discontinued?",
            "What is the total stock of each product?",
            "Which suppliers provide products under category ID 5?",
            "For each product, what is the total revenue from sales?",
            "How many products have stock levels below the reorder level?",
            "Which products have been ordered with a discount?",
            "What are the top 5 products by total sales revenue?",
            "Which products have the highest unit price?",
            "What is the average discount given on all orders?",
            "What is the product performance measurement per month?",
            "Calculate the inventory turnover ratio per month.",
            "Which products are associated with the highest total order quantities?",
            "Find products that have been ordered more than 100 times.",
            "List all products with their unit price and the number of units ordered.",
            "Identify the top 3 suppliers by the number of products they supply.",
            "Determine which products are nearing their reorder level.",
            "Find the number of products that have never been ordered.",
            "Calculate the average unit price of products per category.",
            "Which orders have more than 10 units of any product?",
            "What are the names of all discontinued products?",
            "List the top 5 products by the number of units in stock.",
            "Which suppliers provide the products with the highest reorder levels?",
            "How many units of each product were sold last month?",
            "Determine the average discount applied across all products.",
            "Find the product with the most units on order.",
            "Calculate the monthly inventory turnover ratio for each product.",
            "What is the total revenue for each supplier?",
            "Identify products that need reordering (UnitsInStock < ReorderLevel).",
            "Which categories have the highest number of products?",
            "Determine the average price of products in each category.",
            "How many products are provided by each supplier?",
            "Find the total quantity of products ordered per order.",
            "Calculate the average revenue per order.",
            "Identify products that have never been ordered.",
            "What is the total quantity sold for products that have a discount?",
            "List the top 5 products by revenue generated.",
            "Find the month with the highest sales for each product.",
            "What are the names of products that have been discontinued?",
            "Which products have a unit price greater than 50?",
            "How many units of each product are currently in stock?",
            "Which suppliers provide more than 5 different products?",
            "What is the average discount given on each product?",
            "Which products have a reorder level of 10 or more?",
            "What is the monthly performance (total sales) of each product?",
            "List the products that have never been ordered.",
            "Which categories of products have the highest total sales?",
            "How many different products do not have any units on order?",
            "What is the overall average unit price of all products?",
            "Which products have the highest total order quantities?",
            "What is the total revenue generated per supplier?",
            "Identify the top 5 products by revenue.",
            "What are the most commonly ordered product quantities?",
            "How many products have more units on order than in stock?",
            "What is the monthly trend of total quantities sold for each product?",
            "What are the top 5 best-selling products by quantity?",
            "Which suppliers provide products that are currently out of stock?",
            "What is the total sales revenue generated for each product?",
            "How many products have been discontinued?",
            "Which products are close to running out of stock (below their reorder level)?",
            "What is the average unit price of all products?",
            "Which category has the most products listed?",
            "What is the average reorder level across all products?",
            "What is the total quantity of products on order for each supplier?",
            "What is the monthly performance of each product in terms of quantity sold?",
            "Calculate the Inventory Turnover Ratio for each product for the current month.",
            "Which products have never been ordered?",
            "What are the top 3 products with the highest discount applied on average?",
            "How many units have been sold for each product, grouped by supplier?",
            "Identify products with at least one order that had a discount greater than 10%.",
            "Which product had the highest total revenue last month?",
            "How many distinct products have been ordered so far?",
            "What is the total sales revenue from products in each category?",
            "How many products are currently in stock?",
            "Which products have a unit price greater than $20?",
            "How many units of each product were sold in the last month?",
            "Which supplier provides the highest number of products?",
            "What is the average unit price of products provided by each supplier?",
            "Which products need to be reordered?",
            "How much inventory is on order for each product?",
            "What is the total discount given for each product in the last year?",
            "How many units of each product were sold by each supplier?",
            "What is the most frequently ordered product?",
            "What is the average quantity per unit for all products?",
            "Which products have a discount, and what is the average discount?",
            "How many orders contained each product?",
            "What is the total number of units ordered for each product category?",
            "What is the Inventory Turnover Ratio for the last quarter?",
            "What is the total number of units in stock for each product?",
            "Which suppliers provide more than one product?",
            "For each product, what is the total revenue generated from all orders?",
            "What is the average discount applied on products?",
            "List all products that need reordering.",
            "What is the total sales quantity of each product for the month of January 2023?",
            "How many products were sold in total by each supplier?",
            "What is the total stock value (UnitsInStock * UnitPrice) for each product?",
            "Identify the top 5 products with the highest sales volume.",
            "Calculate the monthly product performance score for each product.",
            "Find the inventory turnover ratio for each product for the first quarter of 2023.",
            "Which category has the highest number of products?",
            "List the top 10 products with the highest reorder levels.",
            "Determine average time (in months) between stock reorders for each product.",
            "What is the total quantity ordered and the total revenue for each product?",
            "How many products have a higher UnitsOnOrder than UnitsInStock?",
            "What are the total units sold for each product?",
            "Which products have never been sold?",
            "What is the total sales revenue for each product?",
            "List the products that need to be reordered.",
            "Which supplier provides the most products?",
            "What is the average price per unit for all products?",
            "What is the total revenue generated by each supplier?",
            "Which products have the highest discount rates applied?",
            "What is the top-selling product of the month?",
            "Which categories have the most products?",
            "What is the average quantity per unit for each category?",
            "What is the total discount given for each product?",
            "Which products have the lowest units in stock?",
            "What is the month-over-month growth in sales revenue?",
            "Which products have the highest inventory levels?",
            "What is the percentage of discontinued products in the inventory?",
            "Which products have the highest and lowest sales quantities?",
            "What is the average price per unit for each product category?",
            "Which suppliers provide products with the highest unit prices?",
            "How many products are currently discontinued?",
            "What is the total number of units ordered for each product in the past month?",
            "Which products have been reordered below their reorder level?",
            "What is the overall discount provided on each product?",
            "Which products have the highest number of units on order?",
            "What is the total revenue generated from orders over the past year?",
            "What are the performance metrics of products on a monthly basis?",
            "How many products are there in each category?",
            "What is the total quantity sold for each product category?",
            "Which products have not been ordered in the last six months?",
            "What are the monthly sales trends for each product?",
            "Identify products with the highest and lowest reorder levels.",
            "Calculate the contribution margin for each product.",
            "What is the total sales value for each product?",
            "List all products that are currently out of stock.",
            "Which products have a reorder level lower than 10?",
            "What are the top 5 products by total sales quantity?",
            "Find the average unit price of all products supplied by supplier ID 3.",
            "How many discontinued products are still in stock?",
            "Which products have not been ordered in the last three months?",
            "Identify products with a stock level below their reorder level.",
            "How many units are on order for each product?",
            "What is the total number of units sold for each month of 2023?",
            "Find the unit price of products that have never been discounted.",
            "What is the average inventory turnover ratio for the past six months?",
            "How many unique products are sold by each supplier?",
            "Find the product categories with the highest total sales.",
            "List the top 3 suppliers based on the total value of products supplied.",
            "What is the average discount given per order?",
            "Which product has the highest revenue last quarter?",
            "Identify products with no sales in the last six months.",
            "What is the average monthly sales value for each product category?",
            "Which products have inventory levels below the reorder level?",
            "For each product, what is the total sales revenue generated?",
            "What is the average unit price of products within each category?",
            "What products have a higher number of units on order than units in stock?",
            "Identify the products that have never been ordered.",
            "Find the monthly sales performance for each product.",
            "What is the inventory turnover ratio for the past month?",
            "What is the total quantity of discontinued products sold?",
            "What are the top 3 categories by total sales revenue?",
            "For each supplier, what is the total quantity of products supplied?",
            "Determine the number of products that have been ordered more than 100 times.",
            "Which product has the highest cumulative discount in terms of dollar value?",
            "What is the average discount applied to orders for each product?",
            "Identify products with a unit price greater than the average unit price across all products.",
            "How many distinct products have been ordered in the past year?",
            "List the top 5 products by sales revenue within each category.",
            "What is the average quantity per unit for products in each category?",
            "What is the average unit price of products supplied by each supplier?",
            "How many units of each product are on order?",
            "What is the total revenue generated by the products that are currently discontinued?",
            "Which supplier is associated with the highest number of products?",
            "What is the monthly total quantity sold for each product?",
            "Which products have a discount applied in more than 10 orders?",
            "What is the average discount applied to each product?",
            "What is the total revenue from orders that include products with a discount greater than 20%?",
            "How many products have a unit price greater than the average unit price of all products?",
            "Which categories of products generate the highest revenue?",
            "What is the total number of products in each category?",
            "How many discontinued products are there?",
            "Which products have the highest and lowest inventory turnover ratio?",
            "What are the unit prices of products that have been ordered more than 1000 times?",
            "What is the reorder level for each product and how many products meet or exceed this level?",
            "Which supplier's products have the highest average discount?",
            "How many orders include products with a unit price greater than $50?",
            "What are the names of all products in the database?",
            "Which supplier supplies the most products?",
            "What is the average unit price of products in each category?",
            "How many products have a reorder level greater than the number of units in stock?",
            "List the top 5 products by units sold in the last month.",
            "Which products have a discount applied in their orders?",
            "Find the product with the highest unit price.",
            "Calculate the total quantity of products ordered by each product ID.",
            "What is the Inventory Turnover Ratio for each product?",
            "Identify the top 3 products with the highest total revenue.",
            "List the products that have less than 10 units in stock and have not been reordered.",
            "Find the products that have not been sold in the last year.",
            "What is the average discount applied on each product?",
            "For each supplier, list the total revenue generated from their products.",
            "Identify products whose stock falls below the reorder level.",
            "Calculate the average units sold per month for each product.",
            "Determine the monthly sales growth rate for each product.",
            "How many units of discontinued products are still in stock?",
            "Which suppliers provide the most expensive products on average?",
            "What is the inventory turnover ratio for each supplier?",
            "Which product categories have the highest number of units on order?",
            "What is the total number of products provided by each supplier?",
            "How many orders included products with more than a 10% discount?",
            "How many products are discontinued, and what is the total revenue lost from these products?",
            "What are the top 3 products with the highest total sales revenue?",
            "Which suppliers have the highest inventory turnover ratio?",
            "Which products have been ordered the most frequently?",
            "What are the total sales volumes for each product category?",
            "How many products need to be reordered?",
            "Which product has the highest sales?",
            "What are the total sales per category?",
            "How many products have a reorder level greater than 50?",
            "Which products have been ordered more than 100 times?",
            "What is the total discount given on all orders?",
            "Who are the top 5 suppliers by the number of products supplied?",
            "How many units on order are there for each product?",
            "What is the monthly sales performance for each product?",
            "How many products have stock levels below their reorder level?",
            "What is the total revenue generated from each product?",
            "What are the total units ordered for each supplier?",
            "Which products have been ordered the most?",
            "Which suppliers are associated with discontinued products?",
            "Which products have a reorder level higher than 50 units?",
            "What is the average discount given on products?",
            "What is the total quantity of products sold in the last month?",
            "What is the total revenue from each category of products?",
            "Which products are low on stock and need reordering?",
            "How many different products does each supplier provide?",
            "Which products have the highest total sales volume?",
            "What is the average price of products from each supplier?",
            "What are the top 5 most ordered products?",
            "Which products received the highest total discount?",
            "How many units were sold of each product, grouped by month?",
            "What is the performance of products based on sales and inventory levels?",
            "How many different products are discontinued?",
            "What is the total number of units on order for each supplier?",
            "Which products are low in stock and need reordering?",
            "How many orders contain a discount greater than 0.1?",
            "Which product categories generate the most revenue?",
            "How many different categories of products are there?",
            "Which products have not reached their reorder level yet?",
            "What is the average number of units in stock per supplier?",
            "Which products are both in stock and on order?",
            "What is the total number of units sold for each category in the last year?",
            "Which products have more than 100 units in stock?",
            "What are the names and unit prices of all discontinued products?",
            "How many units of each product were sold this month?",
            "Which supplier provides the most expensive product?",
            "List the products with a unit price higher than the average unit price of all products.",
            "Which products need to be reordered based on the ReorderLevel?",
            "What is the average discount for all products sold?",
            "How many distinct products were ordered in the last quarter?",
            "Which product category has the highest number of products?",
            "What is the total quantity of products ordered in the current year?",
            "What are the top 5 products by revenue?",
            "Find the products with zero units in stock?",
            "Which supplier has the highest number of products that are still in stock?",
            "List the top 10 most frequently ordered products in the past year.",
            "Determine the monthly sales performance of each product for the current year.",
            "What is the total quantity of products ordered each month?",
            "How many products are below the reorder level?",
            "What is the average discount applied to product orders?",
            "What are the total sales for each product category?",
            "What is the average unit price of products by supplier?",
            "Which categories of products have the highest revenue?",
            "How many units of product are on order but not yet received?",
            "Which products with stock levels below the reorder level have the highest sales?",
            "Which supplier has the highest total product sales?",
            "What is the total number of units sold per product?",
            "Which suppliers provide products that are currently in stock?",
            "How many products have never been ordered?",
            "Which product has the highest total sales revenue?",
            "What are the total sales for each month?",
            "Which products need to be reordered (units in stock less than reorder level)?",
            "What is the total revenue generated from products supplied by a specific supplier?",
            "Which products have a unit price greater than the average unit price for all products?",
            "Which product category has the highest number of units sold?",
            "What is the total discount given in all orders?",
            "Which products have sales greater than a specified threshold?",
            "What are the top 5 products in terms of total units sold?",
            "How many orders included a discount?",
            "What is the total quantity ordered for each supplier?",
            "What is the performance of each product based on monthly sales?",
            "What are the names of all products that are currently discontinued?",
            "Which products have a unit price greater than $50?",
            "Find the products that need reordering (UnitsInStock < ReorderLevel).",
            "Calculate the total sales revenue for each product.",
            "Find the top 5 products with the highest sales revenue.",
            "What is the average discount provided on orders?",
            "Calculate the total sales revenue for each supplier.",
            "Find the product with the most units in stock.",
            "What is the average number of units in stock across all products?",
            "Which products have a reorder level of less than 20?",
            "List all products that have a discount applied on them in any order.",
            "Calculate the monthly product performance based on sales.",
            "Calculate the inventory turnover ratio for each month.",
            "Find the most frequently ordered product."
        ],
        "sql_queries": [
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < 10;",
            "SELECT CategoryID, COUNT(DISTINCT ProductID) AS ProductCount FROM products GROUP BY CategoryID ORDER BY ProductCount DESC;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder > 0;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS UnitsOrderedLastMonth FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderDate >= DATEADD(month, -1, GETDATE()) GROUP BY products.ProductID;",
            "SELECT CategoryID, AVG(UnitPrice) AS AvgUnitPrice FROM products GROUP BY CategoryID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT ProductID, ProductName, UnitsInStock * UnitPrice AS StockValue FROM products;",
            "SELECT ProductID, ProductName, QuantityPerUnit FROM products ORDER BY QuantityPerUnit DESC;",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT ProductID, ReorderLevel FROM products;",
            "SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderDate >= DATEADD(year, -1, GETDATE()));",
            "SELECT products.ProductID, FORMAT([Order Details].OrderDate, 'yyyy-MM') AS Month, SUM([Order Details].Quantity) AS MonthlySales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderDate >= DATEADD(year, -1, GETDATE()) GROUP BY products.ProductID, FORMAT([Order Details].OrderDate, 'yyyy-MM');",
            "SELECT ProductID, ProductName, UnitsOnOrder FROM products WHERE UnitsOnOrder > 0;",
            "SELECT ProductID, COUNT(OrderID) AS OrderCount FROM [Order Details] GROUP BY ProductID;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalRevenue DESC;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalQuantitySold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
            "SELECT SupplierID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY SupplierID;",
            "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT SupplierID, COUNT(ProductID) AS TotalProducts FROM products GROUP BY SupplierID;",
            "SELECT ProductID, ProductName, UnitsOnOrder FROM products;",
            "SELECT products.ProductID, products.ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].ProductID IS NULL;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS TotalQuantitySold FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY Month;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName;",
            "SELECT categories.CategoryID, categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID, categories.CategoryName;",
            "SELECT categories.CategoryID, categories.CategoryName, SUM(products.UnitsInStock) AS TotalUnitsInStock FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID, categories.CategoryName;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue, products.UnitsInStock FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName HAVING TotalRevenue > 1000 AND products.UnitsInStock < 50;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT products.ProductID, products.ProductName, suppliers.SupplierName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalQuantitySold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE products.Discontinued = 0 GROUP BY products.ProductID, products.ProductName;",
            "SELECT categories.CategoryID, categories.CategoryName, AVG(products.ReorderLevel) AS AverageReorderLevel FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID, categories.CategoryName;",
            "SELECT products.ProductID, products.ProductName, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS MonthlyRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY products.ProductID, products.ProductName, Month;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT p.CategoryID, AVG(p.UnitPrice) AS AvgPricePerUnit FROM products p GROUP BY p.CategoryID;",
            "SELECT p.SupplierID, SUM(p.UnitsInStock) AS TotalUnitsInStock FROM products p GROUP BY p.SupplierID;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT p.SupplierID, COUNT(DISTINCT p.ProductID) AS UniqueProducts FROM products p GROUP BY p.SupplierID ORDER BY UniqueProducts DESC;",
            "SELECT p.ProductName, SUM(od.Quantity * (od.UnitPrice - (od.UnitPrice * od.Discount))) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT p.ProductName, TO_CHAR(o.OrderDate, 'YYYY-MM') AS Month, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY p.ProductName, TO_CHAR(o.OrderDate, 'YYYY-MM');",
            "SELECT p.ProductName, AVG(od.Discount) AS AvgDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY AvgDiscount DESC;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT ProductName FROM products WHERE UnitsOnOrder = 0 AND UnitsInStock < ReorderLevel;",
            "SELECT AVG(CAST(SUBSTRING_INDEX(QuantityPerUnit, ' ', 1) AS UNSIGNED)) AS AvgQuantityPerUnit FROM products;",
            "SELECT SUM(od.Quantity * (od.UnitPrice - (od.UnitPrice * od.Discount))) AS TotalRevenue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN DATE_TRUNC('MONTH', CURRENT_DATE - INTERVAL '1 MONTH') AND LAST_DAY(CURRENT_DATE - INTERVAL '1 MONTH');",
            "SELECT p.CategoryID, AVG(p.UnitPrice) AS AvgUnitPrice FROM products p GROUP BY p.CategoryID;",
            "SELECT p.ProductName, AVG(p.UnitsInStock) AS AvgUnitsInStock FROM products p GROUP BY p.ProductName;",
            "SELECT SUM(od.Quantity) AS TotalUnitsOrdered FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.Discontinued = 0;",
            "SELECT p.ProductName, COUNT(od.OrderID) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY OrderCount DESC;",
            "SELECT p.SupplierID, AVG(od.Discount) AS AvgDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM products;",
            "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
            "SELECT SupplierID, SUM(UnitsOnOrder) AS TotalQuantitySupplied FROM products GROUP BY SupplierID ORDER BY TotalQuantitySupplied DESC LIMIT 1;",
            "SELECT p.ProductID, SUM(od.UnitPrice * od.Quantity) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
            "SELECT ProductID, ProductName FROM products ORDER BY UnitsOnOrder DESC LIMIT 1;",
            "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
            "SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT c.CategoryID, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT MIN(UnitPrice) AS MinPrice, MAX(UnitPrice) AS MaxPrice FROM products;",
            "SELECT ProductID, ProductName FROM products WHERE ProductID IN (SELECT ProductID FROM [Order Details] GROUP BY ProductID HAVING SUM(Quantity) > 1000);",
            "SELECT p.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT s.SupplierID, COUNT(DISTINCT p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID;",
            "SELECT ProductID, ProductName, UnitPrice FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT COUNT(DISTINCT OrderID) AS TotalOrders FROM [Order Details] WHERE Discount > 0.1;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantitySold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, YEAR(od.OrderDate), MONTH(od.OrderDate);",
            "SELECT c.CategoryID, c.CategoryName, SUM(od.Quantity) AS TotalQuantity, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder > UnitsInStock;",
            "SELECT ProductID, SUM(Quantity) AS TotalSales FROM [Order Details] GROUP BY ProductID;",
            "SELECT ProductName FROM products WHERE UnitsInStock > 500;",
            "SELECT SupplierID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY SupplierID;",
            "SELECT p.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT p.ProductName, s.CompanyName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID;",
            "SELECT ProductName FROM products WHERE ReorderLevel <= 50;",
            "SELECT TOP 5 p.ProductName, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSales DESC;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT s.SupplierID, COUNT(p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID HAVING COUNT(p.ProductID) > 10;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE DATE_FORMAT(orderdate, '%Y-%m') = 'yyyy-mm' GROUP BY p.ProductID, p.ProductName;",
            "SELECT * FROM (SELECT ProductName, UnitPrice, ROW_NUMBER() OVER (ORDER BY UnitPrice DESC) AS rnk1, ROW_NUMBER() OVER (ORDER BY UnitPrice ASC) AS rnk2 FROM products) WHERE rnk1 = 1 OR rnk2 = 1;",
            "SELECT CategoryID, COUNT(ProductID) AS ProductCount FROM products GROUP BY CategoryID;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Discount * od.Quantity) AS TotalDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT AVG(ReorderLevel) AS AverageReorderLevel FROM products;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT s.SupplierID, SUM(p.UnitsOnOrder) AS TotalUnitsOnOrder FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID;",
            "SELECT ProductName, (UnitsInStock * UnitPrice) AS TotalValueInStock FROM products;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT ProductName, UnitPrice FROM products;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName, UnitsInStock FROM products;",
            "SELECT DISTINCT s.SupplierName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE p.CategoryID = 5;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT COUNT(*) FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT DISTINCT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount > 0;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT DATE_TRUNC('month', od.OrderDate) AS Month, p.ProductID, SUM(od.Quantity) AS ProductPerformance FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY Month, p.ProductID;",
            "SELECT DATE_TRUNC('month', od.OrderDate) AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY Month;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalOrderedQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalOrderedQuantity DESC;",
            "SELECT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID HAVING SUM(od.Quantity) > 100;",
            "SELECT p.ProductName, p.UnitPrice, SUM(od.Quantity) AS UnitsOrdered FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
            "SELECT s.SupplierName, COUNT(p.ProductID) AS ProductsSupplied FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID ORDER BY ProductsSupplied DESC LIMIT 3;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel + 10;",
            "SELECT ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.ProductID IS NULL;",
            "SELECT c.CategoryID, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
            "SELECT od.OrderID FROM [Order Details] od GROUP BY od.OrderID HAVING MAX(od.Quantity) > 10;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products ORDER BY UnitsInStock DESC LIMIT 5;",
            "SELECT SupplierID, ProductName FROM products WHERE ReorderLevel = (SELECT MAX(ReorderLevel) FROM products);",
            "SELECT ProductID, SUM(Quantity) AS TotalSold FROM [Order Details] WHERE DATEPART(month, GETDATE()) - DATEPART(month, OrderDate) = 1 GROUP BY ProductID;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT ProductName FROM products ORDER BY UnitsOnOrder DESC LIMIT 1;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
            "SELECT p.SupplierID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT CategoryID, COUNT(*) AS NumberOfProducts FROM products GROUP BY CategoryID;",
            "SELECT CategoryID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY CategoryID;",
            "SELECT SupplierID, COUNT(*) AS NumberOfProducts FROM products GROUP BY SupplierID;",
            "SELECT OrderID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY OrderID;",
            "SELECT AVG(SUM(Quantity * UnitPrice)) AS AverageRevenue FROM [Order Details] GROUP BY OrderID;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT ProductID FROM [Order Details]);",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] WHERE Discount > 0 GROUP BY ProductID;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ProductID, DATEPART(month, OrderDate) AS SalesMonth, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID, DATEPART(month, OrderDate) ORDER BY ProductID, TotalQuantity DESC;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products WHERE UnitPrice > 50;",
            "SELECT ProductID, UnitsInStock FROM products;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID HAVING COUNT(ProductID) > 5;",
            "SELECT ProductID, AVG(Discount) AS AverageDiscount FROM [Order Details] GROUP BY ProductID;",
            "SELECT ProductName FROM products WHERE ReorderLevel >= 10;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalQuantitySold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
            "SELECT CategoryID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY CategoryID;",
            "SELECT COUNT(ProductID) AS NumProductsWithoutOrder FROM products WHERE UnitsOnOrder = 0;",
            "SELECT AVG(UnitPrice) AS OverallAverageUnitPrice FROM products;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS TotalOrderQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID ORDER BY TotalOrderQuantity DESC;",
            "SELECT SupplierID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenueGenerated FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY SupplierID;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS MostCommonQuantities FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID ORDER BY MostCommonQuantities DESC;",
            "SELECT ProductID, UnitsInStock, UnitsOnOrder FROM products WHERE UnitsOnOrder > UnitsInStock;",
            "SELECT products.ProductID, products.ProductName, DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS TotalQuantitySold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductID, products.ProductName, Month ORDER BY Month;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantitySold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalQuantitySold DESC LIMIT 5;",
            "SELECT s.SupplierName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.UnitsInStock = 0;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT COUNT(*) FROM products WHERE Discontinued = 1;",
            "SELECT p.ProductName FROM products p WHERE p.UnitsInStock < p.ReorderLevel;",
            "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM products;",
            "SELECT c.CategoryName, COUNT(p.ProductID) AS ProductCount FROM categories c JOIN products p ON c.CategoryID = p.CategoryID GROUP BY c.CategoryName ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT AVG(ReorderLevel) AS AverageReorderLevel FROM products;",
            "SELECT s.SupplierName, SUM(p.UnitsOnOrder) AS TotalUnitsOnOrder FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierName;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantitySold, DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON o.OrderID = od.OrderID GROUP BY p.ProductName, Month;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m') GROUP BY p.ProductID;",
            "SELECT p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderID IS NULL;",
            "SELECT p.ProductName, AVG(od.Discount) AS AverageDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY AverageDiscount DESC LIMIT 3;",
            "SELECT s.SupplierName, p.ProductName, SUM(od.Quantity) AS TotalQuantitySold FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierName, p.ProductName;",
            "SELECT DISTINCT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount > 0.1;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m') GROUP BY p.ProductName ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT ProductID) FROM [Order Details];",
            "SELECT c.CategoryName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM categories c JOIN products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryName;",
            "SELECT SUM(UnitsInStock) AS TotalUnitsInStock FROM products;",
            "SELECT ProductName FROM products WHERE UnitPrice > 20;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS UnitsSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID HAVING DATE([Order Details].OrderDate) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();",
            "SELECT suppliers.SupplierName, COUNT(products.ProductID) AS NumberOfProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY NumberOfProducts DESC LIMIT 1;",
            "SELECT suppliers.SupplierName, AVG(products.UnitPrice) AS AverageUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT products.ProductName, SUM([Order Details].Discount) AS TotalDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE DATE([Order Details].OrderDate) BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() GROUP BY products.ProductID;",
            "SELECT suppliers.SupplierName, products.ProductName, SUM([Order Details].Quantity) AS UnitsSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID, products.ProductID;",
            "SELECT products.ProductName, COUNT([Order Details].OrderID) AS OrderCount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT AVG(CAST(SUBSTRING_INDEX(QuantityPerUnit, ' ', 1) AS UNSIGNED)) AS AverageQuantityPerUnit FROM products;",
            "SELECT products.ProductName, AVG([Order Details].Discount) AS AverageDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE [Order Details].Discount > 0 GROUP BY products.ProductID;",
            "SELECT products.ProductName, COUNT([Order Details].OrderID) AS OrderCount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID;",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity) AS TotalUnitsOrdered FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE [Order Details].OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE();",
            "SELECT ProductName, UnitsInStock FROM products;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID HAVING COUNT(ProductID) > 1;",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE orderDate BETWEEN '2023-01-01' AND '2023-01-31') GROUP BY products.ProductName;",
            "SELECT products.SupplierID, SUM([Order Details].Quantity) AS TotalProductsSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.SupplierID;",
            "SELECT ProductName, (UnitsInStock * UnitPrice) AS StockValue FROM products;",
            "SELECT ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS PerformanceScore FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT products.ProductID, (SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock)) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE orderDate BETWEEN '2023-01-01' AND '2023-03-31') GROUP BY products.ProductID;",
            "SELECT CategoryID, COUNT(ProductID) AS NumberOfProducts FROM products GROUP BY CategoryID ORDER BY NumberOfProducts DESC LIMIT 1;",
            "SELECT ProductName, ReorderLevel FROM products ORDER BY ReorderLevel DESC LIMIT 10;",
            "SELECT ProductName, SUM(MONTH(orderDate) - MONTH(previousOrderDate)) / COUNT(*) AS AvgMonthsBetweenReorders FROM (SELECT p.ProductName, o.orderDate, LAG(o.orderDate) OVER (PARTITION BY p.ProductID ORDER BY o.orderDate) AS previousOrderDate FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID) AS sub GROUP BY ProductName;",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT ProductID, UnitsOnOrder, UnitsInStock FROM products WHERE UnitsOnOrder > UnitsInStock;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS TotalUnitsSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT products.ProductID, products.ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].ProductID IS NULL;",
            "SELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT SupplierID, COUNT(ProductID) AS NumberOfProducts FROM products GROUP BY SupplierID ORDER BY NumberOfProducts DESC LIMIT 1;",
            "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM products;",
            "SELECT suppliers.SupplierID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID;",
            "SELECT products.ProductID, products.ProductName, MAX([Order Details].Discount) AS MaxDiscount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY MaxDiscount DESC;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalUnitsSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE MONTH([Order Details].OrderID) = MONTH(CURRENT_DATE()) GROUP BY products.ProductID, products.ProductName ORDER BY TotalUnitsSold DESC LIMIT 1;",
            "SELECT categories.CategoryID, COUNT(products.ProductID) AS NumberOfProducts FROM categories JOIN products ON categories.CategoryID = products.CategoryID GROUP BY categories.CategoryID;",
            "SELECT categories.CategoryID, AVG(CAST(REGEXP_REPLACE(products.QuantityPerUnit, '[^0-9]', '', 'g') AS DECIMAL)) AS AvgQuantityPerUnit FROM categories JOIN products ON categories.CategoryID = products.CategoryID GROUP BY categories.CategoryID;",
            "SELECT products.ProductID, SUM([Order Details].Discount * [Order Details].Quantity * [Order Details].UnitPrice) AS TotalDiscount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT ProductID, ProductName, UnitsInStock FROM products ORDER BY UnitsInStock ASC LIMIT 1;",
            "SELECT DATE_TRUNC('month', orders.order_date) AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS MonthlyRevenue, LAG(SUM([Order Details].Quantity * [Order Details].UnitPrice)) OVER (ORDER BY DATE_TRUNC('month', orders.order_date)) AS PreviousMonthRevenue, (SUM([Order Details].Quantity * [Order Details].UnitPrice) - LAG(SUM([Order Details].Quantity * [Order Details].UnitPrice)) OVER (ORDER BY DATE_TRUNC('month', orders.order_date))) / LAG(SUM([Order Details].Quantity * [Order Details].UnitPrice)) OVER (ORDER BY DATE_TRUNC('month', orders.order_date)) * 100 AS MonthOverMonthGrowth FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY DATE_TRUNC('month', orders.order_date);",
            "SELECT products.ProductID, products.UnitsInStock FROM products ORDER BY products.UnitsInStock DESC LIMIT 1;",
            "SELECT (COUNT(ProductID) * 100.0 / (SELECT COUNT(*) FROM products)) AS PercentageDiscontinued FROM products WHERE Discontinued = 1;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName ORDER BY TotalQuantity DESC;",
            "SELECT categories.CategoryID, AVG(products.UnitPrice) AS AveragePrice FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID;",
            "SELECT suppliers.SupplierID, MAX(products.UnitPrice) AS HighestUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY HighestUnitPrice DESC;",
            "SELECT COUNT(*) AS DiscontinuedProducts FROM products WHERE Discontinued = 1;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalUnitsOrdered FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) GROUP BY products.ProductName;",
            "SELECT ProductName, UnitsInStock, ReorderLevel FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT products.ProductName, SUM([Order Details].Discount) AS TotalDiscount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT products.ProductName, products.UnitsOnOrder FROM products ORDER BY products.UnitsOnOrder DESC;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductName, YEAR(orders.OrderDate), MONTH(orders.OrderDate);",
            "SELECT categories.CategoryID, COUNT(products.ProductID) AS ProductCount FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID;",
            "SELECT categories.CategoryID, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID;",
            "SELECT products.ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IS NULL OR [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE OrderDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH));",
            "SELECT products.ProductName, YEAR(orders.OrderDate) AS Year, MONTH(orders.OrderDate) AS Month, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductName, Year, Month;",
            "SELECT products.ProductName, products.ReorderLevel FROM products ORDER BY products.ReorderLevel DESC;",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) - SUM(products.UnitPrice * [Order Details].Quantity) AS ContributionMargin FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName;",
            "SELECT ProductName FROM products WHERE UnitsInStock = 0;",
            "SELECT ProductName FROM products WHERE ReorderLevel < 10;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM products WHERE SupplierID = 3;",
            "SELECT COUNT(*) AS DiscontinuedInStock FROM products WHERE Discontinued = 1 AND UnitsInStock > 0;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)));",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS TotalUnitsSold FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(OrderDate, '%Y') = '2023' GROUP BY Month;",
            "SELECT ProductName, UnitPrice FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE Discount > 0);",
            "SELECT AVG(MonthlyTurnover) AS AverageTurnover FROM (SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS MonthlyTurnover FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY Month) AS TurnoverStats;",
            "SELECT SupplierID, COUNT(DISTINCT ProductID) AS UniqueProducts FROM products GROUP BY SupplierID;",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSales FROM categories JOIN products ON categories.CategoryID = products.CategoryID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY categories.CategoryName ORDER BY TotalSales DESC;",
            "SELECT suppliers.SupplierName, SUM(products.UnitPrice * products.UnitsInStock) AS TotalValueSupplied FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierName ORDER BY TotalValueSupplied DESC LIMIT 3;",
            "SELECT AVG([Order Details].Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND OrderDate < DATE_SUB(CURDATE(), INTERVAL 0 MONTH) GROUP BY products.ProductID, products.ProductName ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH));",
            "SELECT categories.CategoryName, AVG(MonthlySales) AS AverageMonthlySales FROM (SELECT categories.CategoryName, DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS MonthlySales FROM categories JOIN products ON categories.CategoryID = products.CategoryID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY categories.CategoryName, Month) AS MonthlySalesStats GROUP BY categories.CategoryName;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT CategoryID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY CategoryID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder > UnitsInStock;",
            "SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
            "SELECT p.ProductID, p.ProductName, EXTRACT(MONTH FROM o.OrderDate) AS Month, SUM(od.Quantity) AS MonthlySales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY p.ProductID, p.ProductName, EXTRACT(MONTH FROM o.OrderDate);",
            "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE EXTRACT(MONTH FROM o.OrderDate) = EXTRACT(MONTH FROM CURRENT_DATE - INTERVAL '1 MONTH');",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalSoldQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE p.Discontinued = 1 GROUP BY p.ProductID, p.ProductName;",
            "SELECT p.CategoryID, SUM(od.Quantity * od.UnitPrice) AS TotalSalesRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.CategoryID ORDER BY TotalSalesRevenue DESC LIMIT 3;",
            "SELECT p.SupplierID, SUM(od.Quantity) AS TotalQuantitySupplied FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.SupplierID;",
            "SELECT p.ProductID, p.ProductName FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName HAVING SUM(od.Quantity) > 100;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Discount * od.UnitPrice * od.Quantity) AS TotalDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalDiscount DESC LIMIT 1;",
            "SELECT p.ProductID, p.ProductName, AVG(od.Discount) AS AverageDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT p.ProductID, p.ProductName FROM products p WHERE p.UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT COUNT(DISTINCT ProductID) FROM [Order Details] WHERE EXTRACT(YEAR FROM OrderDate) = EXTRACT(YEAR FROM CURRENT_DATE);",
            "SELECT p.CategoryID, p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) AS SalesRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.CategoryID, p.ProductID, p.ProductName ORDER BY SalesRevenue DESC LIMIT 5;",
            "SELECT p.CategoryID, AVG(LENGTH(p.QuantityPerUnit) - LENGTH(REPLACE(p.QuantityPerUnit, ' ', '')) + 1) AS AverageQuantityPerUnit FROM products p GROUP BY p.CategoryID;",
            "SELECT p.SupplierID, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p GROUP BY p.SupplierID;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.Discontinued = 1 GROUP BY p.ProductName;",
            "SELECT p.SupplierID, COUNT(p.ProductID) AS ProductCount FROM products p GROUP BY p.SupplierID ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT p.ProductName, EXTRACT(MONTH FROM o.OrderDate) AS Month, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY p.ProductName, Month;",
            "SELECT p.ProductName, COUNT(*) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount > 0.0 GROUP BY p.ProductName HAVING OrderCount > 10;",
            "SELECT p.ProductName, AVG(od.Discount) AS AverageDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od WHERE od.Discount > 0.2;",
            "SELECT COUNT(*) FROM products p WHERE p.UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT c.CategoryName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN categories c ON p.CategoryID = c.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryName ORDER BY TotalRevenue DESC;",
            "SELECT c.CategoryName, COUNT(p.ProductID) AS ProductCount FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName;",
            "SELECT COUNT(*) FROM products WHERE Discontinued = 1;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY InventoryTurnoverRatio DESC LIMIT 1;",
            "SELECT p.ProductName, p.UnitPrice FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName HAVING SUM(od.Quantity) > 1000;",
            "SELECT p.ProductName, p.ReorderLevel, p.UnitsInStock FROM products p WHERE p.UnitsInStock >= p.ReorderLevel;",
            "SELECT p.SupplierID, AVG(od.Discount) AS AverageDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID ORDER BY AverageDiscount DESC LIMIT 1;",
            "SELECT COUNT(DISTINCT od.OrderID) FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.UnitPrice > 50;",
            "SELECT ProductName FROM products;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT CategoryID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY CategoryID;",
            "SELECT ProductID, ProductName FROM products WHERE ReorderLevel > UnitsInStock;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS UnitsSold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderDate >= DATEADD(month, -1, CURRENT_TIMESTAMP) GROUP BY p.ProductID, p.ProductName ORDER BY UnitsSold DESC LIMIT 5;",
            "SELECT p.ProductID, p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount > 0;",
            "SELECT ProductID, ProductName, MAX(UnitPrice) FROM products;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalRevenue DESC LIMIT 3;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < 10 AND UnitsOnOrder = 0;",
            "SELECT p.ProductID, p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderID IS NULL OR od.OrderDate < DATEADD(year, -1, CURRENT_TIMESTAMP);",
            "SELECT p.ProductID, p.ProductName, AVG(od.Discount) AS AverageDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT p.SupplierID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT p.ProductID, p.ProductName, AVG(od.Quantity) AS AverageUnitsSold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT p.ProductID, p.ProductName, (SUM(CASE WHEN MONTH(od.OrderDate) = MONTH(DATEADD(month, -1, CURRENT_TIMESTAMP)) THEN od.Quantity * od.UnitPrice ELSE 0 END) / SUM(CASE WHEN MONTH(od.OrderDate) = MONTH(CURRENT_TIMESTAMP) THEN od.Quantity * od.UnitPrice ELSE 1 END) - 1) * 100 AS MonthlyGrowthRate FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT ProductName, UnitsInStock FROM products WHERE Discontinued = 1",
            "SELECT s.SupplierID, AVG(p.UnitPrice) as AvgPrice FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.SupplierID ORDER BY AvgPrice DESC",
            "SELECT p.ProductName, (SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock)) as InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID",
            "SELECT c.CategoryID, SUM(p.UnitsOnOrder) as TotalUnitsOnOrder FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID ORDER BY TotalUnitsOnOrder DESC",
            "SELECT s.SupplierID, COUNT(p.ProductID) as TotalProducts FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.SupplierID",
            "SELECT COUNT(DISTINCT od.OrderID) as NumberOfOrders FROM [Order Details] od WHERE od.Discount > 0.10",
            "SELECT COUNT(*) as DiscontinuedProducts, SUM(od.Quantity * od.UnitPrice) as TotalRevenueLost FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.Discontinued = 1",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) as TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalRevenue DESC LIMIT 3",
            "SELECT s.SupplierID, (SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock)) as InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON p.ProductID = od.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.SupplierID ORDER BY InventoryTurnoverRatio DESC",
            "SELECT p.ProductName, COUNT(od.OrderID) as OrderFrequency FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY OrderFrequency DESC",
            "SELECT c.CategoryID, SUM(od.Quantity) as TotalSalesVolume FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID",
            "SELECT ProductName, ReorderLevel - UnitsInStock as AmountToReorder FROM products WHERE UnitsInStock < ReorderLevel",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalQuantity DESC LIMIT 1",
            "SELECT c.CategoryID, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM categories c JOIN products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID",
            "SELECT ProductName FROM products WHERE ReorderLevel > 50",
            "SELECT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName HAVING COUNT(od.OrderID) > 100",
            "SELECT SUM(Discount) AS TotalDiscount FROM [Order Details]",
            "SELECT s.SupplierID, COUNT(p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID ORDER BY ProductCount DESC LIMIT 5",
            "SELECT p.ProductName, p.UnitsOnOrder FROM products p",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName, DATE_FORMAT(od.OrderDate, '%Y-%m')",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName",
            "SELECT s.SupplierID, SUM(od.Quantity) AS TotalUnitsOrdered FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalOrdered FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalOrdered DESC;",
            "SELECT DISTINCT suppliers.SupplierName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1;",
            "SELECT ProductName FROM products WHERE ReorderLevel > 50;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATEADD(month, -1, GETDATE())) GROUP BY products.ProductName ORDER BY TotalSold DESC;",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName ORDER BY TotalRevenue DESC;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel AND Discontinued = 0;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalSalesVolume FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalSalesVolume DESC;",
            "SELECT suppliers.SupplierName, AVG(products.UnitPrice) AS AverageProductPrice FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierName;",
            "SELECT TOP 5 products.ProductName, SUM([Order Details].Quantity) AS TotalOrdered FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalOrdered DESC;",
            "SELECT products.ProductName, SUM([Order Details].Discount) AS TotalDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalDiscount DESC;",
            "SELECT products.ProductName, DATEPART(month, [Order Details].OrderDate) AS Month, SUM([Order Details].Quantity) AS TotalSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName, DATEPART(month, [Order Details].OrderDate);",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalSold, products.UnitsInStock FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName, products.UnitsInStock ORDER BY TotalSold DESC;",
            "SELECT COUNT(*) FROM products WHERE Discontinued = 1;",
            "SELECT SupplierID, SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products GROUP BY SupplierID;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel AND Discontinued = 0;",
            "SELECT COUNT(*) FROM [Order Details] WHERE Discount > 0.1;",
            "SELECT c.CategoryID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
            "SELECT COUNT(DISTINCT CategoryID) FROM products;",
            "SELECT ProductName FROM products WHERE UnitsInStock > ReorderLevel AND Discontinued = 0;",
            "SELECT SupplierID, AVG(UnitsInStock) AS AverageUnitsInStock FROM products GROUP BY SupplierID;",
            "SELECT ProductName FROM products WHERE UnitsInStock > 0 AND UnitsOnOrder > 0;",
            "SELECT c.CategoryID, SUM(od.Quantity) AS TotalQuantitySold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID WHERE od.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 YEAR) AND NOW() GROUP BY c.CategoryID;",
            "SELECT ProductID, ProductName, UnitsInStock FROM products WHERE UnitsInStock > 100;",
            "SELECT ProductName, UnitPrice FROM products WHERE Discontinued = 1;",
            "SELECT P.ProductName, SUM(OD.Quantity) AS TotalSold FROM [Order Details] AS OD JOIN products AS P ON OD.ProductID = P.ProductID WHERE DATE_FORMAT(NOW(), '%Y-%m') = DATE_FORMAT(OD.OrderDate, '%Y-%m') GROUP BY P.ProductID;",
            "SELECT S.SupplierID, S.SupplierName, MAX(P.UnitPrice) AS MaxPrice FROM suppliers S JOIN products P ON S.SupplierID = P.SupplierID GROUP BY S.SupplierID, S.SupplierName ORDER BY MaxPrice DESC LIMIT 1;",
            "SELECT ProductName, UnitPrice FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT COUNT(DISTINCT ProductID) AS DistinctProductsOrdered FROM [Order Details] WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);",
            "SELECT CategoryID, COUNT(*) AS NumProducts FROM products GROUP BY CategoryID ORDER BY NumProducts DESC LIMIT 1;",
            "SELECT SUM(Quantity) AS TotalQuantity FROM [Order Details] WHERE YEAR(OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT P.ProductName, SUM(OD.Quantity * OD.UnitPrice) AS TotalRevenue FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID GROUP BY P.ProductID, P.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock = 0;",
            "SELECT S.SupplierID, S.SupplierName, COUNT(P.ProductID) AS ProductsInStock FROM suppliers S JOIN products P ON S.SupplierID = P.SupplierID WHERE P.UnitsInStock > 0 GROUP BY S.SupplierID, S.SupplierName ORDER BY ProductsInStock DESC LIMIT 1;",
            "SELECT P.ProductName, COUNT(OD.ProductID) AS Frequency FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID WHERE OD.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY P.ProductName ORDER BY Frequency DESC LIMIT 10;",
            "SELECT P.ProductName, EXTRACT(YEAR_MONTH FROM OD.OrderDate) AS YearMonth, SUM(OD.Quantity) AS TotalSold FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID WHERE YEAR(OD.OrderDate) = YEAR(CURDATE()) GROUP BY P.ProductID, YearMonth ORDER BY YearMonth;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS OrderMonth, SUM(od.Quantity) AS TotalQuantity FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY OrderMonth ORDER BY OrderMonth ASC;",
            "SELECT ProductName, UnitsInStock, ReorderLevel FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT c.CategoryID, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM products p JOIN categories c ON p.CategoryID = c.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID ORDER BY TotalSales DESC;",
            "SELECT s.SupplierID, AVG(p.UnitPrice) AS AverageUnitPrice FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID ORDER BY AverageUnitPrice DESC;",
            "SELECT c.CategoryID, SUM(od.Quantity * od.UnitPrice) AS Revenue FROM products p JOIN categories c ON p.CategoryID = c.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID ORDER BY Revenue DESC;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.UnitsInStock < p.ReorderLevel GROUP BY p.ProductID, p.ProductName ORDER BY TotalSales DESC;",
            "SELECT s.SupplierID, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID ORDER BY TotalSales DESC;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS TotalUnitsSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT DISTINCT suppliers.SupplierID, suppliers.SupplierName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.UnitsInStock > 0;",
            "SELECT ProductID FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT suppliers.SupplierID, suppliers.SupplierName, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID, suppliers.SupplierName;",
            "SELECT ProductID, ProductName FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT categories.CategoryID, categories.CategoryName, SUM([Order Details].Quantity) AS TotalUnitsSold FROM categories JOIN products ON categories.CategoryID = products.CategoryID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY categories.CategoryID, categories.CategoryName ORDER BY TotalUnitsSold DESC LIMIT 1;",
            "SELECT SUM(Discount) AS TotalDiscountGiven FROM [Order Details];",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName HAVING TotalSales > 1000;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalUnitsSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalUnitsSold DESC LIMIT 5;",
            "SELECT COUNT(DISTINCT OrderID) AS OrdersWithDiscount FROM [Order Details] WHERE Discount > 0;",
            "SELECT suppliers.SupplierID, SUM([Order Details].Quantity) AS TotalQuantityOrdered FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID;",
            "SELECT products.ProductID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS MonthlySales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductID, Month;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products WHERE UnitPrice > 50;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ProductID, SUM(UnitPrice * Quantity) as TotalSalesRevenue FROM [Order Details] GROUP BY ProductID;",
            "SELECT ProductID, SUM(UnitPrice * Quantity) as TotalSalesRevenue FROM [Order Details] GROUP BY ProductID ORDER BY TotalSalesRevenue DESC LIMIT 5;",
            "SELECT AVG(Discount) as AverageDiscount FROM [Order Details];",
            "SELECT products.SupplierID, SUM([Order Details].Quantity * [Order Details].UnitPrice) as TotalSalesRevenue FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.SupplierID;",
            "SELECT ProductName, UnitsInStock FROM products ORDER BY UnitsInStock DESC LIMIT 1;",
            "SELECT AVG(UnitsInStock) as AverageUnitsInStock FROM products;",
            "SELECT ProductName FROM products WHERE ReorderLevel < 20;",
            "SELECT DISTINCT products.ProductID, products.ProductName FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].Discount > 0;",
            "SELECT ProductID, SUM(Quantity) as TotalQuantityOrdered FROM [Order Details] GROUP BY ProductID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) as InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT ProductID, COUNT(OrderID) as TotalOrders FROM [Order Details] GROUP BY ProductID ORDER BY TotalOrders DESC LIMIT 1;"
        ],
        "reviews": [
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query. 'OrderDate' column does not exist in the schema provided. Correct query: SELECT products.ProductID, SUM([Order Details].Quantity) AS UnitsOrderedLastMonth FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query. 'OrderDate' column does not exist in the schema provided. Correct query: SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details])",
            "Incorrect query. 'OrderDate' column does not exist in the schema provided. Correct query: SELECT products.ProductID, SUM([Order Details].Quantity) AS MonthlySales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct",
            "Correct",
            "Correct",
            "The original query used 'TOP 5' which is not compatible with all SQL dialects. Using 'LIMIT 5' after 'ORDER BY' for standard compliance.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Incorrect. Fixed by removing the join with a non-existent 'categories' table.",
            "Incorrect. Fixed by removing the join with a non-existent 'suppliers' table.",
            "Correct.",
            "Incorrect. Fixed by removing the join with a non-existent 'suppliers' table.",
            "Correct.",
            "Incorrect. Used TO_CHAR for date formatting which is more appropriate for 'YYYY-MM'.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Used DATE_TRUNC for clearer date interval calculation.",
            "Incorrect. Fixed by removing the join with a non-existent 'categories' table.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Fixed by removing the join with a non-existent 'suppliers' table.",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: The query should consider the quantity of products supplied, not on order. Correct query: SELECT SupplierID, SUM(UnitsInStock + UnitsOnOrder) AS TotalQuantitySupplied FROM products GROUP BY SupplierID ORDER BY TotalQuantitySupplied DESC LIMIT 1;",
            "Correct",
            "Correct",
            "Incorrect: The formula for Inventory Turnover Ratio should include the condition that stock should not be discontinued to account realistically. Also, there's a need for proper referencing of table columns. Correct query: SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
            "Correct",
            "Correct",
            "Incorrect: Categories table should be mentioned in given schema, but it's absent. Assuming categories table is present, correct query: SELECT c.CategoryID, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID ORDER BY TotalQuantity DESC LIMIT 1;",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: Adding the date of the order to group by for monthly calculations, corrected query: SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantitySold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, EXTRACT(YEAR FROM od.OrderDate), EXTRACT(MONTH FROM od.OrderDate);",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "To use SUM and AVG together, the AVG should ideally consider specific periods, Monthly is expected for products and order details.",
            "Correct",
            "Incorrect: The query does not filter by month and doesn't include a date column. A possible monthly report should include new columns.",
            "Correct",
            "Correct",
            "The correct formula incorporates Discounts, using SUM correctly assigns the values per product group.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct but revised to select the supplier names since the question asks for suppliers.",
            "Correct.",
            "Revised to count the number of products instead of listing them.",
            "Correct.",
            "Correct.",
            "Revised to limit to 1 since it asks for the highest unit price.",
            "Correct but added an alias for clarity.",
            "Revised to add monthly granularity.",
            "Revised to add monthly granularity.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct but added table reference to ensure clarity.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Incorrect query: Missing reference to OrderDate in the instructions. Corrected query: SELECT ProductID, SUM(Quantity) AS TotalSold FROM [Order Details] WHERE OrderDate >= DATEADD(month, -1, GETDATE()) AND OrderDate < GETDATE() GROUP BY ProductID;",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect: Nested aggregate functions are not valid in SQL. Corrected query: SELECT AVG(Revenue) FROM (SELECT SUM(Quantity * UnitPrice) AS Revenue FROM [Order Details] GROUP BY OrderID) AS OrderRevenues",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect: Missing reference to OrderDate in the instructions. Corrected query: SELECT ProductID, FORMAT(OrderDate, 'yyyy-MM') AS SalesMonth, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID, FORMAT(OrderDate, 'yyyy-MM') HAVING TotalQuantity = (SELECT MAX(SUM(Quantity)) FROM [Order Details] GROUP BY ProductID, FORMAT(OrderDate, 'yyyy-MM'))",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The provided query correctly calculates the total quantity sold for each product, but the question specifically asks for monthly performance. The corrected SQL should include a date grouping: SELECT products.ProductID, products.ProductName, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS TotalQuantitySold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductID, products.ProductName, Month;",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is missing a join with the orders table to filter orders from the current month. Correct query: SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m') GROUP BY p.ProductID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is missing a join with the orders table. Correct query: SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m') GROUP BY p.ProductName ORDER BY TotalRevenue DESC LIMIT 1;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The column 'OrderDate' does not exist in the provided schema. It must be retrieved from another related table (likely 'orders'). Also, the original query's usage of DATE_SUB and CURDATE is appropriate for filtering date range. If 'orders' table is assumed to have this column, the appropriate query should be:\nSELECT products.ProductName, SUM([Order Details].Quantity) AS UnitsSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY products.ProductID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The column 'OrderDate' does not exist in the provided schema. It must be retrieved from another related table (likely 'orders'). If 'orders' table is assumed to have this column, the appropriate query should be:\nSELECT products.ProductName, SUM([Order Details].Discount) AS TotalDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() GROUP BY products.ProductID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The subquery for retrieving orders in January 2023 should use the correct date format. Also, the table 'orders' must be included if it is not specified in the initial schema. Corrected query: SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.orderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.ProductName;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "This query correctly calculates the product performance score based on the provided metric formula. However, adding a date filter to fit the granularity would be more accurate for monthly performance. Updated query with monthly performance: SELECT products.ProductID, DATE_TRUNC('month', orders.orderDate) AS Month, SUM([Order Details].Quantity) AS PerformanceScore FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductID, DATE_TRUNC('month', orders.orderDate);",
            "The formula used is correct, but the average stock calculation should be more refined considering the time period. Corrected query: SELECT products.ProductID, (SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock)) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE orderDate BETWEEN '2023-01-01' AND '2023-03-31') GROUP BY products.ProductID;",
            "Correct.",
            "Correct.",
            "The query needed to calculate the average time between reorders isn't accounting for the full date difference in months correctly. A better approach is to use the DATEDIFF function to calculate the actual months between orders. Corrected query: SELECT ProductName, AVG(DATEDIFF(month, previousOrderDate, orderDate)) AS AvgMonthsBetweenReorders FROM (SELECT p.ProductName, o.orderDate, LAG(o.orderDate) OVER (PARTITION BY p.ProductID ORDER BY o.orderDate) AS previousOrderDate FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID) AS sub WHERE previousOrderDate IS NOT NULL GROUP BY ProductName;",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The query is incorrect since OrderID is not guaranteed to contain a month information. It should be based on order date from the orders table instead. Correct query: SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalUnitsSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE()) GROUP BY products.ProductID, products.ProductName ORDER BY TotalUnitsSold DESC LIMIT 1;",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The tables 'products' and 'orders' are joined in the query, but the 'orders' table isn't included in the FROM clause. Fixed query: SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductName, YEAR(orders.OrderDate), MONTH(orders.OrderDate);",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected the GROUP BY clause to include products.ProductName.",
            "This query is correct.",
            "This query is correct.",
            "Corrected the GROUP BY clause to include products.ProductName.",
            "This query is correct.",
            "This query is correct.",
            "Corrected the calculation of total discount to account for quantity.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "This query is correct.",
            "Correct. This query appropriately filters products with inventory levels below the reorder level.",
            "Correct. This query accurately calculates total sales revenue by multiplying quantity and unit price in the order details, then groups by product ID and name.",
            "Correct. This query groups by SupplierID and counts the number of products per supplier, ordering the results by product count in descending order.",
            "Correct. This query correctly groups by CategoryID and calculates the average unit price within each category.",
            "Correct. This query filters products where units on order are greater than units in stock.",
            "Incorrect. The original query needs to account for grouping by the extracted month from the order date properly. The corrected query includes the EXTRACT function inside the GROUP BY clause.",
            "Incorrect. The original query does not join the orders table to access the OrderDate field. The corrected query includes a join with the orders table to filter by the past month.",
            "Correct. This query calculates the average discount per product by joining products and order details, grouping by product ID and name, and ordering by the average discount in descending order.",
            "Correct. This query sums the total quantity sold of discontinued products by joining products and order details, grouping by product ID and name.",
            "Correct. This query finds the top 3 categories by total sales revenue by joining products and order details, grouping by CategoryID, and ordering the results by total sales revenue in descending order.",
            "Correct. This query calculates the total quantity of products supplied by each supplier by joining products and order details, grouping by SupplierID.",
            "Correct. This query finds products that have been ordered more than 100 times by grouping by product ID and name, using the HAVING clause to filter sums of quantities greater than 100.",
            "Correct. This query calculates the total dollar value of discounts, grouping by product ID and name, ordering by total discount, and limiting to the top result.",
            "Correct. This query calculates the average discount applied to orders per product by joining products and order details, grouping by product ID and name.",
            "Correct. This query finds products with a unit price greater than the average unit price across all products.",
            "Incorrect. The original query is incorrect in calculating the average quantity per unit. The corrected query uses a formula that subtracts spaces within the QuantityPerUnit column to estimate the average quantity per unit by counting units.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: The query should return both highest and lowest inventory turnover ratio products. Use WITH clause for this.",
            "Incorrect: The initial query is partially correct but lacks ORDER BY clause to sort the results based on the unit price. Add ORDER BY clause.",
            "Correct",
            "Correct.",
            "Correct.",
            "The query incorrectly sums units in stock for each product. Corrected query: SELECT ProductID, UnitsInStock FROM products;",
            "Correct.",
            "Correct.",
            "The column 'OrderDate' does not exist in the '[Order Details]' table. It likely belongs to an 'orders' table. Corrected query: SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS UnitsSold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATEADD(month, -1, CURRENT_TIMESTAMP) GROUP BY p.ProductID, p.ProductName ORDER BY UnitsSold DESC LIMIT 5;",
            "Correct.",
            "Correct.",
            "Incorrect. Use MAX(UnitPrice) appropriately. Corrected query: SELECT ProductID, ProductName, UnitPrice FROM products WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM products);",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The column 'OrderDate' does not exist in the '[Order Details]' table. It likely belongs to an 'orders' table. Corrected query: SELECT p.ProductID, p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID LEFT JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderID IS NULL OR o.OrderDate < DATEADD(year, -1, CURRENT_TIMESTAMP);",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Change 'MONTH(od.OrderID)' to 'EXTRACT(MONTH FROM od.OrderDate)'",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. QuantityPerUnit is VARCHAR and should be cast to a numeric type.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect Query: Needs to filter based on month. Corrected: SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName, DATE_FORMAT(od.OrderDate, '%Y-%m')",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct. The query correctly calculates the total revenue generated by each product.",
            "Correct. The query correctly identifies the suppliers associated with discontinued products.",
            "Correct. The query correctly identifies products with a reorder level higher than 50 units.",
            "Correct. The query correctly calculates the total quantity of products sold in the last month. Assuming the OrderDate column exists in the orders table and DATEADD and GETDATE functions are supported by the SQL database.",
            "Correct. The query accurately counts how many products have been discontinued.",
            "Correct. The query accurately calculates total revenue from each category of products.",
            "Correct. The query accurately calculates the inventory turnover ratio for each product.",
            "Correct. The query correctly identifies products that are low on stock and need reordering.",
            "Correct. The query accurately counts the number of different products each supplier provides.",
            "Correct. The query correctly identifies products with the highest total sales volume.",
            "Correct. The query accurately calculates the average price of products from each supplier.",
            "Correct. The query correctly identifies the top 5 most ordered products.",
            "Incorrect. The `DATEPART` function should be used on a date column, not on `OrderID`. Corrected query: `SELECT products.ProductName, DATEPART(month, orders.OrderDate) AS Month, SUM([Order Details].Quantity) AS TotalSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductName, DATEPART(month, orders.OrderDate);`",
            "Correct. The query accurately calculates the performance of products based on sales and inventory levels.",
            "Correct and efficient.",
            "Correct and efficient.",
            "Correct and efficient.",
            "Column 'OrderDate' does not exist in '[Order Details]'. To get data from 'orders' table, use the join with correct date range.",
            "Correct and efficient.",
            "Correct and efficient.",
            "Correct and efficient.",
            "Correct and efficient.",
            "Correct and efficient.",
            "Correct and efficient.",
            "Correct and efficient with the same modification as in question #11.",
            "Correct.",
            "Incorrect. The right query should use DATE_FORMAT to match the OrderDate to the current month: SELECT P.ProductName, SUM(OD.Quantity) AS TotalSold FROM [Order Details] AS OD JOIN products AS P ON OD.ProductID = P.ProductID WHERE DATE_FORMAT(NOW(), '%Y-%m') = DATE_FORMAT(OD.OrderDate, '%Y-%m') GROUP BY P.ProductID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The 'categories' table is not specified in the given schema. Corrected query: SELECT p.CategoryID, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p GROUP BY p.CategoryID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is mostly correct but should include products.ProductName in the GROUP BY clause.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is mostly correct but should include categories.CategoryName in the GROUP BY clause.",
            "Query is correct.",
            "Query is mostly correct but should include products.ProductName in the GROUP BY clause.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Correct. This query orders products by unit price in descending order and limits the result to one.",
            "Correct. This query calculates the total quantity ordered for each product by summing the quantity in the order details table.",
            "Correct. This query counts the number of products each supplier provides and orders them in descending order.",
            "Correct. This query selects the product names where the units in stock are less than the reorder level.",
            "Correct. This query calculates the total sales revenue for each product, orders them in descending order of the revenue, and limits the results to the top 5.",
            "Correct. This query calculates the average discount across all order details.",
            "Incorrect. Correct query: SELECT p.ProductID, p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.ProductID IS NULL;",
            "Correct. This query calculates the total sales revenue for each supplier by summing the product of quantity and unit price for all products supplied by each supplier.",
            "Correct. This query selects the product with the highest units in stock.",
            "Correct. This query calculates the average number of units in stock across all products.",
            "Correct. This query selects products that have a reorder level of less than 20.",
            "Incorrect. Correct query: SELECT DATE_FORMAT(od.OrderDate, '%Y-%m') AS Month, p.ProductID, SUM(od.Quantity) AS TotalQuantityOrdered FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY DATE_FORMAT(od.OrderDate, '%Y-%m'), p.ProductID;"
        ],
        "difficulty": [
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced"
        ]
    },
    "Employee Performance": {
        "questions": [
            "What is the total sales generated by each employee?",
            "Which employee has made the highest sales in the month of January 2023?",
            "How many orders were placed by each employee?",
            "What is the average order value handled by each employee?",
            "How many employees were hired after 2022?",
            "What is the total amount of freight cost handled by each employee?",
            "Which city has the highest number of employees?",
            "What is the average salary of employees grouped by their titles?",
            "How many orders were shipped in February 2023?",
            "Which employee handled the most number of orders that required a shipping method of '1'?",
            "What is the total number of products sold by each employee?",
            "How much total revenue was generated from orders shipped to 'Germany'?",
            "What is the average discount given on each order?",
            "Which employees report to employee ID '5'?",
            "What are the names of employees who have generated more than $100,000 in sales?",
            "What is the maximum, minimum, and average salary of employees?",
            "How many orders were handled by employees who were hired in the year 2020?",
            "What is the total sales generated by employees in the 'Sales Representative' title?",
            "Which employee has been with the company the longest?",
            "How many products were ordered with a discount greater than 10%?",
            "What is the total sales generated by each employee for the past year?",
            "Which employee has generated the highest sales?",
            "Which employees report to a specific manager?",
            "List the employees who have never made a sale.",
            "Which employee's sales have the highest total revenue this month?",
            "Identify employees who were hired in the year 2022.",
            "List the birth dates and age of all employees.",
            "How many orders did each employee handle?",
            "Find the top three employees with the highest total sales.",
            "Determine the employee with the largest average order size.",
            "Which employees have not recorded any orders?",
            "List all orders including the details of the employee who handled them.",
            "Calculate the average age of employees.",
            "What is the distribution of employee titles?",
            "Count the number of employees per country.",
            "Identify the employees who report to each manager.",
            "What is the average salary of employees by title?",
            "Find the employee with the most overdue orders.",
            "What is the total freight cost handled by each employee?",
            "Determine the number of employees hired each month in the last year.",
            "List employees and their sales contributions for the past quarter.",
            "Find the ratio of the number of orders handled to the total sales amount for each employee.",
            "Identify employees responsible for sales orders exceeding $10,000.",
            "What is the total sales generated by each employee on a monthly basis?",
            "Which employee has the highest total sales?",
            "List the employees who were hired after the year 2000.",
            "What is the average order value for each employee?",
            "Which employee processed the most orders in the month of January 2023?",
            "What is the total freight cost associated with each employee's orders?",
            "List all employees who have not placed any orders.",
            "Find the employee with the highest average order value.",
            "Which employee has the most frequent repeat customers?",
            "What is the total number of orders placed by employees in each country?",
            "How many orders were shipped on the same day as they were placed, grouped by employee?",
            "Find the employee who has managed the most orders.",
            "What is the total discount given by each employee?",
            "List the top 5 employees with the highest sales in the last quarter.",
            "Calculate the total number of products sold by each employee.",
            "What is the average number of orders per employee?",
            "Which employees have the highest customer satisfaction based on regional sales?",
            "Identify the employee with the largest variance in monthly sales.",
            "How many days does it typically take for orders to be shipped after being placed by each employee?",
            "What are the total sales generated by each employee?",
            "Who are the employees reporting to each manager?",
            "How many orders were handled by each employee?",
            "What is the total number of orders placed per month?",
            "How many employees were hired each year?",
            "What is the average shipping cost of the orders?",
            "Which employee has the highest average order value?",
            "How many orders were shipped within the required date?",
            "Which regions have the highest sales?",
            "What is the highest discounted order handled by each employee?",
            "What is the average age of employees?",
            "Which employee handled the most products?",
            "What is the total sales for each employee for the year 2022?",
            "Which month had the highest number of orders placed?",
            "What is the average discount applied to orders by each employee?",
            "How many employees live in each country?",
            "Which employee has the most orders shipped on time?",
            "What is the total freight cost for orders handled by each employee?",
            "Which employee generated the highest total sales?",
            "What is the average sales per order for each employee?",
            "How many orders were placed by each employee per month?",
            "Which employee handled the most orders?",
            "What is the total sales by all employees in the year 2022?",
            "What is the birthdate of the youngest employee?",
            "What is the hire date of the oldest employee?",
            "Which employees have sales greater than $10,000 in any month?",
            "What is the average order quantity for each employee?",
            "Which employee shipped the most orders last year?",
            "What are the top five cities by total sales generated?",
            "How many employees report to each manager?",
            "What is the total freight cost per employee?",
            "Which employee worked with the most customers?",
            "What is the total sales by each employee in the United States?",
            "What is the highest discount given on an order and by which employee?",
            "What is the average freight cost per order for each employee?",
            "Which employee has the highest sales in the last quarter?",
            "How many orders were placed by each employee in the last month?",
            "What is the average sales per employee?",
            "Which employees have birthdays in the current month?",
            "List the employees who have been with the company for more than 10 years.",
            "Identify the employees who report to a specific manager along with their total sales.",
            "Calculate the total freight cost for orders handled by each employee.",
            "List the top 5 employees with the highest number of orders shipped.",
            "Determine the average discount given by each employee.",
            "Count the number of employees in each country.",
            "Find the employee with the most orders delayed beyond the required date.",
            "What is the total sales generated by each employee, grouped by month?",
            "Which employee generated the most sales in the last year?",
            "Identify employees who have never handled an order.",
            "Calculate the total sales for employees located in a specific region.",
            "Find out how many orders each employee managed in a specific date range.",
            "Determine the top-selling products for each employee.",
            "How many orders were placed each month?",
            "What is the total freight cost incurred each month?",
            "What is the average order value?",
            "What is the total discount given for each employee's sales?",
            "How many orders were shipped to each country?",
            "What is the total sales for each country?",
            "Which months had the highest sales volume?",
            "How many employees have titles containing 'Manager'?",
            "What are the birthdates of all employees?",
            "What is the average salary of employees?",
            "Which regions have the highest number of employees?",
            "What is the total quantity ordered for each product?",
            "Which product has the highest total sales?",
            "Which are the top 5 cities by order volume?",
            "What is the total sales generated in each region?",
            "How many unique customers placed orders?",
            "Which employee made the highest sales last month?",
            "How many orders have been placed by each employee?",
            "List the employees who have not placed any orders in the last month.",
            "Rank employees based on their total sales.",
            "What is the average salary of employees who have generated more than $100,000 in sales?",
            "What is the total sales for each employee in each country?",
            "Identify the employee with the longest employment duration who has also made sales in the last year.",
            "Calculate the total number of orders shipped by each country.",
            "Find the total freight cost incurred for each employee.",
            "List employees who have birthdays in the current month.",
            "Calculate the total sales per month for each employee.",
            "Identify employees with the highest and lowest order counts.",
            "Find the total number of orders that were shipped late for each employee.",
            "Which employee has the most different products sold?",
            "Calculate the total sales for orders shipped via different shipping methods for each employee.",
            "Identify the employee with the highest average order value this year.",
            "Find all employees who generated sales, grouped by their regions.",
            "Which employee generated the highest sales in the previous month?",
            "How many orders did each employee process last year?",
            "What is the total sales generated by employees in each country?",
            "Who are the top 5 employees with the highest number of processed orders?",
            "How long has each employee been working at the company?",
            "What is the total sales amount and quantity of products ordered by each employee?",
            "What is the average discount given by each employee?",
            "Which employee processed the most orders in the last quarter?",
            "What is the distribution of employee titles in the company?",
            "Which employee has the highest number of orders with discounts?",
            "What is the highest sales amount generated by a single employee in a single month?",
            "What is the total freight cost associated with orders handled by each employee?",
            "What is the total number of orders shipped by each shipping method?",
            "What is the average shipping time for orders processed by each employee?",
            "What is the total sales generated by employees hired in the last five years?",
            "Which employee has the fewest processed orders?",
            "Which employee has made the highest sales in the last year?",
            "How many orders were placed by each employee in the last quarter?",
            "Which employee has the highest number of orders shipped late?",
            "What is the total revenue generated by each employee per month?",
            "How does the performance of employees in different regions compare?",
            "What is the average order quantity per employee?",
            "Which employees have handled more than 50 orders in the last month?",
            "What is the total freight cost incurred by each employee's orders?",
            "How many employees have been with the company for more than 10 years?",
            "What is the salary distribution among different job titles?",
            "Identify the employees who report to the same manager.",
            "Which employee has processed the highest number of orders in a single day?",
            "What is the average order value per employee?",
            "What is the correlation between employee hire date and performance?",
            "What is the percentage of orders that were shipped on time by each employee?",
            "How many orders placed in the last year were shipped to each country?",
            "Which employees have processed orders with the maximum discount?",
            "How many orders did each employee handle in the last month?",
            "List the top 5 employees by the number of orders handled.",
            "How many employees have generated sales over $10,000?",
            "What is the total amount of discounts given by each employee?",
            "Who is the highest paid employee and what is their total sales?",
            "Which region has the highest sales?",
            "What is the total sales generated by employees in each region?",
            "List all employees who were hired this year.",
            "Calculate the total sales by each employee's hire date.",
            "What is the average discount given by employees?",
            "List employees by the number of orders they handled, in descending order.",
            "Find the employee with the longest tenure and their total sales.",
            "What is the percentage contribution of each employee to the total sales?",
            "Identify the top 3 cities by total sales.",
            "Calculate the average sales per order for each employee.",
            "Find the employee with the highest number of orders shipped late.",
            "Which employee generated the highest sales in the last month?",
            "List all orders along with the employee details who handled the orders.",
            "What is the average sales made by employees per month?",
            "Find the employee with the highest average monthly sales.",
            "How many employees were hired in the year 2022?",
            "Who are the employees with the lowest sales?",
            "Get the total sales generated by employees grouped by country.",
            "Find the month with the highest sales for each employee.",
            "What are the details of orders that were shipped late?",
            "Calculate the total discount given by each employee.",
            "List all employees who have not made any sales in the past year.",
            "What is the total revenue generated per month?",
            "Identify employees who have birthdays this month.",
            "Find the average order value handled by each employee.",
            "Get a list of employees and the number of orders they have handled.",
            "Determine the top 5 employees based on the number of orders handled.",
            "Find out in which cities the most orders have been shipped.",
            "Calculate the total freight cost incurred for each employee's orders.",
            "What is the total value of orders shipped to each country?",
            "Which employees were hired in the last year?",
            "Which employee made the highest sales on a specific date?",
            "List all employees along with the names of their managers.",
            "How many orders were placed in each country?",
            "What are the five cities with the highest total sales?",
            "What is the total freight cost for orders shipped in a specific month?",
            "What is the total number of orders handled by each employee?",
            "Which orders were shipped late?",
            "Which employees have more than five years of tenure?",
            "List the employees who have never placed an order.",
            "What is the maximum, minimum, and average salary of the employees?",
            "What are the top three products that generate the most sales revenue?",
            "List orders that have a discount of 20% or more.",
            "How many orders have been placed in each year?",
            "Which employee has handled the maximum number of distinct customers?",
            "How many products have been ordered more than 100 times?",
            "List full names and titles of all employees.",
            "Find the number of orders processed by each employee.",
            "Calculate the total sales generated by each employee.",
            "What is the total quantity of products ordered from each employee?",
            "Compute the total freight cost incurred for orders handled by each employee.",
            "Determine the employee with the highest aggregate sales.",
            "List the employees who report to a specific manager.",
            "Count the number of employees hired each year.",
            "Find the average salary of employees by title.",
            "Which employees have a birthday this month?",
            "Identify the top 5 employees with the highest sales in the last year.",
            "Compute the average time taken to ship orders by each employee.",
            "Find the most common shipping destination country for each employee.",
            "List employees handling orders exceeding a certain quantity of products.",
            "Determine which employee has processed orders with the highest total discount applied.",
            "Find employees who have processed orders with a shipping date later than required date.",
            "Calculate the total number of products sold by each employee in a given year.",
            "Identify the percentage contribution of each employee to the total sales.",
            "Find the difference in days between the hire date and the birthdate of employees.",
            "How many employees were hired in each year?",
            "What is the total amount of freight cost for each employee?",
            "Which employees have generated the highest total sales?",
            "How many orders did each employee handle in the last year?",
            "What is the average number of orders handled by employees per month?",
            "Which employee has handled the most orders?",
            "How many employees are there in each city?",
            "What is the total sales per employee for each month?",
            "Which employee has the highest average order amount?",
            "What is the average salary of employees grouped by their title?",
            "Which employees have shipped orders to more than one country?",
            "What is the total quantity of products sold by each employee?",
            "Which employee has the highest number of shipped orders?",
            "How many orders were placed by each employee in a specific region?",
            "What is the average order amount for each employee?",
            "What is the total number of products ordered in the last month?",
            "How many orders were placed each day by each employee?",
            "Which employees have the longest tenure at the company?",
            "Which employee managed the highest number of orders with a discount applied?",
            "List the top three employees with the highest total sales in the last year.",
            "Which employee has processed the most orders?",
            "What is the average sales amount per order for each employee?",
            "How many orders has each employee processed in the month of January 2023?",
            "Find the total sales generated by each employee within each month in 2023.",
            "List all employees along with their respective managers.",
            "List the employees who have been hired in the last six months.",
            "Find the employee who has shipped the most orders to the USA.",
            "Find the total quantity of products sold by each employee.",
            "What is the total value of orders shipped in the first quarter of 2023?",
            "Calculate the total sales for each employee by country.",
            "Which cities have the highest number of orders processed by employees?",
            "List the average number of products per order for each employee.",
            "What is the total salary cost for all employees per month?",
            "Which employee has the highest sales this month?",
            "Which employee took the highest number of orders?",
            "Who are the employees who have never had any orders?",
            "Find the total number of orders handled by employees in each city.",
            "Identify the top 5 products with the highest total sales.",
            "What is the total sales generated per month for each employee?",
            "Find the employees who were hired in the last month.",
            "Which employee has handled the highest number of distinct customers?",
            "What are the top 3 cities with the highest number of employee orders?",
            "What is the average time it takes for employees to fulfill an order?",
            "Identify the orders with the highest quantity of products.",
            "What is the total salary expense of the company?",
            "Find the employee with the earliest hire date.",
            "How many orders did each employee handle in the first quarter of this year?",
            "Which employees have not handled any orders?",
            "List the employees who have a birthday this month.",
            "Identify the top 10 employees based on the total number of orders they handled.",
            "Calculate the average time it takes for each employee to ship an order.",
            "Which employee generated the most sales in each region?",
            "Find the total sales generated by all employees for each month.",
            "Which employees have worked for more than 10 years?",
            "What is the sum of freight cost for orders managed by each employee?",
            "Determine the employee who has handled the maximum number of orders in each country.",
            "What are the top 5 products sold by each employee in terms of quantity?",
            "Which employee has offered the highest discount on an order?",
            "Calculate the monthly sales performance for each employee for the past year.",
            "Find the ratio of sales to salary for each employee.",
            "List the employees who have generated sales above the company average.",
            "Determine the employee with the highest average order value excluding freight.",
            "Who are the top 3 employees based on total sales generated?",
            "How many employees were hired in the last year?",
            "Which employee reports to the manager with EmployeeID 5?",
            "How many orders were placed in the first quarter of 2023?",
            "What is the total freight cost for orders handled by employee 3?",
            "Which employees are older than 50 years?",
            "What is the maximum and minimum salary among all employees?",
            "List all employees who have 'Sales' in their title.",
            "What is the average shipping time for orders handled by each employee?",
            "What is the total number of employees working in each country?",
            "What is the total revenue generated from orders shipped to 'USA'?",
            "Who is the youngest employee?",
            "Which employee has the highest number of reports?",
            "What is the total number of orders in each region?",
            "How much revenue does each city generate?",
            "Which employees have hired before the year 2000?",
            "What is the average salary of employees in each city?",
            "How many orders have not been shipped yet?",
            "List employees who directly report to a specific manager.",
            "What is the total freight cost for all orders?",
            "Which employees have not placed any orders?",
            "Who are the top 5 employees by sales generated?",
            "What is the most common job title among the employees?",
            "Find the most recent hire date among the employees.",
            "What is the average order quantity per order?",
            "List the number of employees in each country.",
            "Find the total sales for each employee grouped by month.",
            "What is the average discount applied per order?",
            "What are the total sales and number of orders for each month?",
            "List orders placed in a specific month.",
            "Find employees who are older than 50 years.",
            "Who are the employees and their respective managers?",
            "How many orders were placed by each employee in 2022?",
            "Which employee processed the highest number of orders?",
            "What is the distribution of employees' titles in the company?",
            "List the top 5 employees with the highest salaries.",
            "Find employees who have not processed any orders.",
            "How many orders were shipped after the required date?",
            "What is the total freight cost incurred by each employee?",
            "Calculate the average delay in shipping orders for each employee.",
            "Which employee has processed the most orders for customers in the USA?",
            "List the employees who were hired after January 1, 2020.",
            "Identify the employee with the highest average order discount.",
            "Which employee has the highest sales in the first quarter of 2022?",
            "Compare the total sales of employees by region.",
            "Find the employee who has processed the most orders within a single month.",
            "List the top 3 employees with the fastest average shipping time.",
            "Determine the total number of unique customers served by each employee.",
            "What is the total salary expenditure for all employees?",
            "How many employees were hired after January 1, 2020?",
            "Which employee generated the highest sales?",
            "List the employees along with the number of orders they have handled.",
            "Calculate the total sales generated by each employee on a monthly basis.",
            "Find the top 5 employees in terms of sales generated.",
            "Determine the average age of employees by department.",
            "What is the total number of orders processed by each employee?",
            "List the employees who have not processed any orders.",
            "Calculate the total sales per country.",
            "Identify the month with the highest sales for each employee.",
            "What is the difference in sales between the top-performing and least-performing employees?",
            "Determine the employee with the fastest average shipping time.",
            "Find the percentage of orders processed by each employee out of the total orders.",
            "List the employees whose total sales exceed $50,000.",
            "Calculate the total freight cost incurred by each employee's orders.",
            "Find out which region has the highest total sales.",
            "Determine the average discount given per order by each employee.",
            "What is the total sales generated by employees grouped by title?",
            "Which employee has generated the highest sales so far?",
            "List the top 5 employees in terms of sales for the current year.",
            "How many orders have been processed by each employee?",
            "Which employee processed the highest number of orders last month?",
            "Calculate the average order value for each employee.",
            "Which employees haven't made any sales?",
            "How many orders were shipped late by each employee?",
            "What is the total revenue generated from orders managed by the employees?",
            "Identify employees whose orders had the highest average discount applied.",
            "Which countries do the employees ship the most to?",
            "Calculate the total sales per employee for the last quarter.",
            "Which employees have completed orders with the highest total freight costs?",
            "Find the top 3 cities where employees have the highest sales figures.",
            "Determine the total number of unique products sold by each employee.",
            "Calculate the yearly sales growth for each employee over the last 3 years.",
            "Which employees have received the highest average order value in the current year?",
            "How many orders were placed by each employee in January 2023?",
            "Which employees have a salary greater than $50,000?",
            "List the top 5 employees by total sales.",
            "Find the average order size (in terms of total price) handled by each employee.",
            "Which employees were hired in the year 2022?",
            "What is the total number of orders handled by employees with the title 'Sales Representative'?",
            "Identify the employee with the highest number of orders shipped to 'Germany'.",
            "What is the highest salary among all employees and who earns it?",
            "Which employee has the earliest hire date?",
            "Calculate the average discount applied by each employee for their orders.",
            "What is the total freight cost of all orders placed by each employee?",
            "List employees who have not placed any orders.",
            "Calculate the average time (in days) taken to ship an order by each employee.",
            "Find employees who have an average order size greater than $1000.",
            "Identify the most common title among employees.",
            "Which employees have placed orders that required delivery by a specific date in 2023?",
            "What is the total number of unique products ordered by each employee?",
            "List employees and their total sales for orders shipped within the first quarter of 2023.",
            "List the top 5 employees based on total sales generated.",
            "Which employee handled the most number of orders?",
            "Calculate the average sales per employee.",
            "Which cities have the highest number of employees?",
            "How many employees are there in each country?",
            "What is the average number of orders per month handled by employees?",
            "Find the total sales generated by each employee in the last year.",
            "Identify the employee with the highest average order value.",
            "Compare the total sales for each employee in the last month to the previous month.",
            "List the employees who have not handled any orders in the last six months.",
            "Determine the total sales generated by employees in each region.",
            "Which employee has the longest tenure in the company?",
            "Identify the employees whose sales have increased the most over the last year.",
            "What is the percentage of total sales contributed by each employee?"
        ],
        "sql_queries": [
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = 1 AND YEAR(orders.OrderDate) = 2023 GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT COUNT(EmployeeID) AS EmployeesHiredAfter2022 FROM employees WHERE HireDate > '2022-01-01';",
            "SELECT employees.EmployeeID, SUM(orders.Freight) AS TotalFreight FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT City, COUNT(EmployeeID) AS TotalEmployees FROM employees GROUP BY City ORDER BY TotalEmployees DESC LIMIT 1;",
            "SELECT Title, AVG(Salary) AS AvgSalary FROM employees GROUP BY Title;",
            "SELECT COUNT(OrderID) AS TotalShippedOrders FROM orders WHERE MONTH(ShippedDate) = 2 AND YEAR(ShippedDate) = 2023;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.ShipVia = 1 GROUP BY employees.EmployeeID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT employees.EmployeeID, SUM([Order Details].Quantity) AS TotalProducts FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE ShipCountry = 'Germany';",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT EmployeeID FROM employees WHERE ReportsTo = 5;",
            "SELECT CONCAT(FirstName, ' ', LastName) AS EmployeeName FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID HAVING SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) > 100000;",
            "SELECT MAX(Salary) AS MaxSalary, MIN(Salary) AS MinSalary, AVG(Salary) AS AvgSalary FROM employees;",
            "SELECT COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE YEAR(HireDate) = 2020;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE Title = 'Sales Representative' GROUP BY employees.EmployeeID;",
            "SELECT EmployeeID FROM employees ORDER BY HireDate ASC LIMIT 1;",
            "SELECT COUNT(*) AS TotalDiscountedProducts FROM [Order Details] WHERE Discount > 0.1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT e1.EmployeeID, e1.FirstName, e1.LastName FROM employees e1 JOIN employees e2 ON e1.EmployeeID = e2.ReportsTo",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL OR o.OrderID IS NULL",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= DATE_TRUNC('month', CURRENT_DATE) GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT EmployeeID, LastName, FirstName FROM employees WHERE HireDate BETWEEN '2022-01-01' AND '2022-12-31';",
            "SELECT EmployeeID, LastName, FirstName, BirthDate, ROUND((CURRENT_DATE - BirthDate) / 365.25, 2) AS Age FROM employees;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 3;",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderSize FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AvgOrderSize DESC LIMIT 1;",
            "SELECT EmployeeID, LastName, FirstName FROM employees WHERE EmployeeID NOT IN (SELECT DISTINCT EmployeeID FROM orders);",
            "SELECT orders.OrderID, orders.CustomerID, orders.OrderDate, employees.LastName, employees.FirstName FROM orders JOIN employees ON orders.EmployeeID = employees.EmployeeID;",
            "SELECT AVG((CURRENT_DATE - BirthDate) / 365.25) AS AvgAge FROM employees;",
            "SELECT Title, COUNT(*) AS TitleCount FROM employees GROUP BY Title;",
            "SELECT Country, COUNT(*) AS EmployeeCount FROM employees GROUP BY Country;",
            "SELECT Manager.LastName AS ManagerLastName, Manager.FirstName AS ManagerFirstName, Subordinate.LastName AS EmployeeLastName, Subordinate.FirstName AS EmployeeFirstName FROM employees AS Subordinate JOIN employees AS Manager ON Subordinate.ReportsTo = Manager.EmployeeID;",
            "SELECT Title, AVG(Salary) AS AvgSalary FROM employees GROUP BY Title;",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName, COUNT(orders.OrderID) AS OverdueOrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE ShippedDate > RequiredDate GROUP BY employees.EmployeeID ORDER BY OverdueOrderCount DESC LIMIT 1;",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName, SUM(orders.Freight) AS TotalFreight FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT DATE_TRUNC('month', HireDate) AS HireMonth, COUNT(*) AS HiredCount FROM employees WHERE HireDate >= DATEADD(year, -1, CURRENT_DATE) GROUP BY DATE_TRUNC('month', HireDate);",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= DATEADD(month, -3, CURRENT_DATE) GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesAmount, COUNT(orders.OrderID) / SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS OrderToSalesRatio FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID LEFT JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID HAVING SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) > 10000;",
            "SELECT employees.EmployeeID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1",
            "SELECT * FROM employees WHERE HireDate > '2000-01-01'",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-01' GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1",
            "SELECT employees.EmployeeID, SUM(orders.Freight) AS TotalFreight FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID",
            "SELECT * FROM employees WHERE EmployeeID NOT IN (SELECT DISTINCT EmployeeID FROM orders)",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AverageOrderValue DESC LIMIT 1",
            "SELECT employees.EmployeeID, COUNT(DISTINCT orders.CustomerID) AS RepeatCustomers FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY RepeatCustomers DESC LIMIT 1",
            "SELECT employees.EmployeeID, employees.Country, COUNT(orders.OrderID) AS OrderCount FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID, employees.Country",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS SameDayShipped FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderDate = orders.ShippedDate GROUP BY employees.EmployeeID",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1",
            "SELECT employees.EmployeeID, SUM([Order Details].Discount) AS TotalDiscount FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 5",
            "SELECT employees.EmployeeID, SUM([Order Details].Quantity) AS TotalProductsSold FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
            "SELECT AVG(OrderCount) FROM (SELECT COUNT(orders.OrderID) AS OrderCount FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID) AS EmployeeOrderCounts",
            "SELECT employees.EmployeeID, employees.Region, COUNT(orders.OrderID) AS OrderCount FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID, employees.Region ORDER BY COUNT(orders.OrderID) DESC LIMIT 1",
            "SELECT employees.EmployeeID, STDDEV_POP(SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount))) AS SalesVariance FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
            "SELECT employees.EmployeeID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageShipTime FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT m.EmployeeID AS ManagerID, m.LastName AS ManagerLastName, m.FirstName AS ManagerFirstName, e.EmployeeID AS EmployeeID, e.LastName AS EmployeeLastName, e.FirstName AS EmployeeFirstName FROM employees e JOIN employees m ON e.ReportsTo = m.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT YEAR(HireDate) AS HireYear, COUNT(EmployeeID) AS HireCount FROM employees GROUP BY YEAR(HireDate);",
            "SELECT AVG(Freight) AS AverageFreightCost FROM orders;",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AverageOrderValue DESC LIMIT 1;",
            "SELECT COUNT(OrderID) AS OnTimeOrders FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT o.ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipRegion ORDER BY TotalSales DESC;",
            "SELECT e.EmployeeID, MAX(od.Discount) AS MaxDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT AVG(DATEDIFF(CURDATE(), BirthDate) / 365) AS AverageAge FROM employees;",
            "SELECT e.EmployeeID, SUM(od.Quantity) AS TotalProducts FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2022 GROUP BY e.EmployeeID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT e.EmployeeID, AVG(od.Discount) AS AverageDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT Country, COUNT(EmployeeID) AS EmployeeCount FROM employees GROUP BY Country;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OnTimeOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate <= o.RequiredDate GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreightCost FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgSalesPerOrder FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrdersPerMonth, CONCAT(YEAR(o.OrderDate), '-', MONTH(o.OrderDate)) AS Month FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, Month",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS YearlySales FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2022",
            "SELECT e.FirstName, e.LastName, e.BirthDate FROM employees e ORDER BY e.BirthDate DESC LIMIT 1",
            "SELECT e.FirstName, e.LastName, e.HireDate FROM employees e ORDER BY e.HireDate ASC LIMIT 1",
            "SELECT e.EmployeeID, MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, Month HAVING MonthlySales > 10000",
            "SELECT e.EmployeeID, AVG(od.Quantity) AS AvgOrderQuantity FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS ShippedOrders FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.ShippedDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID ORDER BY ShippedOrders DESC LIMIT 1",
            "SELECT o.ShipCity, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS CitySales FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipCity ORDER BY CitySales DESC LIMIT 5",
            "SELECT e.ReportsTo, COUNT(e.EmployeeID) AS ReportCount FROM employees e GROUP BY e.ReportsTo",
            "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreight FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID",
            "SELECT e.EmployeeID, COUNT(DISTINCT o.CustomerID) AS CustomerCount FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY CustomerCount DESC LIMIT 1",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS USASales FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.ShipCountry = 'USA' GROUP BY e.EmployeeID",
            "SELECT e.EmployeeID, MAX(od.Discount) AS MaxDiscount FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY MaxDiscount DESC LIMIT 1",
            "SELECT e.EmployeeID, AVG(o.Freight) AS AvgFreightCost FROM employees e INNER JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE() GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT EmployeeID, FirstName, LastName, BirthDate FROM employees WHERE MONTH(BirthDate) = MONTH(CURDATE());",
            "SELECT EmployeeID, FirstName, LastName, HireDate FROM employees WHERE DATEDIFF(CURDATE(), HireDate) > 3650;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE e.ReportsTo = ? GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS ShippedOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL GROUP BY e.EmployeeID ORDER BY ShippedOrders DESC LIMIT 5;",
            "SELECT e.EmployeeID, AVG(od.Discount) AS AvgDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT Country, COUNT(EmployeeID) AS EmployeeCount FROM employees GROUP BY Country;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS DelayedOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate > o.RequiredDate GROUP BY e.EmployeeID ORDER BY DelayedOrders DESC LIMIT 1;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales, DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, Month;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE e.Region = 'specific region' GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate BETWEEN 'start date' AND 'end date' GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID GROUP BY e.EmployeeID, p.ProductID ORDER BY TotalQuantity DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY OrderMonth;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, SUM(Freight) AS TotalFreight FROM orders GROUP BY OrderMonth;",
            "SELECT AVG(UnitPrice * Quantity * (1 - Discount)) AS AvgOrderValue FROM [Order Details];",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM(([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount)) AS TotalDiscount FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID JOIN employees ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT ShipCountry, COUNT(OrderID) AS TotalShippedOrders FROM orders GROUP BY ShipCountry;",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID GROUP BY OrderMonth ORDER BY TotalSales DESC;",
            "SELECT COUNT(*) AS TotalManagers FROM employees WHERE Title LIKE '%Manager%';",
            "SELECT FirstName, LastName, BirthDate FROM employees;",
            "SELECT AVG(Salary) AS AvgSalary FROM employees;",
            "SELECT Region, COUNT(EmployeeID) AS TotalEmployees FROM employees GROUP BY Region;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantityOrdered FROM [Order Details] GROUP BY ProductID;",
            "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT ShipCity, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipCity ORDER BY TotalOrders DESC LIMIT 5;",
            "SELECT employees.Region, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID JOIN employees ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.Region;",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL OR (o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 MONTH));",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC;",
            "SELECT AVG(e.Salary) AS AvgSalary FROM employees e JOIN (SELECT EmployeeID FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY EmployeeID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 100000) e_with_sales ON e.EmployeeID = e_with_sales.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, o.ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, o.ShipCountry;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, DATEDIFF(CURRENT_DATE, e.HireDate) AS EmploymentDuration FROM employees e WHERE e.EmployeeID IN (SELECT DISTINCT o.EmployeeID FROM orders o WHERE o.OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) ORDER BY EmploymentDuration DESC LIMIT 1;",
            "SELECT o.ShipCountry, COUNT(o.OrderID) AS OrderCount FROM orders o GROUP BY o.ShipCountry;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e WHERE MONTH(e.BirthDate) = MONTH(CURRENT_DATE);",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, MONTH(o.OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, OrderMonth;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1 UNION SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount ASC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS LateOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate > o.RequiredDate GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(DISTINCT od.ProductID) AS ProductCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, o.ShipVia, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, o.ShipVia;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY e.EmployeeID ORDER BY AvgOrderValue DESC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, e.Region, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.Region;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate BETWEEN DATE_FORMAT(CURRENT_DATE - INTERVAL 1 MONTH, '%Y-%m-01') AND LAST_DAY(CURRENT_DATE - INTERVAL 1 MONTH) GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) - 1 GROUP BY employees.EmployeeID;",
            "SELECT employees.Country, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.Country;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT employees.EmployeeID, DATEDIFF(CURDATE(), employees.HireDate) AS DaysWorked FROM employees;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales, SUM([Order Details].Quantity) AS TotalQuantity FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, AVG([Order Details].Discount) AS AvgDiscount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE() GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT employees.Title, COUNT(*) AS EmployeeCount FROM employees GROUP BY employees.Title;",
            "SELECT employees.EmployeeID, COUNT(*) AS DiscountedOrdersCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE [Order Details].Discount > 0 GROUP BY employees.EmployeeID ORDER BY DiscountedOrdersCount DESC LIMIT 1;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS OrderMonth FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, OrderMonth ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, SUM(orders.Freight) AS TotalFreightCost FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT orders.ShipVia, COUNT(*) AS TotalShippedOrders FROM orders GROUP BY orders.ShipVia;",
            "SELECT employees.EmployeeID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgShippingTime FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.ShippedDate IS NOT NULL GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE employees.HireDate >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR) GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY OrderCount ASC LIMIT 1;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 3 MONTH) GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS LateOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.ShippedDate > orders.RequiredDate GROUP BY employees.EmployeeID ORDER BY LateOrders DESC LIMIT 1;",
            "SELECT employees.EmployeeID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS MonthlySales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, Month;",
            "SELECT employees.Region, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS RegionalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.Region;",
            "SELECT employees.EmployeeID, AVG([Order Details].Quantity) AS AvgOrderQuantity FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID HAVING COUNT(orders.OrderID) > 50 AND MAX(orders.OrderDate) >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);",
            "SELECT employees.EmployeeID, SUM(orders.Freight) AS TotalFreight FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT COUNT(*) AS YearsWithCompany FROM employees WHERE employees.HireDate <= DATE_SUB(CURRENT_DATE, INTERVAL 10 YEAR);",
            "SELECT employees.Title, AVG(employees.Salary) AS AvgSalary FROM employees GROUP BY employees.Title;",
            "SELECT e1.EmployeeID, e1.FirstName, e1.LastName FROM employees e1 JOIN employees e2 ON e1.ReportsTo = e2.EmployeeID;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrdersInOneDay FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID HAVING COUNT(orders.OrderID) = (SELECT MAX(CountPerDay) FROM (SELECT COUNT(orders.OrderID) AS CountPerDay FROM orders GROUP BY DATE(orders.OrderDate), orders.EmployeeID) AS SubQuery);",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.HireDate, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY employees.HireDate;",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OnTimeOrders, (SUM(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 ELSE 0 END) / COUNT(orders.OrderID)) * 100 AS OnTimePercentage FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT orders.ShipCountry, COUNT(orders.OrderID) AS OrdersCount FROM orders WHERE orders.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY orders.ShipCountry;",
            "SELECT employees.EmployeeID, SUM([Order Details].Discount) AS TotalDiscount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalDiscount DESC LIMIT 1;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT COUNT(DISTINCT e.EmployeeID) FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 10000;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.Salary, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY e.Salary DESC LIMIT 1;",
            "SELECT e.Region, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.Region ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT e.Region, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.Region;",
            "SELECT * FROM employees WHERE YEAR(HireDate) = YEAR(CURDATE());",
            "SELECT e.EmployeeID, e.HireDate, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.HireDate;",
            "SELECT e.EmployeeID, AVG(od.Discount) AS AvgDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC;",
            "SELECT e.EmployeeID, DATEDIFF(CURDATE(), e.HireDate) AS Tenure, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY Tenure DESC LIMIT 1;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / (SELECT SUM(od2.UnitPrice * od2.Quantity * (1 - od2.Discount)) FROM orders o2 JOIN [Order Details] od2 ON o2.OrderID = od2.OrderID) * 100 AS ContributionPercentage FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT ShipCity, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCity ORDER BY TotalSales DESC LIMIT 3;",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgSalesPerOrder FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS LateOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate > o.RequiredDate GROUP BY e.EmployeeID ORDER BY LateOrders DESC LIMIT 1;",
            "SELECT e.FirstName, e.LastName, e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT o.OrderID, e.FirstName, e.LastName, e.Title, o.OrderDate FROM orders o JOIN employees e ON o.EmployeeID = e.EmployeeID;",
            "SELECT e.EmployeeID, AVG(MonthlySales) AS AvgMonthlySales FROM (SELECT e.EmployeeID, MONTH(o.OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, MONTH(o.OrderDate)) AS MonthlySalesGrouped GROUP BY e.EmployeeID;",
            "SELECT e.FirstName, e.LastName, e.EmployeeID, AVG(MonthlySales) AS AvgMonthlySales FROM (SELECT e.EmployeeID, MONTH(o.OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, MONTH(o.OrderDate)) AS MonthlySalesGrouped GROUP BY e.EmployeeID ORDER BY AvgMonthlySales DESC LIMIT 1;",
            "SELECT COUNT(*) AS NumHires FROM employees WHERE YEAR(HireDate) = 2022;",
            "SELECT e.FirstName, e.LastName, e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales ASC LIMIT 5;",
            "SELECT e.Country, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.Country;",
            "SELECT EmployeeID, Year, Month, MaxMonthlySales FROM (SELECT e.EmployeeID, YEAR(o.OrderDate) AS Year, MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales, RANK() OVER (PARTITION BY e.EmployeeID ORDER BY SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) DESC) AS RankSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, YEAR(o.OrderDate), MONTH(o.OrderDate)) RankedSales WHERE RankSales = 1;",
            "SELECT o.OrderID, e.FirstName, e.LastName, o.OrderDate, o.RequiredDate, o.ShippedDate FROM orders o JOIN employees e ON o.EmployeeID = e.EmployeeID WHERE o.ShippedDate > o.RequiredDate;",
            "SELECT e.FirstName, e.LastName, e.EmployeeID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.FirstName, e.LastName, e.EmployeeID FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL OR o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT YEAR(o.OrderDate) AS Year, MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY YEAR(o.OrderDate), MONTH(o.OrderDate);",
            "SELECT e.FirstName, e.LastName, e.BirthDate FROM employees e WHERE MONTH(e.BirthDate) = MONTH(CURDATE());",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT o.ShipCity, COUNT(o.OrderID) AS OrderCount FROM orders o GROUP BY o.ShipCity ORDER BY OrderCount DESC;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT o.ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipCountry;",
            "SELECT * FROM employees WHERE HireDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate = 'YYYY-MM-DD' GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName AS EmployeeFirstName, e.LastName AS EmployeeLastName, m.FirstName AS ManagerFirstName, m.LastName AS ManagerLastName FROM employees e LEFT JOIN employees m ON e.ReportsTo = m.EmployeeID;",
            "SELECT ShipCountry, COUNT(*) AS OrderCount FROM orders GROUP BY ShipCountry;",
            "SELECT ShipCity, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCity ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = 'YYYY-MM';",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS TotalOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT * FROM orders WHERE ShippedDate IS NOT NULL AND ShippedDate > RequiredDate;",
            "SELECT * FROM employees WHERE DATEDIFF(CURDATE(), HireDate) / 365 > 5;",
            "SELECT * FROM employees WHERE EmployeeID NOT IN (SELECT EmployeeID FROM orders);",
            "SELECT MAX(Salary) AS MaxSalary, MIN(Salary) AS MinSalary, AVG(Salary) AS AvgSalary FROM employees;",
            "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od GROUP BY od.ProductID ORDER BY TotalRevenue DESC LIMIT 3;",
            "SELECT * FROM [Order Details] WHERE Discount >= 0.20;",
            "SELECT YEAR(OrderDate) AS OrderYear, COUNT(*) AS OrderCount FROM orders GROUP BY OrderYear;",
            "SELECT e.EmployeeID, COUNT(DISTINCT o.CustomerID) AS DistinctCustomerCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY DistinctCustomerCount DESC LIMIT 1;",
            "SELECT ProductID, COUNT(*) AS OrderCount FROM [Order Details] GROUP BY ProductID HAVING COUNT(*) > 100;",
            "SELECT FirstName || ' ' || LastName AS FullName, Title FROM employees;",
            "SELECT EmployeeID, COUNT(*) AS NumberOfOrders FROM orders GROUP BY EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.Quantity) AS TotalQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT e1.*, e2.FirstName || ' ' || e2.LastName AS ManagerName FROM employees e1 JOIN employees e2 ON e1.ReportsTo = e2.EmployeeID WHERE e1.ReportsTo = ?;",
            "SELECT strftime('%Y', HireDate) AS HireYear, COUNT(*) AS NumberOfHires FROM employees GROUP BY HireYear;",
            "SELECT Title, AVG(Salary) AS AvgSalary FROM employees GROUP BY Title;",
            "SELECT * FROM employees WHERE strftime('%m', BirthDate) = strftime('%m', DATE('now'));",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE('now', '-1 year') GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT e.EmployeeID, AVG(JULIANDAY(ShippedDate) - JULIANDAY(OrderDate)) AS AvgShippingTime FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE ShippedDate IS NOT NULL GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, ShipCountry, COUNT(*) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, ShipCountry ORDER BY OrderCount DESC;",
            "SELECT e.EmployeeID, COUNT(*) AS OrdersOverLimit FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.Quantity > ? GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.Discount) AS TotalDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalDiscount DESC LIMIT 1;",
            "SELECT e.EmployeeID, COUNT(*) AS LateOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate > o.RequiredDate GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.Quantity) AS TotalProducts FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE strftime('%Y', o.OrderDate) = ? GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / (SELECT SUM(od2.UnitPrice * od2.Quantity * (1 - od2.Discount)) FROM [Order Details] od2 JOIN orders o2 ON od2.OrderID = o2.OrderID) * 100 AS PercentageContribution FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT EmployeeID, JULIANDAY(HireDate) - JULIANDAY(BirthDate) AS DaysDifference FROM employees;",
            "SELECT strftime('%Y', HireDate) AS HireYear, COUNT(*) AS NumberOfHires FROM employees GROUP BY HireYear;",
            "SELECT e.EmployeeID, SUM(o.Freight) as TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC;",
            "SELECT EmployeeID, COUNT(*) as OrderCount FROM orders WHERE OrderDate BETWEEN date('now', '-1 year') AND date('now') GROUP BY EmployeeID;",
            "SELECT EmployeeID, AVG(OrderCount) as AvgMonthlyOrders FROM (SELECT EmployeeID, COUNT(*) as OrderCount, strftime('%Y-%m', OrderDate) as OrderMonth FROM orders GROUP BY EmployeeID, OrderMonth) GROUP BY EmployeeID;",
            "SELECT EmployeeID, COUNT(*) as OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT City, COUNT(*) as EmployeeCount FROM employees GROUP BY City;",
            "SELECT e.EmployeeID, strftime('%Y-%m', o.OrderDate) as OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, OrderMonth;",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) as AvgOrderAmount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AvgOrderAmount DESC;",
            "SELECT Title, AVG(Salary) as AvgSalary FROM employees GROUP BY Title;",
            "SELECT e.EmployeeID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID HAVING COUNT(DISTINCT o.ShipCountry) > 1;",
            "SELECT e.EmployeeID, SUM(od.Quantity) as TotalQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) as ShippedOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL GROUP BY e.EmployeeID ORDER BY COUNT(o.OrderID) DESC;",
            "SELECT e.EmployeeID, o.ShipRegion, COUNT(o.OrderID) as OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, o.ShipRegion;",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) as AvgOrderAmount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT COUNT(od.ProductID) as TotalProductsOrdered FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE strftime('%Y-%m', o.OrderDate) = strftime('%Y-%m',date('now', 'start of month', '-1 month'));",
            "SELECT e.EmployeeID, o.OrderDate, COUNT(o.OrderID) as OrdersByDay FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, o.OrderDate;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, (julianday('now') - julianday(e.HireDate) ) as Tenure FROM employees e ORDER BY Tenure DESC;",
            "SELECT e.EmployeeID, COUNT(od.OrderID) as DiscountedOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [ORDER DETAILS] od ON o.OrderID = od.OrderID WHERE od.Discount > 0 GROUP BY e.EmployeeID ORDER BY COUNT(od.OrderID) DESC;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) - 1 GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY TotalSales DESC LIMIT 3;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS TotalOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgSalesPerOrder FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrdersInJan FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, MONTH(o.OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY e.EmployeeID, e.FirstName, e.LastName, OrderMonth;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, m.FirstName AS ManagerFirstName, m.LastName AS ManagerLastName FROM employees e LEFT JOIN employees m ON e.ReportsTo = m.EmployeeID;",
            "SELECT EmployeeID, FirstName, LastName FROM employees WHERE HireDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS TotalOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShipCountry = 'USA' GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.Quantity) AS TotalQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
            "SELECT QUARTER(o.OrderDate) AS OrderQuarter, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY OrderQuarter;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, o.ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName, o.ShipCountry;",
            "SELECT o.ShipCity, COUNT(o.OrderID) AS NumberOfOrders FROM orders o GROUP BY o.ShipCity ORDER BY NumberOfOrders DESC;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(od.Quantity) AS AvgProductsPerOrder FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
            "SELECT DATE_FORMAT(HireDate, '%Y-%m') AS Month, SUM(Salary) AS TotalMonthlySalary FROM employees GROUP BY DATE_FORMAT(HireDate, '%Y-%m');",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m') GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderID IS NULL;",
            "SELECT employees.City, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.City;",
            "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID GROUP BY [Order Details].ProductID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT employees.EmployeeID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, Month;",
            "SELECT * FROM employees WHERE HireDate > DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(DISTINCT orders.CustomerID) AS CustomerCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY CustomerCount DESC LIMIT 1;",
            "SELECT ShipCity, COUNT(orders.OrderID) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 3;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT orders.OrderID, SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT SUM(Salary) AS TotalSalaryExpense FROM employees;",
            "SELECT * FROM employees ORDER BY HireDate ASC LIMIT 1;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e WHERE MONTH(e.BirthDate) = MONTH(CURDATE());",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 10;",
            "SELECT e.EmployeeID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgShippingTime FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.Region, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.Region ORDER BY e.Region, TotalSales DESC;",
            "SELECT e.EmployeeID, DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, Month;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e WHERE DATEDIFF(CURDATE(), e.HireDate) > (10 * 365);",
            "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, o.ShipCountry, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY o.ShipCountry, e.EmployeeID ORDER BY o.ShipCountry, OrderCount DESC;",
            "WITH EmployeeProductRanks AS (SELECT e.EmployeeID, od.ProductID, SUM(od.Quantity) AS TotalQuantity, RANK() OVER (PARTITION BY e.EmployeeID ORDER BY SUM(od.Quantity) DESC) AS Rank FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, od.ProductID) SELECT EmployeeID, ProductID, TotalQuantity FROM EmployeeProductRanks WHERE Rank <= 5;",
            "SELECT e.EmployeeID, MAX(od.Discount) AS MaxDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY MaxDiscount DESC LIMIT 1;",
            "SELECT e.EmployeeID, DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY e.EmployeeID, Month;",
            "SELECT e.EmployeeID, (SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / e.Salary) AS SalesToSalaryRatio FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > (SELECT AVG(TotalSales) FROM (SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID) AS average_sales);",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AvgOrderValue DESC LIMIT 1;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 3;",
            "SELECT COUNT(*) AS NewHires FROM employees WHERE HireDate >= CURDATE() - INTERVAL 1 YEAR;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e WHERE e.ReportsTo = 5;",
            "SELECT COUNT(OrderID) AS OrdersInQ1 FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31';",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE EmployeeID = 3;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, FLOOR(DATEDIFF(CURDATE(), e.BirthDate) / 365) AS Age FROM employees e HAVING Age > 50;",
            "SELECT MAX(Salary) AS MaxSalary, MIN(Salary) AS MinSalary FROM employees;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e WHERE e.Title LIKE '%Sales%';",
            "SELECT e.EmployeeID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageShippingTime FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT Country, COUNT(EmployeeID) AS EmployeeCount FROM employees GROUP BY Country;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.ShipCountry = 'USA';",
            "SELECT EmployeeID, FirstName, LastName FROM employees ORDER BY BirthDate DESC LIMIT 1;",
            "SELECT e.EmployeeID, COUNT(e2.EmployeeID) AS ReportsCount FROM employees e LEFT JOIN employees e2 ON e.EmployeeID = e2.ReportsTo GROUP BY e.EmployeeID ORDER BY ReportsCount DESC;",
            "SELECT ShipRegion, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipRegion;",
            "SELECT ShipCity, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCity;",
            "SELECT * FROM employees WHERE HireDate < '2000-01-01';",
            "SELECT City, AVG(Salary) AS AverageSalary FROM employees GROUP BY City;",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "SELECT EmployeeID, COUNT(EmployeeID) AS ReporteesCount FROM employees WHERE ReportsTo = ? GROUP BY ReportsTo;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders;",
            "SELECT * FROM employees WHERE EmployeeID NOT IN (SELECT EmployeeID FROM orders);",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT Title, COUNT(*) AS TitleCount FROM employees GROUP BY Title ORDER BY TitleCount DESC LIMIT 1;",
            "SELECT MAX(HireDate) AS MostRecentHireDate FROM employees;",
            "SELECT AVG(Quantity) AS AverageOrderQuantity FROM [Order Details];",
            "SELECT Country, COUNT(*) AS EmployeeCount FROM employees GROUP BY Country;",
            "SELECT employees.EmployeeID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS OrderMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, OrderMonth;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales, COUNT(OrderID) AS OrderCount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY OrderMonth;",
            "SELECT * FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = ?;",
            "SELECT * FROM employees WHERE TIMESTAMPDIFF(YEAR, BirthDate, CURDATE()) > 50;",
            "SELECT e1.EmployeeID, e1.FirstName AS EmployeeFirstName, e1.LastName AS EmployeeLastName, e2.FirstName AS ManagerFirstName, e2.LastName AS ManagerLastName FROM employees e1 LEFT JOIN employees e2 ON e1.ReportsTo = e2.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT Title, COUNT(EmployeeID) AS Count FROM employees GROUP BY Title;",
            "SELECT EmployeeID, FirstName, LastName, Salary FROM employees ORDER BY Salary DESC LIMIT 5;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderID IS NULL;",
            "SELECT orders.OrderID, orders.OrderDate, orders.RequiredDate, orders.ShippedDate FROM orders WHERE orders.ShippedDate > orders.RequiredDate;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM(orders.Freight) AS TotalFreightCost FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgShippingDelay FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.ShipCountry = 'USA' GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT EmployeeID, FirstName, LastName FROM employees WHERE HireDate > '2020-01-01';",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, AVG([Order Details].Discount) AS AvgDiscount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AvgDiscount DESC;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS QuarterSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY employees.EmployeeID ORDER BY QuarterSales DESC LIMIT 1;",
            "SELECT employees.Region, employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.Region, employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID, YEAR(orders.OrderDate), MONTH(orders.OrderDate) ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgShippingTime FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY AvgShippingTime ASC LIMIT 3;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(DISTINCT orders.CustomerID) AS UniqueCustomers FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT SUM(Salary) AS TotalSalaryExpenditure FROM employees;",
            "SELECT COUNT(*) AS EmployeeCount FROM employees WHERE HireDate > '2020-01-01';",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS SalesMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS MonthlySales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, SalesMonth;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT Title, AVG(YEAR(CURRENT_DATE) - YEAR(BirthDate)) AS AverageAge FROM employees GROUP BY Title;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderID IS NULL;",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName, s.SalesMonth, s.MonthlySales FROM (SELECT employees.EmployeeID, DATE_FORMAT(orders.OrderDate,'%Y-%m') AS SalesMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS MonthlySales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, SalesMonth) s JOIN (SELECT EmployeeID, MAX(MonthlySales) AS MaxMonthlySales FROM (SELECT employees.EmployeeID, DATE_FORMAT(orders.OrderDate,'%Y-%m') AS SalesMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS MonthlySales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID, SalesMonth) sm GROUP BY EmployeeID) e ON s.EmployeeID = e.EmployeeID AND s.MonthlySales = e.MaxMonthlySales;",
            "WITH sales AS ( SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID) SELECT (SELECT TotalSales FROM sales ORDER BY TotalSales DESC LIMIT 1) - (SELECT TotalSales FROM sales ORDER BY TotalSales ASC LIMIT 1) AS SalesDifference;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgShippingTime FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY AvgShippingTime ASC LIMIT 1;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) * 100.0 / (SELECT COUNT(*) FROM orders) AS OrderPercentage FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID HAVING TotalSales > 50000;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM(Freight) AS TotalFreightCost FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "SELECT employees.Region, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.Region ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, AVG([Order Details].Discount) AS AverageDiscount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT Title, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Title;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) AND MONTH(o.OrderDate) = MONTH(CURDATE()) - 1 GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS LateOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate > o.RequiredDate GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, AVG(od.Discount) AS AvgDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AvgDiscount DESC;",
            "SELECT e.EmployeeID, COUNT(DISTINCT o.ShipCountry) AS CountryCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY CountryCount DESC;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS FreightCount, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY TotalFreight DESC;",
            "SELECT e.EmployeeID, e.City, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.City ORDER BY TotalSales DESC LIMIT 3;",
            "SELECT e.EmployeeID, COUNT(DISTINCT od.ProductID) AS UniqueProducts FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY UniqueProducts DESC;",
            "SELECT e.EmployeeID, YEAR(o.OrderDate) AS Year, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, Year(o.OrderDate) ORDER BY Year(o.OrderDate);",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID ORDER BY AvgOrderValue DESC LIMIT 1;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS NumberOfOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY e.EmployeeID;",
            "SELECT EmployeeID, FirstName, LastName FROM employees WHERE Salary > 50000;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderSize FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT EmployeeID, FirstName, LastName FROM employees WHERE YEAR(HireDate) = 2022;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS NumberOfOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE e.Title = 'Sales Representative' GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS NumberOfOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShipCountry = 'Germany' GROUP BY e.EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT EmployeeID, FirstName, LastName, Salary FROM employees WHERE Salary = (SELECT MAX(Salary) FROM employees);",
            "SELECT EmployeeID, FirstName, LastName, HireDate FROM employees WHERE HireDate = (SELECT MIN(HireDate) FROM employees);",
            "SELECT e.EmployeeID, AVG(od.Discount) AS AverageDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL;",
            "SELECT e.EmployeeID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageShippingTime FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderSize FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID HAVING AverageOrderSize > 1000;",
            "SELECT Title, COUNT(*) AS NumberOfEmployees FROM employees GROUP BY Title ORDER BY NumberOfEmployees DESC LIMIT 1;",
            "SELECT e.EmployeeID, o.OrderID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.RequiredDate BETWEEN '2023-01-01' AND '2023-12-31';",
            "SELECT e.EmployeeID, COUNT(DISTINCT od.ProductID) AS UniqueProducts FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.ShippedDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY e.EmployeeID;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT EmployeeID, OrderCount FROM (SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1) AS EmployeeOrders;",
            "SELECT AVG(TotalSales) AS AverageSales FROM (SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID) AS EmployeeSales;",
            "SELECT City, COUNT(*) AS NumEmployees FROM employees GROUP BY City ORDER BY NumEmployees DESC;",
            "SELECT Country, COUNT(*) AS NumEmployees FROM employees GROUP BY Country;",
            "SELECT employees.EmployeeID, AVG(OrderCount) AS AverageOrdersPerMonth FROM (SELECT employees.EmployeeID, COUNT(orders.OrderID) / 12 AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID) AS MonthlyOrders;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) - 1 GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AvgOrderValue DESC LIMIT 1;",
            "SELECT employees.EmployeeID, SUM(CASE WHEN MONTH(orders.OrderDate) = MONTH(CURDATE()) - 1 THEN [Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount) ELSE 0 END) AS LastMonthSales, SUM(CASE WHEN MONTH(orders.OrderDate) = MONTH(CURDATE()) - 2 THEN [Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount) ELSE 0 END) AS PreviousMonthSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderID IS NULL OR orders.OrderDate < CURDATE() - INTERVAL 6 MONTH;",
            "SELECT Region, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Region;",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName, DATEDIFF(CURDATE(), employees.HireDate) AS Tenure FROM employees ORDER BY Tenure DESC LIMIT 1;",
            "SELECT EmployeeID, (TotalSales - PreviousYearSales) AS SalesIncrease FROM (SELECT employees.EmployeeID, SUM(CASE WHEN YEAR(orders.OrderDate) = YEAR(CURDATE()) - 1 THEN [Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount) ELSE 0 END) AS TotalSales, SUM(CASE WHEN YEAR(orders.OrderDate) = YEAR(CURDATE()) - 2 THEN [Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount) ELSE 0 END) AS PreviousYearSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID) AS EmployeeSales;",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName, (SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / (SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) FROM [Order Details])) * 100 AS SalesPercentage FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;"
        ],
        "reviews": [
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query correctly calculates the total sales generated by each employee in the past year. It joins the tables correctly and applies the date filter appropriately.",
            "The query is correct. It accurately computes the total sales per employee and orders the results to find the employee with the highest sales, limiting the results to the top employee.",
            "The initial query mistakenly checks if 'e2.ReportsTo IS NOT NULL,' which would include all employees who report to someone. Corrected to include only specific manager IDs.",
            "This query correctly lists employees who have never made a sale, but added an OR condition to handle potential NULL values more robustly.",
            "Correct but changed DATE_TRUNC to a more compatible syntax for most SQL engines.",
            "Correct as per the provided schema and time format.",
            "Correct. The ROUND function correctly calculates the age.",
            "Correct usage of LEFT JOIN ensuring all employees are selected regardless of having orders.",
            "Correct as per business requirements and attached minus business detail.",
            "Correct SQL query to calculate average order size per employee.",
            "Correct as per SQL logic and business requirements.",
            "Correct SQL query for the task.",
            "Correct logic to find the average age ensuring proper date division.",
            "Correct logic for title distribution using GROUP BY.",
            "Correct in counting and grouping employees by each country.",
            "Correct as per the SQL logic to find employees reporting to each manager.",
            "Correct and complete as per details provided ensuring salary grouping.",
            "Correct to identify the employee with most overdue orders.",
            "Correct logic summing up freight cost handled by each employee.",
            "Correct granularity of hired employees monthly in the last year.",
            "Correct logic calculating sales contributions of employees for the past quarter.",
            "Incorrect, should use floating division instead of integer division. Correct query: SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesAmount, COUNT(orders.OrderID) / NULLIF(SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)), 0) AS OrderToSalesRatio FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID LEFT JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
            "Correct as per SQL logic ensuring grouped employees exceeding sales of $10,000.",
            "The query correctly computes the total sales for each employee on a monthly basis.",
            "The query correctly identifies the employee with the highest total sales.",
            "The query correctly lists employees hired after the year 2000 without any issues.",
            "The query correctly computes the average order value for each employee.",
            "The query correctly identifies the employee who processed the most orders in January 2023.",
            "The query correctly sums the total freight cost associated with each employee's orders.",
            "The query correctly lists all employees who have not placed any orders.",
            "The query correctly finds the employee with the highest average order value.",
            "The query has an error: there is no 'customers' table in the provided schema. Corrected query: SELECT employees.EmployeeID, COUNT(DISTINCT orders.CustomerID) AS RepeatCustomers FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY RepeatCustomers DESC LIMIT 1",
            "The query correctly computes the total number of orders placed by employees in each country.",
            "The query has a typo: 'INNERJOIN' should be 'INNER JOIN'. Corrected query: SELECT employees.EmployeeID, COUNT(orders.OrderID) AS SameDayShipped FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderDate = orders.ShippedDate GROUP BY employees.EmployeeID",
            "The query correctly finds the employee who has managed the most orders.",
            "The query correctly sums the total discount given by each employee.",
            "The query correctly lists the top 5 employees with the highest sales in the last quarter.",
            "The query correctly calculates the total number of products sold by each employee.",
            "The query correctly calculates the average number of orders per employee.",
            "The query correctly identifies the employee with the highest customer satisfaction.",
            "The query has an error: 'stddev_pop' should not have a single quote. Also 'Total})`' seems to be incorrect. Corrected query: SELECT employees.EmployeeID, STDDEV_POP(SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount))) AS SalesVariance FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
            "The query correctly computes the average time it takes for orders to be shipped after being placed by each employee.",
            "Correct - The query correctly calculates the total sales generated by each employee by joining the 'employees', 'orders', and '[Order Details]' tables and aggregating the sales.",
            "Correct - The query correctly identifies employees reporting to each manager by performing a self-join on the 'employees' table.",
            "Correct - The query correctly calculates the number of orders handled by each employee by joining the 'employees' and 'orders' tables and counting the orders.",
            "Correct - The query correctly counts the number of orders placed per month by using the DATE_FORMAT function to group by month.",
            "Correct - The query correctly counts the number of employees hired each year by grouping by the year of their hire date.",
            "Correct - The query properly calculates the average shipping cost of orders using the AVG function.",
            "Correct - The query correctly finds the employee with the highest average order value by ordering the result in descending order and limiting to 1.",
            "Correct - The query correctly counts the number of orders shipped within the required date.",
            "Correct - The query correctly identifies regions with the highest sales by joining 'orders' and '[Order Details]' tables and aggregating sales by region.",
            "Correct - The query accurately identifies the highest discounted order handled by each employee by using the MAX function.",
            "Correct - The query correctly calculates the average age of employees using the DATEDIFF and CURDATE functions.",
            "Correct - The query correctly calculates the total number of products handled by each employee by summing the quantities from the '[Order Details]' table.",
            "Correct - The query accurately calculates the total sales for each employee for the year 2022 by filtering the orders based on the year.",
            "Correct - The query correctly identifies the month with the highest number of orders by ordering the result in descending order and limiting to 1.",
            "Correct - The query accurately calculates the average discount applied to orders by each employee using the AVG function.",
            "Correct - The query correctly counts the number of employees living in each country by grouping by the 'Country' column.",
            "Correct - The query correctly identifies the employee with the most orders shipped on time by counting and grouping by employee.",
            "Correct - The query accurately calculates the total freight cost for orders handled by each employee by summing the 'Freight' column.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Changed to correct the join and make it more readable.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is logically correct, but to fetch sales data for the last quarter correctly, use 'INTERVAL 3 MONTH' correctly.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query likely refers to another table named 'products' for the product details. Ensure 'products' table exists and is correctly referenced.",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: SUM(discount should be adjusted)\n Correction: SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM(([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount)) AS TotalDiscount FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID JOIN employees ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Incorrect. The WHERE clause does not correctly filter for employees who have not placed any orders in the last month. Correct query: SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID AND MONTH(o.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) WHERE o.OrderID IS NULL;",
            "Correct.",
            "Incorrect. The original query does not correctly account for average salary across employees who have generated the sales criterion. Correct query: SELECT AVG(e.Salary) AS AvgSalary FROM employees e JOIN (SELECT EmployeeID FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY EmployeeID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 100000) e_with_sales ON e.EmployeeID = e_with_sales.EmployeeID;",
            "Correct.",
            "Incorrect. The WHERE clause should filter on distinct employees directly to avoid duplication. Correct query: SELECT e.EmployeeID, e.FirstName, e.LastName, DATEDIFF(CURRENT_DATE, e.HireDate) AS EmploymentDuration FROM employees e WHERE e.EmployeeID IN (SELECT DISTINCT o.EmployeeID FROM orders o WHERE o.OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) ORDER BY EmploymentDuration DESC LIMIT 1;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected the date range calculation to properly select the previous month.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct. The question was about the average order quantity, not customer satisfaction. Updated the question text.",
            "Correct.",
            "Correct.",
            "The question asks for the number of employees, not a list with their years. Updated SQL query to SELECT COUNT(*) instead of a list of employees.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The original query doesn't find the month with the highest sales for each employee. Corrected query uses window functions to achieve the desired result.",
            "Correct",
            "Correct",
            "Correct, corrected by removing LEFT JOIN with [Order Details] as it was unnecessary.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Added alias for orders table as 'o' to correct the error.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Correct query: SELECT e.* FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Correct query: SELECT e.EmployeeID, SUM(od.Discount) AS TotalDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalDiscount DESC LIMIT 1;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The original query is incorrect because it doesn't correctly aggregate employees reporting to each manager. Correct query: SELECT e.ReportsTo, m.FirstName AS ManagerFirstName, m.LastName AS ManagerLastName, COUNT(e.EmployeeID) AS EmployeeCount FROM employees e LEFT JOIN employees m ON e.ReportsTo = m.EmployeeID GROUP BY e.ReportsTo, m.FirstName, m.LastName;",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The original query misses the inner ordering needed for the correct maximum ordering per country. Corrected version: SELECT e.EmployeeID, o.ShipCountry, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY o.ShipCountry, e.EmployeeID ORDER BY o.ShipCountry, OrderCount DESC;",
            "The original query did not properly return the top 5 products per employee. Corrected version uses WITH clause for ranking properly. Corrected version: WITH EmployeeProductRanks AS (SELECT e.EmployeeID, od.ProductID, SUM(od.Quantity) AS TotalQuantity, RANK() OVER (PARTITION BY e.EmployeeID ORDER BY SUM(od.Quantity) DESC) AS Rank FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, od.ProductID) SELECT EmployeeID, ProductID, TotalQuantity FROM EmployeeProductRanks WHERE Rank <= 5;",
            "Correct.",
            "Correct.",
            "Correct.",
            "The subquery for company average is incorrect and needs to be adjusted. Corrected version: SELECT e.EmployeeID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > (SELECT AVG(TotalSales) FROM (SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID) AS average_sales);",
            "Correct as per the schema and metric definition.",
            "Correct as per the schema and metric definition.",
            "Correct as per the schema and date calculation.",
            "Correct as per the schema.",
            "Correct as per the date range specified in the question.",
            "Correct as per the freight cost computation.",
            "Correct as per the age calculation and filter condition.",
            "Correct as per the schema and MAX, MIN functions.",
            "Correct as per the discount calculation in query.",
            "Correct as per the average order value calculation and sorting.",
            "Correct as per the grouping by country for employee count.",
            "Correct as per the total revenue calculation for the USA.",
            "Correct as per the order by birth date for the youngest employee.",
            "Correct as per the join and grouping for counting reports.",
            "Correct as per the grouping by region for order count.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Rewrite to: SELECT EmployeeID, COUNT(EmployeeID) AS ReporteesCount FROM employees WHERE ReportsTo = ? GROUP BY EmployeeID. Since the initial query groups by ReportsTo instead of EmployeeID.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is correct and aligns with the given metric definition for 'Employee Sales'.",
            "The query is correct for displaying employees and their respective managers.",
            "The query calculates the average order value for each employee correctly.",
            "The query correctly identifies the employee who processed the highest number of orders.",
            "The query correctly calculates the distribution of employees' titles.",
            "The query accurately lists the top 5 employees with the highest salaries.",
            "The condition in the WHERE clause incorrectly checks if orders.EmployeeID IS NULL. It should check if orders.OrderID IS NULL instead. Corrected query: SELECT employees.EmployeeID, employees.FirstName, employees.LastName FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderID IS NULL;",
            "The query correctly identifies orders shipped after the required date.",
            "The query correctly calculates the total freight cost incurred by each employee.",
            "The query correctly calculates the average delay in shipping orders for each employee.",
            "The subquery in the JOIN is redundant. Instead, we can directly filter orders in the WHERE clause. Corrected query: SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.ShipCountry = 'USA' GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "The query correctly calculates the total quantity of products sold by each employee.",
            "The query correctly calculates the average order discount for each employee.",
            "The query correctly calculates the highest sales in the first quarter of 2022 for each employee.",
            "The query correctly compares total sales of employees by region.",
            "The problem requires finding the employee who processed the most orders within a single month. The corrected query groups by employee and month. Corrected query: SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID, YEAR(orders.OrderDate), MONTH(orders.OrderDate) ORDER BY TotalOrders DESC LIMIT 1;",
            "The query is correct and lists the top 3 employees with the fastest average shipping time.",
            "The query correctly determines the total number of unique customers served by each employee.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct, although 'employees.LeftJoin orders ON employees.EmployeeID' would be more explicit.",
            "Correct query.",
            "Fixed the query to identify the month with the highest sales for each employee. Original query would return the single highest sales month from the entire dataset.",
            "Rewritten using a common table expression (CTE) to clarify the difference between top-performing and least-performing employees.",
            "Corrected order. Original query was using ORDER BY AvgShippingTime LIMIT 1; needs to be ORDER BY AvgShippingTime ASC LIMIT 1 to get the fastest.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct, although the query's ambiguity might arise due to confusion caused by incorrect employee region summation.",
            "Correct query.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) AND MONTH(o.OrderDate) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect. Use the AVGOrderDate that checks whether ShippedDate is not null and then compare.",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS LateOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL AND o.ShippedDate > o.RequiredDate GROUP BY e.EmployeeID;",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "The question is ambiguous as it refers to last quarter. The SQL query should use DATE_TRUNC which is not ANSI SQL but can be used in databases like PostgreSQL.",
            "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_TRUNC('quarter', CURRENT_DATE) - INTERVAL '1 quarter' GROUP BY e.EmployeeID;",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The provided query does not fetch the correct information because it does not limit the salary fetch properly. Correct query: SELECT EmployeeID, FirstName, LastName, Salary FROM employees WHERE Salary = (SELECT MAX(Salary) FROM employees);",
            "Incorrect. The query should correctly limit the hire date to the earliest hire date. Correct query: SELECT EmployeeID, FirstName, LastName, HireDate FROM employees WHERE HireDate = (SELECT MIN(HireDate) FROM employees);",
            "Correct.",
            "Incorrect. The provided query should only include non-null 'ReportsTo'. Correct query: SELECT ReportsTo, COUNT(EmployeeID) AS NumberOfReports FROM employees WHERE ReportsTo IS NOT NULL GROUP BY ReportsTo;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Fix: SELECT EmployeeID, TotalSales FROM (SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1) AS EmployeeSales;",
            "Correct.",
            "Correct.",
            "Missing alias for 'AVG(TotalSales)'. Fix: SELECT AVG(TotalSales) AS AverageSales FROM (SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID) AS EmployeeSales;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Fix: Include a WHERE clause to filter only last month and the previous month orders. Also, use integrated datetime functions to compare correctly with the current date. Final: SELECT EmployeeID, SUM(CASE WHEN DATE_FORMAT(orders.OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE() - INTERVAL 1 MONTH, '%Y-%m') THEN ([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) ELSE 0 END) AS LastMonthSales, SUM(CASE WHEN DATE_FORMAT(orders.OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE() - INTERVAL 2 MONTH, '%Y-%m') THEN ([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) ELSE 0 END) AS PreviousMonthSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY EmployeeID;",
            "Correct",
            "Fix: The logic is incorrect for employees without any orders, it should select those employees. Correct: SELECT employees.EmployeeID, employees.LastName, employees.FirstName FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderID IS NULL OR orders.EmployeeID IS NOT NULL AND orders.OrderDate < CURDATE() - INTERVAL 6 MONTH GROUP BY employees.EmployeeID, employees.LastName, employees.FirstName;"
        ],
        "difficulty": [
            "easy",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "advanced"
        ]
    },
    "Supplier Analysis": {
        "questions": [
            "What is the average lead time for each supplier?",
            "What is the total sales for the company?",
            "Which suppliers provide products in the 'Beverages' category?",
            "What are the top 5 products with the highest unit price?",
            "Which supplier has the most discontinued products?",
            "What is the total freight cost for orders shipped to 'USA'?",
            "What are the total order quantities for each product?",
            "How many products do we have in stock per supplier?",
            "Which orders had a shipping date later than the required date?",
            "Which products have been ordered but not yet delivered?",
            "What is the total sales generated by each supplier?",
            "What is the contact information for suppliers in 'Germany'?",
            "Which customers have placed the most orders?",
            "Calculate the average discount applied per order.",
            "Which supplier provides the highest number of different products?",
            "What is the reorder level for each product?",
            "How many products have a stock level below their reorder level?",
            "What is the average freight cost per shipping method?",
            "Calculate the monthly total sales for the year 2021.",
            "Which suppliers have the highest and lowest lead times?",
            "What is the average supplier lead time for each supplier?",
            "Which supplier has the highest total sales revenue?",
            "How many products are supplied by each supplier?",
            "List the top 5 products with the highest unit price.",
            "Which product categories are most ordered?",
            "Calculate the total sales for each month.",
            "Identify suppliers who have delivered products late more than 5 times.",
            "What is the total quantity of products below their reorder level?",
            "Which city has the highest number of suppliers?",
            "How many orders were placed in the last year?",
            "Find the average order value for each supplier.",
            "Determine the most frequently ordered product.",
            "List products that need to be reordered.",
            "What is the total discount given for orders in the last month?",
            "How many unique customers placed orders?",
            "Which supplier provides the most different products?",
            "Find orders with a freight cost higher than $100.",
            "Calculate the total sales by country.",
            "Which products have not been discontinued?",
            "Identify the supplier with the fastest average lead time.",
            "What is the total sales revenue generated in the month of January 2023?",
            "Which supplier provides the product with the highest unit price?",
            "List the top 5 products by total sales revenue.",
            "Find the number of discontinued products provided by each supplier.",
            "Determine the total number of units ordered for each product.",
            "Identify the suppliers who have never shipped an order.",
            "Find the average discount provided per order.",
            "Which products need to be reordered soon?",
            "Calculate the total freight cost for all orders shipped to the USA.",
            "List the suppliers located in Canada who have more than 10,000 units in stock.",
            "Determine the products that have never been ordered.",
            "Find the suppliers with the fastest average lead time.",
            "What's the total sales revenue for each country?",
            "Identify the orders that were shipped later than the required date.",
            "Determine the total quantity of products ordered per month.",
            "Which suppliers supplied products that contributed to more than $50,000 in total sales?",
            "Find the top 3 cities with the highest number of orders placed.",
            "Calculate the average unit price of products per category.",
            "Identify the products with a stock level below the reorder level and have ongoing orders.",
            "Which product has the highest unit price?",
            "Which supplier provides the most products?",
            "What is the total sales revenue for the last month?",
            "List all discontinued products and their suppliers.",
            "What is the total number of units in stock for each product?",
            "Which supplier has the longest average lead time?",
            "What is the total number of orders placed each month?",
            "Which products are currently on order?",
            "What is the average discount applied to products?",
            "Which city has the most suppliers?",
            "List suppliers who have never had a discontinued product.",
            "What is the total revenue from orders in each country?",
            "Which product categories have the most units in stock?",
            "List the top 5 most frequently ordered products.",
            "What is the monthly trend of orders placed over the last year?",
            "Which product has generated the highest total sales revenue?",
            "How many products have a reorder level above 20?",
            "What is the average number of units ordered per order?",
            "List suppliers located in the USA.",
            "List all suppliers based in Germany.",
            "Find the total number of products supplied by each supplier.",
            "Find the average unit price of products supplied by each supplier.",
            "Identify suppliers who have supplied products that are discontinued.",
            "Find the total revenue generated from all orders.",
            "List the orders that were not shipped within the required date.",
            "Calculate the average lead time for all suppliers.",
            "Find the suppliers who delivered orders within 7 days on average.",
            "Identify the top 5 suppliers based on the total sales revenue.",
            "List the products that have more units on order than units in stock.",
            "Find the order with the highest discount applied.",
            "List the suppliers who have never supplied a discontinued product.",
            "Find the orders with the highest freight cost.",
            "Find the product with the highest total sales revenue.",
            "Identify suppliers who have supplied products to more than 3 different countries.",
            "List the count of products in each category, supplied by supplier.",
            "Calculate the total sales revenue generated each month.",
            "Find the average quantity of products ordered per order.",
            "List the suppliers based on their regions and the number of products they supply.",
            "What is the average supplier lead time for deliveries?",
            "Which product has generated the highest total sales?",
            "How many orders were placed in the last month?",
            "Who are the top 5 suppliers based on total sales?",
            "What is the total number of units shipped for each product category in the last year?",
            "Which suppliers have never been rated by customers?",
            "What is the average discount applied to orders per supplier?",
            "What is the total freight cost for each shipping method?",
            "How many products are currently out of stock?",
            "What is the average order value for each customer?",
            "Which customers have placed the most orders in the last quarter?",
            "What is the average delivery time (in days) for each supplier?",
            "Which products are close to or below their reorder level?",
            "What is the month-over-month trend in total sales over the last six months?",
            "Which regions have the highest order frequency?",
            "What is the total revenue generated from products supplied by 'Supplier A'?",
            "How many unique products does each supplier provide?",
            "What is the lead time deviation among suppliers?",
            "Find the top 3 most discontinued products.",
            "What is the cumulative sales amount for each month in the last year?",
            "What are the names and contact details of all suppliers?",
            "Which supplier provides the highest number of products?",
            "List the products that have a reorder level lower than 20.",
            "Which countries have the most suppliers?",
            "What are the average unit prices of products supplied by each supplier?",
            "Which suppliers have discontinued products?",
            "Find the total number of units on order for each product category.",
            "Calculate the average lead time for each supplier in delivered products.",
            "What is the total sales generated from orders in the last three months?",
            "List the top 5 products with the highest total sales revenue.",
            "What is the total number of orders shipped within the last year?",
            "Identify the suppliers who have shipped orders with an average lead time of less than a week.",
            "Find the supplier based in 'New York' with the highest total orders.",
            "Which suppliers have orders that were shipped later than the required date?",
            "List products that have never been ordered.",
            "What is the freight cost for each shipping method?",
            "Find the suppliers with the largest number of products in stock.",
            "Calculate the total discount given on all orders in the last month.",
            "What is the region that generates the most order revenue?",
            "Determine the average number of products per order.",
            "Which supplier has the highest average lead time?",
            "What are the top 5 products by total sales revenue?",
            "How many orders were placed in each month of 2022?",
            "What is the total quantity of products ordered from each supplier?",
            "Who are the suppliers for discontinued products?",
            "What are the total sales for each product in the current year?",
            "Which orders had a shipping delay longer than 7 days?",
            "What is the most frequently ordered product?",
            "Which supplier has supplied the maximum number of products?",
            "What are the average, minimum, and maximum freight costs by shipping country?",
            "Which product category has generated the highest revenue?",
            "How many products have stock levels below their reorder level?",
            "What are the top 5 suppliers based on total revenue generated?",
            "How many orders were placed by each customer last year?",
            "What is the total discount amount given for each product?",
            "How many products have never been ordered?",
            "Which cities have the most suppliers?",
            "What is the average unit price of products supplied by each supplier?",
            "Which suppliers have never delivered an order late?",
            "How many products have been ordered in quantities higher than 50 in a single order?",
            "What is the total revenue generated by each product?",
            "Which suppliers have delivered products within the shortest average lead time?",
            "Which products have the highest total sales?",
            "What is the total sales revenue for each supplier?",
            "How many orders have been placed each month in the current year?",
            "How many units of each product are currently in stock?",
            "Which suppliers provide products that have never been ordered?",
            "What is the average discount applied to orders?",
            "List products that are discontinued.",
            "What is the total freight cost for all orders?",
            "Find the most frequently ordered product.",
            "Determine the supplier with the highest number of units on order.",
            "List all orders that were shipped late (after the required date).",
            "Calculate the total number of units ordered for each product category.",
            "What is the total revenue for orders shipped to each country?",
            "Identify the supplier companies located in 'London'.",
            "Calculate the total number of products ordered per supplier.",
            "Which supplier supplies the highest number of products, and how many products do they supply?",
            "Calculate the total quantity of units sold for each product for the current year.",
            "List all orders with a freight cost greater than $100.",
            "Identify the top 5 suppliers based on the total order value they supplied.",
            "Find the orders that had the highest discount applied.",
            "Determine the number of discontinued products.",
            "Find the supplier who has supplied products with the highest unit price.",
            "Calculate the total revenue generated for each supplier.",
            "What are the names of all the products that have never been ordered?",
            "Identify suppliers whose average product unit price is above the overall average unit price.",
            "Calculate the monthly total order value for each supplier.",
            "What is the average discount given on all products?",
            "Identify the products that have been ordered but not yet shipped.",
            "Which products have a reorder level higher than their current stock?",
            "List the orders that were shipped within 10 days of the order date.",
            "Determine the total freight cost for each shipping method.",
            "Identify the most frequently ordered product.",
            "What is the total revenue generated from all orders?",
            "How many products are currently discontinued?",
            "What is the total number of units in stock for each supplier?",
            "What is the average discount applied to all orders?",
            "What is the average unit price of products per supplier?",
            "List all orders that have not been shipped yet.",
            "Which supplier delivered the most orders in the last year?",
            "Calculate the total freight cost for each shipping method.",
            "Which suppliers are located in the same city as the customers?",
            "Identify all orders where the total discount exceeds $100.",
            "Find the supplier with the maximum number of units on order.",
            "List the top 5 products by sales revenue.",
            "What is the average order processing time (OrderDate to ShippedDate)?",
            "How many suppliers have supplied more than 100 units of any product?",
            "Calculate the number of orders placed in each month.",
            "Determine the number of unique products ordered each month.",
            "How many suppliers are there in each country?",
            "What is the total number of products supplied by each supplier?",
            "Which products have been discontinued?",
            "What are the details of orders that have not been shipped yet?",
            "Who are the top 5 suppliers based on the number of products supplied?",
            "How many units are currently in stock for each product?",
            "What is the total sales for each month?",
            "Which supplier provides the most expensive products on average?",
            "List all orders where the total amount of discount is greater than 10%",
            "What is the total number of orders placed by each customer?",
            "List the names and contact information of all suppliers in the 'California' region.",
            "What is the total freight cost incurred for all orders?",
            "Which products need to be reordered based on the 'ReorderLevel' field?",
            "What is the average discount given on orders by each supplier?",
            "Find the suppliers who have never been involved in an order.",
            "What is the total number of products ordered in each category?",
            "Calculate the total revenue generated by each product.",
            "Identify the top 3 regions with the highest number of orders.",
            "What is the average lead time for each supplier in delivering products?",
            "Calculate the total sales revenue generated in the last month.",
            "List the top 5 suppliers based on the number of products they supply.",
            "What is the total number of products ordered for each supplier?",
            "Calculate the total freight cost per country.",
            "What is the average discount given on orders?",
            "Identify the supplier with the most units in stock.",
            "Which customer placed the most orders last year?",
            "What is the total sales revenue for each product category?",
            "List the cities with the highest number of suppliers.",
            "Count the total number of orders shipped in the current year.",
            "Determine the most popular product based on the quantity ordered.",
            "Calculate the reorder level for each product.",
            "Which region has the highest total sales?",
            "What is the total quantity of products ordered in each month of the current year?",
            "Identify suppliers that supply more than 10 products.",
            "Calculate the difference between the required date and shipped date for orders, and list the orders with late deliveries.",
            "What is the total sales revenue for the past month?",
            "Which suppliers are located in Germany?",
            "List all products that are currently discontinued.",
            "Which supplier has the highest number of products in stock?",
            "What is the total number of units ordered for each product?",
            "Calculate the total freight cost for orders shipped to France.",
            "Find the top 5 highest priced products.",
            "What is the average discount given across all orders?",
            "Which supplier has the fastest average lead time?",
            "List the total sales per supplier.",
            "What is the most ordered product in terms of quantity?",
            "Find the total revenue generated from orders placed in the year 2022.",
            "How many distinct products have been ordered?",
            "List the suppliers who have not shipped any orders in the past 6 months.",
            "What is the average reorder level for all products?",
            "Identify the regions where there are more than 10 suppliers.",
            "What is the total quantity of products on order?",
            "Find the products that have never been ordered.",
            "What is the total sales value generated last month?",
            "Which suppliers supply products that are currently out of stock?",
            "What is the total freight cost incurred per month?",
            "List the top 5 suppliers by total sales value.",
            "How many orders have been placed for each product?",
            "Which supplier has the highest number of discontinued products?",
            "List the products that have never been ordered.",
            "What is the total discount given per order?",
            "Which country has the highest number of suppliers?",
            "What is the total quantity of products ordered in the last quarter?",
            "Who are the top 3 suppliers based on average lead time?",
            "What is the total sales value generated by each product category?",
            "List the orders that have not been shipped within the required date.",
            "How many suppliers are there in each region?",
            "List the contact details of suppliers who have supplied products in the last month.",
            "What is the average time taken by each supplier to deliver products?",
            "What is the total revenue generated for each month?",
            "Which suppliers provide products that have the highest number of units in stock?",
            "Which products from each supplier have not been discontinued?",
            "What is the average discount applied per order?",
            "Get a list of suppliers and the total number of orders placed for their products.",
            "What is the total freight cost incurred for all shipments?",
            "Which supplier has the highest lead time on deliveries?",
            "How many distinct products does each supplier supply?",
            "Retrieve the contact information for all suppliers located in a specific region.",
            "What is the average unit price of the products supplied by each supplier?",
            "Find the top 5 products by total sales.",
            "List the suppliers along with the number of products they supply that are currently on order.",
            "Which orders had a delivery time greater than the average lead time?",
            "What is the total sales amount generated by each supplier?",
            "Get the city-wise distribution of suppliers.",
            "Which orders were shipped after their required date?",
            "What is the total number of discontinued products supplied by each supplier?",
            "What is the total sales revenue generated last month?",
            "How many discontinued products does each supplier have?",
            "List the top 5 suppliers based on the total number of units supplied.",
            "How many products have a reorder level below their current stock level?",
            "Who are the suppliers for orders placed in the first quarter of this year?",
            "What are the total freight costs incurred for each supplier?",
            "Calculate the average discount given across all orders.",
            "Which supplier has the highest average product rating?",
            "What is the total revenue generated from each product category?",
            "Find the supplier with the longest average lead time.",
            "What are the top 10 products based on total sales revenue?",
            "Calculate the order frequency for each supplier in the past year.",
            "Determine the percentage of discontinued products for each supplier.",
            "Identify the regions with the highest number of active suppliers.",
            "Calculate the total sales revenue for each supplier this year.",
            "Find the products that have not been ordered in the last six months.",
            "List all supplier names and their respective contact names.",
            "Find the total number of suppliers in each city.",
            "Retrieve the top 5 most expensive products and their suppliers.",
            "Compute the average time taken by each supplier to deliver products.",
            "Determine the total sales revenue for the current month.",
            "Identify suppliers who have supplied more than 1000 units of any product.",
            "Fetch all orders that have not been shipped yet along with the supplier details.",
            "List the total units ordered for each product that is not discontinued.",
            "Find the orders placed in the last 30 days and their total freight cost.",
            "Calculate the total sales revenue generated per supplier.",
            "Retrieve products with a stock level below the reorder level and their suppliers.",
            "Get the details of suppliers who have provided products with the highest discount.",
            "Find the products with the highest and lowest unit prices and their suppliers.",
            "Generate a list of suppliers based on the country and count the number of products they supply.",
            "Determine the average freight cost per order.",
            "List all discontinued products and their remaining units in stock.",
            "Identify suppliers that have delivered products to more than 3 different countries.",
            "Calculate the total revenue generated from orders that received discounts.",
            "Find out the average unit price of products supplied by each supplier.",
            "Retrieve recent orders (within 7 days) and display their shipping details.",
            "What are the names and contact titles of all suppliers?",
            "Which products have units in stock greater than 100?",
            "List all orders placed after January 1, 2023.",
            "Find the name and contact details of suppliers from Germany.",
            "What are the total sales for each product?",
            "Which supplier delivered the most products in terms of quantity?",
            "What is the highest unit price for a product and which supplier provides it?",
            "Identify suppliers who have not supplied any products.",
            "Which products have been ordered with the highest quantities across all orders?",
            "List orders that were shipped more than 10 days after the order date.",
            "Find the total number of products on order which are not yet shipped.",
            "Who are the top 5 suppliers based on the total sales revenue of their products?",
            "Get the monthly total sales in 2023.",
            "Find the most recent order for each customer.",
            "What is the number of orders per supplier?",
            "What is the average discount given on each product?",
            "Which suppliers have delivered products with the shortest and longest lead times?",
            "What are the total sales for each month?",
            "Which supplier has the highest total sales?",
            "What is the total revenue generated per product?",
            "Which products are discontinued and which suppliers provide them?",
            "Which supplier supplies the most number of products?",
            "Which orders have the highest discounts applied?",
            "What are the total units on order for each product?",
            "What is the average discount given on the products per order?",
            "What are the total units in stock for each supplier's products?",
            "Which product has the highest reorder level?",
            "What are the names and contact details of suppliers from the USA?",
            "How many products have been ordered but not yet shipped?",
            "What is the total freight cost for all orders placed in the last year?",
            "What are the top 5 cities in terms of total sales?",
            "Which products have consistently been ordered in quantities higher than their reorder level?",
            "What is the average lead time of each supplier in delivering products?",
            "What is the total revenue generated from orders in the last month?",
            "Which product has the highest total sales?",
            "How many units of each product are in stock?",
            "Which supplier in the USA has the highest total sales?",
            "What is the average order discount?",
            "How many orders were shipped last month?",
            "What is the total number of orders for each product?",
            "How many products are discontinued?",
            "Which orders were not shipped by their required date?",
            "What is the average quantity ordered per product?",
            "What is the total freight cost for shipped orders?",
            "Which supplier has the highest number of units on order?",
            "What is the most common shipping method?",
            "How many products have a reorder level below 10?",
            "Who are the suppliers in Germany?",
            "Which suppliers have shipped orders within a week?",
            "How many units of each product are currently on order?",
            "What is the average unit price of products from each supplier?",
            "What is the total revenue generated by each supplier?",
            "How many products have a reorder level above 30?",
            "List all orders that were shipped late.",
            "What is the average supplier lead time?",
            "Find the total number of units ordered from each supplier.",
            "List all products with at least 100 units in stock.",
            "What is the total freight cost for orders shipped to the USA?",
            "What are the total sales by month?",
            "Which suppliers have products with more than 5 units on order?",
            "What's the average discount applied to products?",
            "Identify orders with a total value above $500.",
            "What are the names of all suppliers who are located in Germany?",
            "What are the names and contact details of suppliers who supply the product 'Chocolade'?",
            "How many units of 'Chocolade' are currently in stock?",
            "List the total sales for the month of January 2023.",
            "Which suppliers have delivered products with an average lead time of more than 10 days?",
            "What is the total number of units on order for each product?",
            "Calculate the average unit price of products supplied by each supplier.",
            "Which product has the highest total sales revenue?",
            "Identify suppliers with the largest number of different products supplied.",
            "Determine the total freight cost for all orders shipped in 2022.",
            "Find all orders where the discount applied was more than 20%.",
            "What is the average discount given per product category?",
            "Which suppliers are from the 'Eastern' region?",
            "Find the total number of orders placed in the first quarter of 2023.",
            "What is the total sales revenue generated by each supplier in 2022?",
            "Determine the top 5 customers based on total purchases.",
            "Identify the orders which have not been shipped yet.",
            "What is the average freight cost per order for each shipping method?",
            "Which products are currently discontinued?",
            "Which supplier has the highest average unit price for their products?",
            "How many orders have not been shipped yet?",
            "What are the top 5 cities by number of suppliers?",
            "What is the total revenue for each product category?",
            "What are the average freight costs per order?",
            "Which supplier has the shortest average lead time?",
            "Identify suppliers that have not supplied any products in the last year.",
            "What is the average discount on orders?",
            "Which products have stock levels below their reorder level?",
            "How many different products are offered by each supplier?",
            "Which customers have placed orders in the last month?",
            "What is the total revenue generated last month?",
            "List the top 10 products by total sales revenue.",
            "What is the average quantity ordered per order?",
            "What is the total sales revenue for each month?",
            "What is the total number of units on order?",
            "Which product has the lowest unit price?",
            "Which supplier supplies the highest number of different products?",
            "What is the average unit price for products from each supplier?",
            "How many orders have been placed each month?",
            "What is the average order value for each month?",
            "What is the total discount given on all orders?",
            "Which product has the highest number of units in stock?",
            "Which product has the lowest number of units in stock?"
        ],
        "sql_queries": [
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.SupplierID;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details];",
            "SELECT suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN categories ON products.CategoryID = categories.CategoryID WHERE categories.CategoryName = 'Beverages';",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1 GROUP BY suppliers.CompanyName ORDER BY COUNT(products.ProductID) DESC LIMIT 1;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCountry = 'USA';",
            "SELECT ProductID, SUM(Quantity) AS TotalOrderQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT suppliers.CompanyName, SUM(products.UnitsInStock) AS TotalUnitsInStock FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT OrderID FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT ProductID FROM products WHERE UnitsOnOrder > 0 AND ProductID NOT IN (SELECT ProductID FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.ShippedDate IS NOT NULL);",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT CompanyName, ContactName, Phone, Fax FROM suppliers WHERE Country = 'Germany';",
            "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID ORDER BY TotalOrders DESC;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS ProductCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT ProductName, ReorderLevel FROM products;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ShipVia, AVG(Freight) AS AverageFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS MonthlyTotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2021 GROUP BY Month;",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName ORDER BY LeadTime DESC LIMIT 1; SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName ORDER BY LeadTime ASC LIMIT 1;",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID;",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT CategoryID, COUNT(OrderID) AS OrderCount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY CategoryID ORDER BY OrderCount DESC;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT products.SupplierID, COUNT(orders.OrderID) AS LateDeliveries FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.ShippedDate > orders.RequiredDate GROUP BY products.SupplierID HAVING LateDeliveries > 5;",
            "SELECT SUM(UnitsInStock) FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT City, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY City ORDER BY SupplierCount DESC;",
            "SELECT COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURRENT_DATE) - 1;",
            "SELECT products.SupplierID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID;",
            "SELECT ProductName, SUM(Quantity) AS TotalQuantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductName ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE) - 1 AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, COUNT(DISTINCT products.ProductID) AS ProductVariety FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY ProductVariety DESC;",
            "SELECT OrderID, Freight FROM orders WHERE Freight > 100;",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry;",
            "SELECT ProductName FROM products WHERE Discontinued = 0;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS FastestLeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.SupplierID ORDER BY FastestLeadTime ASC LIMIT 1;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = 1 AND YEAR(orders.OrderDate) = 2023;",
            "SELECT suppliers.CompanyName, products.ProductName, products.UnitPrice FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID ORDER BY products.UnitPrice DESC LIMIT 1;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT suppliers.CompanyName, COUNT(*) AS DiscontinuedProducts FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE products.Discontinued = 1 GROUP BY suppliers.CompanyName;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalOrdered FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName;",
            "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN (SELECT DISTINCT products.SupplierID FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID) AS temp ON suppliers.SupplierID = temp.SupplierID WHERE temp.SupplierID IS NULL;",
            "SELECT AVG([Order Details].Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT products.ProductName FROM products WHERE products.UnitsInStock <= products.ReorderLevel;",
            "SELECT SUM(orders.Freight) AS TotalFreight FROM orders WHERE orders.ShipCountry = 'USA';",
            "SELECT suppliers.CompanyName, SUM(products.UnitsInStock) AS TotalUnitsInStock FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE suppliers.Country = 'Canada' GROUP BY suppliers.CompanyName HAVING TotalUnitsInStock > 10000;",
            "SELECT products.ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IS NULL;",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgLeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN (SELECT orders.OrderID, orders.ShippedDate, orders.OrderDate, [Order Details].ProductID FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID) AS temp ON products.ProductID = temp.ProductID GROUP BY suppliers.CompanyName ORDER BY AvgLeadTime ASC;",
            "SELECT orders.ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.ShipCountry;",
            "SELECT orders.OrderID, orders.RequiredDate, orders.ShippedDate FROM orders WHERE orders.ShippedDate > orders.RequiredDate;",
            "SELECT YEAR(orders.OrderDate) AS Year, MONTH(orders.OrderDate) AS Month, SUM([Order Details].Quantity) AS TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY YEAR(orders.OrderDate), MONTH(orders.OrderDate);",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName HAVING TotalSales > 50000;",
            "SELECT ShipCity, COUNT(*) AS NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 3;",
            "SELECT categories.CategoryName, AVG(products.UnitPrice) AS AvgUnitPrice FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName;",
            "SELECT products.ProductName FROM products WHERE products.UnitsInStock < products.ReorderLevel AND products.UnitsOnOrder > 0;",
            "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, COUNT(products.ProductID) AS ProductCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT products.ProductID, products.ProductName, suppliers.CompanyName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE products.Discontinued = 1;",
            "SELECT ProductID, ProductName, UnitsInStock FROM products;",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgLeadTime FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.SupplierID ORDER BY AvgLeadTime DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY Month;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder > 0;",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT City, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY City ORDER BY SupplierCount DESC LIMIT 1;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName FROM suppliers WHERE suppliers.SupplierID NOT IN (SELECT SupplierID FROM products WHERE Discontinued = 1);",
            "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry;",
            "SELECT CategoryID, SUM(UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY CategoryID ORDER BY TotalUnitsInStock DESC;",
            "SELECT [Order Details].ProductID, products.ProductName, COUNT([Order Details].OrderID) AS OrderCount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY [Order Details].ProductID ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Month ORDER BY Month;",
            "SELECT [Order Details].ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY [Order Details].ProductID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT COUNT(ProductID) FROM products WHERE ReorderLevel > 20;",
            "SELECT AVG(Quantity) AS AvgQuantityPerOrder FROM [Order Details];",
            "SELECT SupplierID, CompanyName FROM suppliers WHERE Country = 'USA';",
            "SELECT * FROM suppliers WHERE Country = 'Germany';",
            "SELECT SupplierID, COUNT(ProductID) AS TotalProducts FROM products GROUP BY SupplierID;",
            "SELECT SupplierID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY SupplierID;",
            "SELECT s.SupplierID, s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od;",
            "SELECT o.OrderID, o.OrderDate, o.RequiredDate, o.ShippedDate FROM orders o WHERE o.ShippedDate > o.RequiredDate;",
            "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageLeadTime FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID GROUP BY p.SupplierID;",
            "SELECT p.SupplierID, s.CompanyName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON o.OrderID = od.OrderID GROUP BY p.SupplierID, s.CompanyName HAVING AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) <= 7;",
            "SELECT p.SupplierID, s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID, s.CompanyName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ProductName FROM products WHERE UnitsOnOrder > UnitsInStock;",
            "SELECT od.OrderID, MAX(od.Discount) FROM [Order Details] od;",
            "SELECT s.SupplierID, s.CompanyName FROM suppliers s LEFT JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued IS NULL OR p.Discontinued = 0;",
            "SELECT OrderID FROM orders ORDER BY Freight DESC LIMIT 1;",
            "SELECT od.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY od.ProductID, p.ProductName ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT s.SupplierID, s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN orders o ON p.ProductID = o.ProductID GROUP BY s.SupplierID, s.CompanyName HAVING COUNT(DISTINCT o.ShipCountry) > 3;",
            "SELECT s.SupplierID, s.CompanyName, p.CategoryID, COUNT(p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.CompanyName, p.CategoryID;",
            "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY Month;",
            "SELECT AVG(Quantity) AS AverageQuantity FROM [Order Details];",
            "SELECT s.Region, COUNT(p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.Region;",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID;",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT COUNT(*) AS TotalOrders FROM orders WHERE OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity) AS TotalUnitsShipped FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.ShippedDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY categories.CategoryName;",
            "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN orders ON suppliers.SupplierID = orders.SupplierID WHERE orders.SupplierID IS NULL;",
            "SELECT suppliers.CompanyName, AVG([Order Details].Discount) AS AverageDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipVia;",
            "SELECT COUNT(*) AS OutOfStockProducts FROM products WHERE UnitsInStock = 0;",
            "SELECT orders.CustomerID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.CustomerID;",
            "SELECT orders.CustomerID, COUNT(*) AS TotalOrders FROM orders WHERE OrderDate > DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY orders.CustomerID ORDER BY TotalOrders DESC;",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageDeliveryTime FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate > DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY Month;",
            "SELECT ShipRegion, COUNT(*) AS OrderFrequency FROM orders GROUP BY ShipRegion ORDER BY OrderFrequency DESC;",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE suppliers.CompanyName = 'Supplier A' GROUP BY suppliers.CompanyName;",
            "SELECT suppliers.CompanyName, COUNT(DISTINCT products.ProductID) AS UniqueProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT suppliers.CompanyName, STDDEV(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LeadTimeDeviation FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT products.ProductName, COUNT(*) AS DiscontinueCount FROM products WHERE Discontinued = 1 GROUP BY products.ProductName ORDER BY DiscontinueCount DESC LIMIT 3;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS CumulativeSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Month;",
            "SELECT SupplierID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage FROM suppliers;",
            "SELECT suppliers.SupplierID, CompanyName, COUNT(products.ProductID) AS ProductCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY ProductCount DESC;",
            "SELECT ProductID, ProductName, UnitsInStock, ReorderLevel FROM products WHERE ReorderLevel < 20;",
            "SELECT Country, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY Country ORDER BY SupplierCount DESC;",
            "SELECT suppliers.SupplierID, CompanyName, AVG(products.UnitPrice) AS AverageUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID, CompanyName;",
            "SELECT suppliers.SupplierID, CompanyName, products.ProductName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1;",
            "SELECT CategoryID, SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products GROUP BY CategoryID;",
            "SELECT suppliers.SupplierID, CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.SupplierID, CompanyName;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_ADD(CURDATE(), INTERVAL -3 MONTH);",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate >= DATE_ADD(CURDATE(), INTERVAL -1 YEAR);",
            "SELECT suppliers.SupplierID, CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.SupplierID, CompanyName HAVING AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) < 7;",
            "SELECT suppliers.SupplierID, CompanyName, COUNT(orders.OrderID) AS TotalOrders FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE suppliers.City = 'New York' GROUP BY suppliers.SupplierID, CompanyName ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT suppliers.SupplierID, CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.ShippedDate > orders.RequiredDate;",
            "SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT ProductID FROM [Order Details]);",
            "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT suppliers.SupplierID, CompanyName, SUM(products.UnitsInStock) AS TotalUnitsInStock FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID, CompanyName ORDER BY TotalUnitsInStock DESC;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice * [Order Details].Discount) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_ADD(CURDATE(), INTERVAL -1 MONTH);",
            "SELECT ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipRegion ORDER BY TotalRevenue DESC;",
            "SELECT AVG(ProductCount) AS AverageProductsPerOrder FROM (SELECT OrderID, COUNT(ProductID) AS ProductCount FROM [Order Details] GROUP BY OrderID) AS ProductCounts;",
            "SELECT s.CompanyName, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageLeadTime FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY s.CompanyName ORDER BY AverageLeadTime DESC LIMIT 1;",
            "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrdersCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY Month ORDER BY Month;",
            "SELECT s.CompanyName, SUM(od.Quantity) AS TotalQuantity FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.CompanyName;",
            "SELECT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1;",
            "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY p.ProductName;",
            "SELECT o.OrderID, DATEDIFF(o.ShippedDate, o.OrderDate) AS ShippingDelay FROM orders o WHERE DATEDIFF(o.ShippedDate, o.OrderDate) > 7;",
            "SELECT p.ProductName, COUNT(od.ProductID) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT s.CompanyName, COUNT(p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.CompanyName ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT o.ShipCountry, AVG(o.Freight) AS AverageFreight, MIN(o.Freight) AS MinimumFreight, MAX(o.Freight) AS MaximumFreight FROM orders o GROUP BY o.ShipCountry;",
            "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM categories c JOIN products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryName ORDER BY TotalRevenue DESC LIMIT 1;",
            "SELECT p.ProductName, p.UnitsInStock FROM products p WHERE p.UnitsInStock < p.ReorderLevel;",
            "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.CompanyName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT o.CustomerID, COUNT(o.OrderID) AS OrdersCount FROM orders o WHERE YEAR(o.OrderDate) = YEAR(CURDATE())-1 GROUP BY o.CustomerID;",
            "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.ProductID IS NULL;",
            "SELECT s.City, COUNT(s.SupplierID) AS SupplierCount FROM suppliers s GROUP BY s.City ORDER BY SupplierCount DESC;",
            "SELECT s.CompanyName, AVG(p.UnitPrice) AS AverageUnitPrice FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.CompanyName;",
            "SELECT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID LEFT JOIN orders o ON od.OrderID = o.OrderID WHERE o.ShippedDate <= o.RequiredDate GROUP BY s.CompanyName;",
            "SELECT p.ProductName, COUNT(od.Quantity) AS HighQuantityOrders FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Quantity > 50 GROUP BY p.ProductName;",
            "SELECT p.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgLeadTime FROM products p INNER JOIN orders o ON p.ProductID = o.ProductID GROUP BY p.SupplierID ORDER BY AvgLeadTime ASC LIMIT 5;",
            "SELECT p.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY TotalRevenue DESC;",
            "SELECT p.SupplierID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.SupplierID;",
            "SELECT EXTRACT(YEAR_MONTH FROM OrderDate) AS OrderMonth, COUNT(OrderID) AS OrderCount FROM orders WHERE EXTRACT(YEAR FROM OrderDate) = YEAR(CURDATE()) GROUP BY OrderMonth;",
            "SELECT ProductID, ProductName, UnitsInStock FROM products;",
            "SELECT s.SupplierID, s.CompanyName FROM suppliers s WHERE s.SupplierID NOT IN (SELECT DISTINCT p.SupplierID FROM products p INNER JOIN [Order Details] od ON p.ProductID = od.ProductID);",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders;",
            "SELECT p.ProductID, p.ProductName, COUNT(od.OrderID) AS OrderCount FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT p.SupplierID, SUM(p.UnitsOnOrder) AS TotalUnitsOnOrder FROM products p GROUP BY p.SupplierID ORDER BY TotalUnitsOnOrder DESC LIMIT 1;",
            "SELECT * FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT c.CategoryID, SUM(od.Quantity) AS TotalUnitsOrdered FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID INNER JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
            "SELECT ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCountry;",
            "SELECT SupplierID, CompanyName FROM suppliers WHERE City = 'London';",
            "SELECT p.SupplierID, SUM(od.Quantity) AS TotalUnitsOrdered FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.SupplierID;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, COUNT(products.ProductID) AS NumberOfProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY NumberOfProducts DESC LIMIT 1;",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalQuantitySold FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY products.ProductID;",
            "SELECT * FROM orders WHERE Freight > 100;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID ORDER BY TotalOrderValue DESC LIMIT 5;",
            "SELECT * FROM [Order Details] WHERE Discount = (SELECT MAX(Discount) FROM [Order Details]);",
            "SELECT COUNT(*) AS DiscontinuedProducts FROM products WHERE Discontinued = 1;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, products.ProductName, MAX(products.UnitPrice) AS MaxUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID ORDER BY MaxUnitPrice DESC LIMIT 1;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT ProductID FROM [Order Details]);",
            "SELECT suppliers.SupplierID, suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID HAVING AVG(products.UnitPrice) > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.SupplierID, Month;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT * FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE ShippedDate IS NULL;",
            "SELECT ProductID, ProductName FROM products WHERE ReorderLevel > UnitsInStock;",
            "SELECT * FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 10;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT products.ProductID, products.ProductName, COUNT([Order Details].OrderID) AS OrderCount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od;",
            "SELECT COUNT(*) FROM products WHERE Discontinued = 1;",
            "SELECT s.CompanyName, SUM(p.UnitsInStock) AS TotalStock FROM products p INNER JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.CompanyName;",
            "SELECT AVG(Discount) FROM [Order Details];",
            "SELECT s.CompanyName, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p INNER JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.CompanyName;",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "SELECT s.CompanyName, COUNT(*) AS OrderCount FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID INNER JOIN products p ON od.ProductID = p.ProductID INNER JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY s.CompanyName ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipVia;",
            "SELECT DISTINCT s.SupplierID, s.CompanyName FROM suppliers s INNER JOIN orders o ON s.City = o.ShipCity;",
            "SELECT o.OrderID, SUM(od.Discount * od.UnitPrice * od.Quantity) AS TotalDiscount FROM [Order Details] od INNER JOIN orders o ON od.OrderID = o.OrderID GROUP BY o.OrderID HAVING TotalDiscount > 100;",
            "SELECT s.CompanyName, MAX(p.UnitsOnOrder) AS MaxUnitsOnOrder FROM products p INNER JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.CompanyName ORDER BY MaxUnitsOnOrder DESC LIMIT 1;",
            "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageProcessingTime FROM orders WHERE ShippedDate IS NOT NULL;",
            "SELECT s.CompanyName, COUNT(*) AS ProductCount FROM products p INNER JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.CompanyName HAVING ProductCount > 100;",
            "SELECT MONTH(OrderDate) AS Month, COUNT(*) AS OrderCount FROM orders GROUP BY Month;",
            "SELECT MONTH(o.OrderDate) AS Month, COUNT(DISTINCT od.ProductID) AS UniqueProducts FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY Month;",
            "SELECT Country, COUNT(*) as TotalSuppliers FROM suppliers GROUP BY Country;",
            "SELECT suppliers.CompanyName, COUNT(products.ProductID) as TotalProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID, suppliers.CompanyName;",
            "SELECT * FROM products WHERE Discontinued = 1;",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "SELECT suppliers.CompanyName, COUNT(products.ProductID) as TotalProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName ORDER BY TotalProducts DESC LIMIT 5;",
            "SELECT ProductName, UnitsInStock FROM products;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') as Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Month;",
            "SELECT suppliers.CompanyName, AVG(products.UnitPrice) as AvgUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID, suppliers.CompanyName ORDER BY AvgUnitPrice DESC LIMIT 1;",
            "SELECT orders.OrderID, SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) as TotalDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY orders.OrderID HAVING TotalDiscount > (SUM([Order Details].UnitPrice * [Order Details].Quantity) * 0.10);",
            "SELECT orders.CustomerID, COUNT(*) as TotalOrders FROM orders GROUP BY orders.CustomerID;",
            "SELECT CompanyName, ContactName, Phone, Fax FROM suppliers WHERE Region = 'California';",
            "SELECT SUM(Freight) as TotalFreightCost FROM orders;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT suppliers.CompanyName, AVG([Order Details].Discount) as AvgDiscount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName;",
            "SELECT CompanyName FROM suppliers WHERE SupplierID NOT IN (SELECT SupplierID FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID);",
            "SELECT CategoryID, COUNT(DISTINCT products.ProductID) as TotalProducts FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY CategoryID;",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT ShipRegion as Region, COUNT(*) as TotalOrders FROM orders GROUP BY ShipRegion ORDER BY TotalOrders DESC LIMIT 3;",
            "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS SupplierLeadTime FROM products p JOIN orders o ON p.ProductID = o.OrderID GROUP BY p.SupplierID;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT s.CompanyName, COUNT(p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.CompanyName ORDER BY ProductCount DESC LIMIT 5;",
            "SELECT s.CompanyName, SUM(od.Quantity) AS TotalProductsOrdered FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.CompanyName;",
            "SELECT o.ShipCountry, SUM(o.Freight) AS TotalFreightCost FROM orders o GROUP BY o.ShipCountry;",
            "SELECT AVG(od.Discount) AS AverageDiscount FROM [Order Details] od;",
            "SELECT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID ORDER BY p.UnitsInStock DESC LIMIT 1;",
            "SELECT CustomerID, COUNT(OrderID) AS OrdersCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY CustomerID ORDER BY OrdersCount DESC LIMIT 1;",
            "SELECT c.CategoryID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
            "SELECT City, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY City ORDER BY SupplierCount DESC;",
            "SELECT COUNT(OrderID) AS OrdersCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE());",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantityOrdered FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalQuantityOrdered DESC LIMIT 1;",
            "SELECT ProductName, ReorderLevel FROM products;",
            "SELECT ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipRegion ORDER BY TotalSales DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.Quantity) AS TotalQuantityOrdered FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY Month;",
            "SELECT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.CompanyName HAVING COUNT(p.ProductID) > 10;",
            "SELECT o.OrderID, DATEDIFF(o.ShippedDate, o.RequiredDate) AS DaysLate FROM orders o WHERE DATEDIFF(o.ShippedDate, o.RequiredDate) > 0;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT * FROM suppliers WHERE Country = 'Germany';",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT suppliers.CompanyName, SUM(products.UnitsInStock) AS TotalUnits FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName ORDER BY TotalUnits DESC LIMIT 1;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShipCountry = 'France';",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN orders ON products.ProductID = orders.ProductID GROUP BY suppliers.CompanyName ORDER BY AverageLeadTime ASC LIMIT 1;",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantityOrdered FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalQuantityOrdered DESC LIMIT 1;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31';",
            "SELECT COUNT(DISTINCT ProductID) AS DistinctProducts FROM [Order Details];",
            "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN (SELECT OrderID, ShipVia FROM orders WHERE ShippedDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH)) recent_orders ON suppliers.SupplierID = recent_orders.ShipVia WHERE recent_orders.OrderID IS NULL;",
            "SELECT AVG(ReorderLevel) AS AverageReorderLevel FROM products;",
            "SELECT Region, COUNT(*) AS SupplierCount FROM suppliers GROUP BY Region HAVING COUNT(*) > 10;",
            "SELECT SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products;",
            "SELECT ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IS NULL;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT suppliers.SupplierID, suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.UnitsInStock = 0;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM(orders.Freight) AS TotalFreight FROM orders GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m');",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT products.ProductID, COUNT([Order Details].OrderID) AS OrderCount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, COUNT(products.ProductID) AS DiscontinuedCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1 GROUP BY suppliers.SupplierID ORDER BY DiscontinuedCount DESC LIMIT 1;",
            "SELECT products.ProductID, products.ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IS NULL;",
            "SELECT [Order Details].OrderID, SUM([Order Details].Discount) AS TotalDiscount FROM [Order Details] GROUP BY [Order Details].OrderID;",
            "SELECT suppliers.Country, COUNT(suppliers.SupplierID) AS SupplierCount FROM suppliers GROUP BY suppliers.Country ORDER BY SupplierCount DESC LIMIT 1;",
            "SELECT SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 QUARTER);",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.SupplierID ORDER BY AverageLeadTime ASC LIMIT 3;",
            "SELECT products.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.CategoryID;",
            "SELECT orders.OrderID, orders.RequiredDate, orders.ShippedDate FROM orders WHERE orders.ShippedDate IS NULL OR orders.ShippedDate > orders.RequiredDate;",
            "SELECT suppliers.Region, COUNT(suppliers.SupplierID) AS SupplierCount FROM suppliers GROUP BY suppliers.Region;",
            "SELECT suppliers.ContactName, suppliers.ContactTitle, suppliers.Phone, suppliers.Fax FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY suppliers.SupplierID;",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM products INNER JOIN orders ON products.ProductID = [Order Details].ProductID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY products.SupplierID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT suppliers.CompanyName, products.ProductName, products.UnitsInStock FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID ORDER BY products.UnitsInStock DESC;",
            "SELECT suppliers.CompanyName, products.ProductName FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 0;",
            "SELECT products.ProductName, AVG([Order Details].Discount) AS AverageDiscount FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
            "SELECT suppliers.CompanyName, COUNT(orders.OrderID) AS TotalOrders FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID INNER JOIN [Order Details] ON products.ProductID = [Order Details].ProductID INNER JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders;",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LeadTime FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID INNER JOIN [Order Details] ON products.ProductID = [Order Details].ProductID INNER JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName ORDER BY LeadTime DESC LIMIT 1;",
            "SELECT suppliers.CompanyName, COUNT(DISTINCT products.ProductID) AS DistinctProducts FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT SupplierID, CompanyName, ContactName, Phone, City, Region FROM suppliers WHERE Region = 'specified_region';",
            "SELECT suppliers.CompanyName, AVG(products.UnitPrice) AS AverageUnitPrice FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS ProductsOnOrder FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.UnitsOnOrder > 0 GROUP BY suppliers.CompanyName;",
            "SELECT orders.OrderID, orders.OrderDate, orders.ShippedDate FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATEDIFF(orders.ShippedDate, orders.OrderDate) > (SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) FROM orders);",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID INNER JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName;",
            "SELECT City, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY City;",
            "SELECT OrderID, OrderDate, ShippedDate, RequiredDate FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS DiscontinuedProducts FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1 GROUP BY suppliers.CompanyName;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)",
            "SELECT s.CompanyName, COUNT(*) AS DiscontinuedProducts FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1 GROUP BY s.CompanyName",
            "SELECT s.CompanyName, SUM(p.UnitsInStock) AS TotalUnits FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.CompanyName ORDER BY TotalUnits DESC LIMIT 5",
            "SELECT * FROM products WHERE UnitsInStock <= ReorderLevel",
            "SELECT DISTINCT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
            "SELECT s.CompanyName, SUM(o.Freight) AS TotalFreight FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY s.CompanyName",
            "SELECT AVG(od.Discount) AS AvgDiscount FROM [Order Details] od",
            "SELECT s.CompanyName FROM suppliers s ORDER BY (SELECT AVG(r.Rating) FROM reviews r JOIN products p ON r.ProductID = p.ProductID WHERE p.SupplierID = s.SupplierID) DESC LIMIT 1",
            "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM categories c JOIN products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryName",
            "SELECT s.CompanyName, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgLeadTime FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY s.CompanyName ORDER BY AvgLeadTime DESC LIMIT 1",
            "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalRevenue DESC LIMIT 10",
            "SELECT s.CompanyName, COUNT(o.OrderID) AS OrderFrequency FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY s.CompanyName",
            "SELECT s.CompanyName, COUNT(CASE WHEN p.Discontinued = 1 THEN 1 ELSE NULL END) * 100 / COUNT(p.ProductID) AS DiscontinuedPercentage FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.CompanyName",
            "SELECT s.Region, COUNT(DISTINCT s.SupplierID) AS ActiveSuppliers FROM suppliers s WHERE s.SupplierID IN (SELECT DISTINCT SupplierID FROM products WHERE Discontinued = 0) GROUP BY s.Region ORDER BY ActiveSuppliers DESC",
            "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY s.CompanyName",
            "SELECT p.ProductID, p.ProductName FROM products p WHERE p.ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate > DATE_SUB(CURDATE(), INTERVAL 6 MONTH))",
            "SELECT CompanyName, ContactName FROM suppliers;",
            "SELECT City, COUNT(SupplierID) FROM suppliers GROUP BY City;",
            "SELECT p.ProductName, p.UnitPrice, s.CompanyName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID ORDER BY p.UnitPrice DESC LIMIT 5;",
            "SELECT s.CompanyName, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageLeadTime FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN orders o ON p.ProductID = o.OrderID GROUP BY s.SupplierID;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE MONTH(o.OrderDate) = MONTH(CURRENT_DATE) AND YEAR(o.OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT s.CompanyName, SUM(p.UnitsInStock + p.UnitsOnOrder) AS TotalUnits FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID HAVING TotalUnits > 1000;",
            "SELECT o.OrderID, s.CompanyName, s.ContactName FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE o.ShippedDate IS NULL;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalOrderedUnits FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.Discontinued = 0 GROUP BY p.ProductID;",
            "SELECT o.OrderID, o.OrderDate, o.ShippedDate, o.Freight FROM orders o WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);",
            "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID;",
            "SELECT p.ProductName, p.UnitsInStock, s.CompanyName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE p.UnitsInStock < p.ReorderLevel;",
            "SELECT DISTINCT s.SupplierID, s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount = (SELECT MAX(Discount) FROM [Order Details]);",
            "SELECT p.ProductName, p.UnitPrice, s.CompanyName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE p.UnitPrice IN ( SELECT MAX(UnitPrice) FROM products UNION SELECT MIN(UnitPrice) FROM products );",
            "SELECT s.Country, COUNT(p.ProductID) AS ProductsCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.Country;",
            "SELECT AVG(o.Freight) AS AvgFreight FROM orders o;",
            "SELECT p.ProductName, p.UnitsInStock FROM products p WHERE p.Discontinued = 1;",
            "SELECT s.CompanyName, COUNT(DISTINCT o.ShipCountry) AS Countries FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY s.SupplierID HAVING Countries > 3;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS DiscountedRevenue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE od.Discount > 0;",
            "SELECT s.CompanyName, AVG(p.UnitPrice) AS AverageUnitPrice FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID;",
            "SELECT o.OrderID, o.OrderDate, o.ShippedDate, o.ShipName, o.ShipAddress, o.ShipCity, o.ShipCountry FROM orders o WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);",
            "SELECT CompanyName, ContactTitle FROM suppliers;",
            "SELECT ProductName FROM products WHERE UnitsInStock > 100;",
            "SELECT * FROM orders WHERE OrderDate > '2023-01-01';",
            "SELECT CompanyName, ContactName, ContactTitle, Phone FROM suppliers WHERE Country = 'Germany';",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
            "SELECT suppliers.CompanyName, SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT suppliers.CompanyName, products.ProductName, MAX(products.UnitPrice) AS MaxUnitPrice FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID ORDER BY MaxUnitPrice DESC LIMIT 1;",
            "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.SupplierID IS NULL;",
            "SELECT ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductName ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT OrderID FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) > 10;",
            "SELECT SUM([Order Details].Quantity) AS TotalProductsOnOrder FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.UnitsOnOrder > 0 AND orders.ShippedDate IS NULL;",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT EXTRACT(MONTH FROM orders.OrderDate) AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS MonthlyTotalSales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE EXTRACT(YEAR FROM orders.OrderDate) = 2023 GROUP BY EXTRACT(MONTH FROM orders.OrderDate);",
            "SELECT CustomerID, MAX(OrderDate) AS MostRecentOrder FROM orders GROUP BY CustomerID;",
            "SELECT suppliers.CompanyName, COUNT(orders.OrderID) AS TotalOrders FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName;",
            "SELECT ProductName, AVG(Discount) AS AverageDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductName;",
            "SELECT products.SupplierID, MIN(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS ShortestLeadTime, MAX(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LongestLeadTime FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON products.ProductID = [Order Details].ProductID GROUP BY products.SupplierID;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m');",
            "SELECT products.SupplierID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON products.ProductID = [Order Details].ProductID GROUP BY products.SupplierID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] JOIN products ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT products.ProductName, suppliers.CompanyName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE products.Discontinued = 1;",
            "SELECT suppliers.SupplierID, COUNT(products.ProductID) AS ProductCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT orders.OrderID, MAX([Order Details].Discount) AS MaxDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID ORDER BY MaxDiscount DESC LIMIT 1;",
            "SELECT products.ProductID, SUM(products.UnitsOnOrder) AS TotalUnitsOnOrder FROM products GROUP BY products.ProductID;",
            "SELECT orders.OrderID, AVG([Order Details].Discount) AS AvgDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID;",
            "SELECT products.SupplierID, SUM(products.UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY products.SupplierID;",
            "SELECT ProductID FROM products ORDER BY ReorderLevel DESC LIMIT 1;",
            "SELECT CompanyName, ContactName, ContactTitle, Phone, Fax FROM suppliers WHERE Country = 'USA';",
            "SELECT orders.OrderID FROM orders WHERE orders.ShippedDate IS NULL;",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE orders.OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT ShipCity, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCity ORDER BY TotalSales DESC LIMIT 5;",
            "SELECT products.ProductID FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID HAVING SUM([Order Details].Quantity) > AVG(products.ReorderLevel);",
            "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgLeadTime FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY p.SupplierID;",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT p.ProductName, p.UnitsInStock FROM products p;",
            "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE s.Country = 'USA' GROUP BY s.CompanyName ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT AVG(od.Discount) AS AvgDiscount FROM [Order Details] od;",
            "SELECT COUNT(*) AS OrdersShippedLastMonth FROM orders o WHERE o.ShippedDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT p.ProductName, COUNT(od.OrderID) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT COUNT(*) AS DiscontinuedCount FROM products p WHERE p.Discontinued = 1;",
            "SELECT o.OrderID FROM orders o WHERE o.ShippedDate > o.RequiredDate;",
            "SELECT p.ProductName, AVG(od.Quantity) AS AvgQuantityOrdered FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT SUM(o.Freight) AS TotalFreightCost FROM orders o WHERE o.ShippedDate IS NOT NULL;",
            "SELECT s.CompanyName, SUM(p.UnitsOnOrder) AS TotalUnitsOnOrder FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.CompanyName ORDER BY TotalUnitsOnOrder DESC LIMIT 1;",
            "SELECT ShipVia, COUNT(ShipVia) AS MethodCount FROM orders GROUP BY ShipVia ORDER BY MethodCount DESC LIMIT 1;",
            "SELECT COUNT(*) AS LowReorderLevelProducts FROM products p WHERE p.ReorderLevel < 10;",
            "SELECT CompanyName FROM suppliers WHERE Country = 'Germany';",
            "SELECT s.CompanyName FROM suppliers s INNER JOIN products p ON s.SupplierID = p.SupplierID INNER JOIN orders o ON o.ProductID = p.ProductID WHERE DATEDIFF(o.ShippedDate, o.OrderDate) <= 7;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT s.CompanyName, AVG(p.UnitPrice) AS AveragePrice FROM products p INNER JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.CompanyName;",
            "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM suppliers s INNER JOIN products p ON s.SupplierID = p.SupplierID INNER JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.CompanyName;",
            "SELECT ProductName FROM products WHERE ReorderLevel > 30;",
            "SELECT o.OrderID FROM orders o WHERE o.ShippedDate > o.RequiredDate;",
            "SELECT s.CompanyName, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageLeadTime FROM suppliers s INNER JOIN products p ON s.SupplierID = p.SupplierID INNER JOIN orders o ON p.ProductID = o.ProductID GROUP BY s.CompanyName;",
            "SELECT s.CompanyName, SUM(od.Quantity) AS TotalUnits FROM suppliers s INNER JOIN products p ON s.SupplierID = p.SupplierID INNER JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.CompanyName;",
            "SELECT ProductName FROM products WHERE UnitsInStock >= 100;",
            "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShipCountry = 'USA';",
            "SELECT YEAR(o.OrderDate) AS Year, MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY YEAR(o.OrderDate), MONTH(o.OrderDate) ORDER BY Year, Month;",
            "SELECT s.CompanyName FROM suppliers s INNER JOIN products p ON s.SupplierID = p.SupplierID WHERE p.UnitsOnOrder > 5;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalValue FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 500;",
            "SELECT CompanyName FROM suppliers WHERE Country = 'Germany';",
            "SELECT suppliers.CompanyName, suppliers.ContactName, suppliers.ContactTitle, suppliers.Phone FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.ProductName = 'Chocolade';",
            "SELECT UnitsInStock FROM products WHERE ProductName = 'Chocolade';",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = 1 AND YEAR(orders.OrderDate) = 2023;",
            "SELECT suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON orders.OrderID = [Order Details].OrderID GROUP BY suppliers.CompanyName HAVING AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) > 10;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT suppliers.CompanyName, AVG(products.UnitPrice) AS AverageUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
            "SELECT ProductName FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName ORDER BY SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) DESC LIMIT 1;",
            "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS NumberOfProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName ORDER BY NumberOfProducts DESC;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE YEAR(ShippedDate) = 2022;",
            "SELECT * FROM [Order Details] WHERE Discount > 0.20;",
            "SELECT categories.CategoryName, AVG([Order Details].Discount) AS AvgDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName;",
            "SELECT CompanyName FROM suppliers WHERE Region = 'Eastern';",
            "SELECT COUNT(OrderID) AS NumberOfOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31';",
            "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY suppliers.CompanyName;",
            "SELECT orders.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalPurchases FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.CustomerID ORDER BY TotalPurchases DESC LIMIT 5;",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "SELECT ShipVia, AVG(Freight) AS AvgFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT suppliers.CompanyName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName ORDER BY AVG(products.UnitPrice) DESC LIMIT 1;",
            "SELECT COUNT(*) AS UnshippedOrdersCount FROM orders WHERE ShippedDate IS NULL;",
            "SELECT City, COUNT(*) AS SupplierCount FROM suppliers GROUP BY City ORDER BY SupplierCount DESC LIMIT 5;",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName;",
            "SELECT AVG(Freight) AS AverageFreightCost FROM orders;",
            "SELECT suppliers.CompanyName FROM suppliers INNER JOIN (SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgLeadTime FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.SupplierID ORDER BY AvgLeadTime ASC LIMIT 1) AS shortest_lead_time ON suppliers.SupplierID = shortest_lead_time.SupplierID;",
            "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN (SELECT products.SupplierID, COUNT(*) AS ProductCount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY products.SupplierID) AS recent_products ON suppliers.SupplierID = recent_products.SupplierID WHERE recent_products.ProductCount IS NULL;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductCount FROM products GROUP BY SupplierID;",
            "SELECT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalRevenue DESC LIMIT 10;",
            "SELECT AVG(Quantity) AS AverageQuantity FROM [Order Details];",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS OrderMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY OrderMonth;",
            "SELECT SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products;",
            "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice ASC LIMIT 1;",
            "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT SupplierID, AVG(UnitPrice) AS AvgUnitPrice FROM products GROUP BY SupplierID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS OrderCount FROM orders GROUP BY OrderMonth;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS OrderMonth, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY OrderMonth;",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM [Order Details];",
            "SELECT ProductID, ProductName, UnitsInStock FROM products ORDER BY UnitsInStock DESC LIMIT 1;",
            "SELECT ProductID, ProductName, UnitsInStock FROM products ORDER BY UnitsInStock ASC LIMIT 1;"
        ],
        "reviews": [
            "Corrected query to join with [Order Details] table to correctly relate products and orders.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Corrected query to properly check the products that have been ordered but not delivered.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Query is correct. No changes needed.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The alias 'Month' cannot be used in the GROUP BY clause. Corrected query: SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m');",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The formula for the total discount should be SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount), not just SUM(Discount). Corrected query: SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE) - 1 AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE);",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Corrected the subquery to select the proper columns for uniqueness in the LEFT JOIN.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Corrected the query to sum the UnitsInStock per supplier before applying the HAVING clause.",
            "The query is correct.",
            "Corrected the subquery on the JOIN clause to ensure proper mapping of OrderID.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Initial query was incorrect since it was joining `products` with `orders` using an incorrect key. Corrected it to include the `[Order Details]` table for proper joins.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The query references the orders table directly for the ProductID column, but it should reference [Order Details] to join with the products table: SELECT p.SupplierID, s.CompanyName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON o.OrderID = od.OrderID GROUP BY p.SupplierID, s.CompanyName HAVING AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) <= 7;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The LEFT JOIN condition is not sufficient to identify suppliers who have never supplied a discontinued product only. The corrected query should be: SELECT s.SupplierID, s.CompanyName FROM suppliers s LEFT JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.CompanyName HAVING SUM(p.Discontinued) = 0 OR COUNT(p.ProductID) = 0;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query corrected. Missing JOIN with 'orders' table: Corrected query - SELECT categories.CategoryName, SUM([Order Details].Quantity) AS TotalUnitsShipped FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.ShippedDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY categories.CategoryName;",
            "Query corrected. The 'orders' table does not have 'SupplierID' field: Corrected query - SELECT suppliers.CompanyName FROM suppliers LEFT JOIN products ON suppliers.SupplierID = products.SupplierID LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IS NULL;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query corrected. Correct joins were not used: Corrected query - SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageDeliveryTime FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query corrected. Correct joins were not used: Corrected query - SELECT suppliers.CompanyName, STDDEV(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LeadTimeDeviation FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName;",
            "Corrected query to count different rows instead of Discontinued value: Corrected query - SELECT products.ProductName, COUNT(*) AS DiscontinueCount FROM products WHERE Discontinued = 1 GROUP BY products.ProductName ORDER BY DiscontinueCount DESC LIMIT 3;",
            "Correct.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query. Correction needed: products.ProductID should join with [Order Details].ProductID.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query. Correction needed: products.ProductID should join with [Order Details].ProductID.",
            "Correct query.",
            "Incorrect query. Correction needed: products.ProductID should join with [Order Details].ProductID.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Corrected query to ensure proper join with [Order Details] for accurate Supplier Lead Time calculation.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Corrected query to join with orders for proper current year filter based on OrderDate.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Corrected query to properly join the tables and check for delivery dates.",
            "Query is correct.",
            "Correct.",
            "Incorrect. OrderID is not present in the products table. The query should join orders table with [Order Details] table and INNER JOIN is not required here.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Typo errors in the SELECT statement. Corrected query provided.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "If multiple orders have the same max discount, the query will return all. To ensure only one row, add LIMIT 1.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "The DATE_FORMAT function is correct, but the alias for the date part is missing. Add an alias for the date part like 'DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month'.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The original query is missing the correct join condition and would not work. Corrected query provided.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Fixed: SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) is not logically compared to 0.10. Instead, using SUM([Order Details].UnitPrice * [Order Details].Quantity) * 0.10 for comparison.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Fixed: The subquery was incorrect; added JOIN [Order Details] to correctly check against orders.",
            "Fixed: COUNT(*) to COUNT(DISTINCT products.ProductID) to ensure total unique products.",
            "Correct.",
            "Fixed: Changed orders.Region to ShipRegion and corrected the GROUP BY and select clause.",
            "Incorrect. The join condition for products and orders is wrong. Correct query: 'SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS SupplierLeadTime FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY p.SupplierID;'",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The categories table is missing from the schema, this query can't be validated. Assuming categories table and foreign key exists.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The ship region may not have total sales if orders don't have an entry in [Order Details]. Modify to LEFT JOIN just in case: 'SELECT o.ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o LEFT JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipRegion ORDER BY TotalSales DESC;'",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Revised the grouping to use products.ProductName instead of simply ProductName to ensure the correct grouping.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Corrected the query to join on products.ProductID instead of orders.OrderID and ensure proper ordering by AverageLeadTime in ascending order.",
            "Query is correct.",
            "Revised the grouping to use products.ProductName instead of simply ProductName to ensure the correct grouping.",
            "Query is correct.",
            "Query is correct.",
            "Corrected the subquery to ensure proper joins and filtering of suppliers who have not shipped any orders in the past 6 months.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Corrected query to calculate the total discount for each order correctly by summing the discount directly for the whole order.",
            "Query is correct.",
            "Query is correct.",
            "Corrected query to use [Order Details] to properly join products and orders for calculating the average lead time.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Incorrect. The SQL join condition is incorrect as there is no SupplierID in the orders table. The correct query is: SELECT suppliers.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID INNER JOIN [Order Details] ON products.ProductID = [Order Details].ProductID INNER JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.SupplierID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The join between orders and products is incorrect. The correct query is: SELECT suppliers.CompanyName, COUNT(orders.OrderID) AS TotalOrders FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID INNER JOIN [Order Details] ON products.ProductID = [Order Details].ProductID INNER JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The join between orders and products should use the [Order Details] table. The correct query is: SELECT orders.OrderID, orders.OrderDate, orders.ShippedDate FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATEDIFF(orders.ShippedDate, orders.OrderDate) > (SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) FROM orders);",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is correct.",
            "Correctness: The original query compared 'UnitsInStock' with 'ReorderLevel' incorrectly. The corrected query uses '<=' instead of '>'.",
            "Correctness: The original query missed the necessary joins and had an incorrect join condition. The corrected query includes correct joins.",
            "Correctness: The original query incorrectly assumes a direct relationship between 'orders' and 'suppliers'. The corrected query includes necessary joins between multiple tables.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is semantically correct but depends on a non-existent 'reviews' table.",
            "Correctness: The original query is correct.",
            "Correctness: The original query has an error. The corrected query needs to join all necessary tables and use the correct fields to calculate the lead time.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is correct.",
            "Correctness: The original query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect. Correct query: SELECT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID HAVING SUM(od.Quantity) > 1000;",
            "Query is incorrect. Correct query: SELECT o.OrderID, s.CompanyName, s.ContactName FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE o.ShippedDate IS NULL;",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is incorrect. Correct query: SELECT s.CompanyName, COUNT(DISTINCT o.ShipCountry) AS Countries FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY s.SupplierID HAVING COUNT(DISTINCT o.ShipCountry) > 3;",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The grouping and ordering in the query were incorrect. The corrected query is provided.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The provided query had an issue with missing join on orders table. The corrected query is provided.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct but can be optimized with more table specifics.",
            "The query is correct.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement, assuming the DATE_FORMAT() function is supported by the SQL environment being used.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "Correct query and meets the business requirement.",
            "The original query was incorrect. The correct query should be 'SELECT products.ProductID FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID HAVING AVG([Order Details].Quantity) > products.ReorderLevel;'",
            "Corrected: The query should join on [Order Details] to properly link products to orders.",
            "Corrected: Use CURDATE() instead of NOW() to ensure we are comparing to the current date for orders.",
            "Corrected: The query is correct.",
            "Correct.",
            "Corrected: The WHERE clause should be within the JOIN clause to restrict suppliers to the USA correctly.",
            "Correct.",
            "Corrected: Use CURDATE() instead of NOW() to ensure we are comparing to the current date for shipping dates.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct but modified for clarity: SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalValue FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > 500;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected the joins and ensured proper grouping.",
            "Query is correct.",
            "Added alias for COUNT.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Corrected the subquery join.",
            "Corrected the subquery join and date range calculation.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Corrected date range calculation.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Incorrect join condition, should be on products.ProductID = [Order Details].ProductID to link orders through [Order Details].",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct."
        ],
        "difficulty": [
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "hard",
            "medium",
            "hard",
            "medium",
            "medium",
            "hard",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy"
        ]
    },
    "Shipping Analysis": {
        "questions": [
            "What is the average shipping cost per order?",
            "What is the on-time delivery rate for the current month?",
            "What is the average time taken to fulfill an order?",
            "How many orders were shipped via each shipping method?",
            "Which shipping company shipped the most orders?",
            "What is the total freight cost for orders shipped last month?",
            "Which country has the highest number of shipped orders?",
            "Calculate the average shipping cost for orders shipped to 'USA'.",
            "Determine the order with the highest freight cost.",
            "What is the total number of orders placed by each customer?",
            "How many days, on average, does it take from placing an order to shipping it?",
            "What is the percentage of orders that were delivered late?",
            "List all orders that were shipped later than the required date.",
            "Identify the employee who processed the most orders.",
            "Find the total number of orders shipped per month.",
            "Calculate the average freight cost for orders that were shipped beyond the required date.",
            "Which city has the highest number of orders?",
            "Determine the percentage of orders shipped within each region.",
            "List the top 5 most frequent shipping addresses.",
            "What is the variance in shipping costs across all orders?",
            "What is the on-time delivery rate for the past month?",
            "What is the average order fulfillment time?",
            "Which shipping method has the highest average freight cost?",
            "What is the total freight cost per shipping method?",
            "Find the number of orders placed by each employee.",
            "List the top 5 cities in terms of the number of shipped orders.",
            "Calculate the total number of orders shipped on time.",
            "What is the percentage of orders shipped out of each country?",
            "Calculate the average freight cost for each customer.",
            "Which employees have not shipped any orders in the last quarter?",
            "What is the total freight cost for each region?",
            "Find the orders that took more than 10 days to fulfill.",
            "Identify the orders that were shipped after the required date.",
            "What is the total number of orders shipped each month?",
            "Calculate the average order fulfillment time for each shipping method.",
            "Find the customers who have not placed any orders in the current year.",
            "Determine the most frequently used shipping method.",
            "Identify the top 5 customers in terms of total freight cost paid.",
            "Calculate the average order fulfillment time for each employee.",
            "How many orders were placed each month?",
            "What is the total freight cost for each country?",
            "What percentage of orders were delivered on or before the required date?",
            "Which employees handled shipments in the month of January 2023?",
            "How many orders were shipped late (after the required date)?",
            "What is the average shipping cost per month?",
            "Which customer has the highest total freight cost?",
            "What is the number of orders shipped via each shipping method each month?",
            "How many orders had a shipping cost over $100?",
            "List the top 10 customers based on the number of orders placed.",
            "What is the average number of days between the order date and the shipped date for orders shipped to 'USA'?",
            "Which shipping method has the shortest average order fulfillment time?",
            "What is the most common shipping destination city?",
            "For each month in 2023, what was the total number of orders and their corresponding total freight cost?",
            "How many orders were placed by each employee?",
            "What is the average shipping cost per order for orders shipped to 'Canada'?",
            "What is the distribution of order fulfillment times (time between order date and shipped date)?",
            "How many orders were shipped by each shipping method?",
            "Which customer placed the highest number of orders?",
            "Which employee processed the most orders?",
            "What is the total freight cost for orders shipped to each country?",
            "What is the monthly average shipping cost?",
            "What is the percentage of on-time deliveries for each month?",
            "Which city received the highest number of shipments?",
            "How many orders were shipped after the required date?",
            "What is the total number of orders placed in each month?",
            "What is the highest freight cost for a single order?",
            "What is the average shipping cost by region?",
            "How many orders were placed by each customer?",
            "What is the average order fulfillment time by month?",
            "What is the longest time taken to fulfill an order?",
            "How many different customers are there?",
            "Which employee has the best on-time delivery rate?",
            "What is the average shipping cost per order for each month?",
            "What is the total shipping cost incurred during the past year?",
            "How many orders were placed by each customer last month?",
            "What percentage of orders were delivered on or before the required date last year?",
            "Which shipping method has the highest average cost per month?",
            "What is the average time taken to fulfill an order for each month?",
            "How many orders were shipped late in the last quarter?",
            "What is the total number of orders for each shipping method in the last six months?",
            "What is the average freight cost for orders shipped to 'USA'?",
            "Which employee has fulfilled the most orders in the last month?",
            "List the top 5 cities with the highest number of orders.",
            "How many unique customers placed orders in the past year?",
            "What is the average freight cost for orders shipped to each country?",
            "What is the average order fulfillment time for orders shipped via each shipping method?",
            "Which shipping method is most commonly used?",
            "What is the distribution of orders by shipping method?",
            "Identify months with the highest and lowest average shipping costs.",
            "How does the on-time delivery rate compare between different shipping methods?",
            "Determine the total number of shipped orders by each employee for the current year.",
            "Find the customer who placed the earliest order.",
            "What is the percentage of orders delivered on or before the required date each month?",
            "How many orders were shipped after the required date for each shipping method?",
            "Which city has the highest number of orders shipped?",
            "What is the average time taken to fulfill an order for each shipping method?",
            "Which customer has the highest average shipping cost?",
            "How many orders were placed by each customer per month?",
            "What is the average shipping cost per order for each shipping method?",
            "How many orders were shipped within 3 days of the order date for each month?",
            "Which region has the highest total freight cost?",
            "What is the percentage of orders shipped by each shipping method?",
            "How many orders were placed in each year?",
            "How many orders have no shipped date recorded?",
            "What is the average shipping cost per order for orders shipped to the USA?",
            "What is the average fulfillment time for each country?",
            "Which employee has the lowest average order fulfillment time?",
            "What is the on-time delivery rate for each month?",
            "What is the average order fulfillment time for each month?",
            "What is the total freight cost each month?",
            "Which month had the highest number of orders shipped?",
            "Which shipping method is used most frequently?",
            "Which customers had the highest total freight cost?",
            "How many orders were shipped late in the last year?",
            "What is the total number of orders made by each employee?",
            "Which region received the most shipments?",
            "What is the average shipping cost per order per country?",
            "What is the correlation between freight cost and shipment time?",
            "What is the shortest time taken to fulfill an order, and which order was it?",
            "Which order took the longest to be fulfilled?",
            "What is the average shipping cost for orders shipped by each shipping company?",
            "How many orders were placed by customer 'CUST123'?",
            "Which order had the highest freight cost?",
            "What are the top 5 cities with the highest number of shipments?",
            "What percentage of orders required special attention due to late shipments?",
            "What is the percentage of orders delivered on or before the required date?",
            "How much time on average does it take to fulfill an order?",
            "How many orders were placed in each month of the year 2023?",
            "Which shipping methods are used most frequently?",
            "Which shipping company has the highest on-time delivery rate?",
            "How many orders were shipped in the month of January 2023?",
            "What is the total freight cost for orders shipped in the city of New York?",
            "What is the highest freight cost for any single order?",
            "Which employee is responsible for most orders?",
            "What is the average shipping time to different countries?",
            "Which month has the highest average shipping cost in 2023?",
            "What is the average order fulfillment time per employee?",
            "What percentage of orders have a freight cost greater than $100?",
            "Which shipping company has the highest average shipping cost?",
            "Which day of the week has the highest number of orders placed?",
            "What is the monthly trend of order placements for the current year?",
            "What is the longest time taken to ship any order in the database?",
            "Which customer has placed the most orders?",
            "What is the total number of orders shipped to each country?",
            "What is the average freight cost per order in our database?",
            "Calculate the average number of days taken to fulfill an order.",
            "Determine the total freight cost for orders shipped to the USA.",
            "Find the top 5 cities with the highest number of orders.",
            "What is the distribution of orders by shipping country?",
            "List all orders that were never shipped.",
            "How many orders were placed each month in the last year?",
            "Compute the average freight cost per shipping method.",
            "What is the percentage of orders that were delivered on time?",
            "Identify the shipping recipient name and address for orders that incurred the highest freight costs.",
            "Find the total number of orders for each employee.",
            "Calculate the average fulfillment time for each month in the current year.",
            "What is the median freight cost per order?",
            "Compare the fulfillment time between different shipping methods.",
            "Find the total number of orders sorted by customer region.",
            "Identify the top 3 employees with the highest number of orders processed.",
            "How many orders were shipped using each shipping method?",
            "What is the maximum freight cost for an order?",
            "Which shipping company (ShipVia) has the highest average freight cost?",
            "What is the on-time delivery rate for the last month?",
            "List the orders that were shipped late.",
            "Which country has the highest number of orders?",
            "What is the total freight cost per country?",
            "Which employee has processed the highest number of orders?",
            "What is the average freight cost by shipping destination city?",
            "Which day of the week has the highest number of orders shipped?",
            "Calculate the average shipping times per shipping company.",
            "What is the order fulfillment time distribution between different shipping methods?",
            "Identify the orders with the highest shipping costs.",
            "What is the on-time delivery rate per shipping company?",
            "Find the average number of days between order placement and order shipping by customer.",
            "Determine the total and average freight cost per month for the current year.",
            "Which shipping method is used the most frequently?",
            "Which city has the highest average freight cost?",
            "What is the total freight cost per month?",
            "What is the average time difference between the required date and shipped date for late deliveries?",
            "Identify the top 5 countries by the number of orders shipped.",
            "What is the average shipping cost per country?",
            "Which employees have handled the most orders?",
            "Which customers have the highest total freight costs?",
            "How many orders do we have with missing ship dates?",
            "What is the average number of days between OrderDate and RequiredDate?",
            "What is the total number of orders shipped via each shipping method per month?",
            "Which regions have the highest on-time delivery rates?",
            "How many orders were shipped within the same country?",
            "Identify the top 3 regions with the lowest average order fulfillment time.",
            "What is the average order fulfillment time per month?",
            "How many orders have been placed by each customer?",
            "What is the total freight cost per customer?",
            "Which shipping method is used the most often?",
            "What is the most common shipping destination country?",
            "Which employee has processed the most orders?",
            "What is the average time taken to ship an order for each shipping method?",
            "What is the total number of orders placed in the last year?",
            "What is the average freight cost per country?",
            "Which city has received the highest number of orders?",
            "What is the total number of late deliveries?",
            "What is the average number of days past the required date for late deliveries?",
            "What is the distribution of order dates by month?",
            "What percentage of orders are shipped within 3 days of the order date?",
            "What is the variance in shipping costs between different regions?",
            "What is the maximum shipping cost recorded for an order?",
            "How many orders are delivered on time each month?",
            "What is the average fulfillment time for orders each month?",
            "Which customers have the highest shipping cost?",
            "What is the total freight cost for each shipping method?",
            "Which shipping method is the fastest on average?",
            "What is the percentage of late deliveries?",
            "What are the top 5 countries with the highest number of orders?",
            "What is the total number of orders shipped to each city?",
            "Which employee has fulfilled the most orders?",
            "Which month had the highest number of orders placed?",
            "What is the average time between order date and required date?",
            "What is the average freight cost for orders shipped to Europe?",
            "How many orders were shipped by each shipper?",
            "What is the average fulfillment time for orders shipped in the last 6 months?",
            "What is the average shipping cost for the orders placed in Q1 of this year?",
            "Which orders were delivered on-time?",
            "What are the total freight costs grouped by shipping country?",
            "Which orders were shipped by a specific shipping method?",
            "How many orders were fulfilled within two days?",
            "Which customer has the highest total order value?",
            "What is the average fulfillment time per shipping method?",
            "Which employee handled the most orders?",
            "What is the average freight cost per region?",
            "Which orders were delayed more than five days past the required date?",
            "What is the total number of orders by city?",
            "Which country has the highest average shipping cost?",
            "How many orders were placed in each region?",
            "What is the average shipping cost per order for the entire dataset?",
            "How many orders were shipped on or before the required date?",
            "Which shipping method was used most frequently?",
            "What is the total freight cost for orders placed in 2023?",
            "What is the average shipping cost per order for each month in 2023?",
            "What is the on-time delivery rate for each month in 2023?",
            "What is the average order fulfillment time for each month in 2023?",
            "Which city had the highest number of orders shipped to it?",
            "Who are the top 5 customers based on the number of orders placed?",
            "What is the distribution of orders shipped via different methods over the months?",
            "What is the total freight cost for each shipping company?",
            "How many orders were shipped within 2 days from the order date?",
            "What is the average time taken to fulfill orders for each shipping method?",
            "What is the average shipping cost per order for the month of January 2023?",
            "What is the percentage of orders delivered on or before the required date for the month of February 2023?",
            "What is the average order fulfillment time for March 2023?",
            "Which shipping method was used the most during April 2023?",
            "How many orders were placed by customer ID 'C123' in May 2023?",
            "What is the total freight cost for orders shipped to 'USA' in June 2023?",
            "What is the average freight cost per order shipped via method '1' in July 2023?",
            "Which customer had the highest number of orders placed in August 2023?",
            "Which employee processed the most orders in September 2023?",
            "What is the average shipping cost per order for orders shipped to 'New York' in October 2023?",
            "What is the total number of orders shipped after the required date in November 2023?",
            "What is the average time (in days) between the order date and the shipped date for December 2023?",
            "What are the top 3 cities by the number of orders shipped in 2023?",
            "Which region had the highest average freight cost per order in the year 2023?",
            "How many unique customers placed orders in 2023?",
            "What is the average shipping cost per order for orders shipped by 'ShipName ABC' in 2023?",
            "List all orders that were shipped 5 days earlier than the required date in 2023.",
            "What is the average shipping cost per order grouped by ship countries in 2023?",
            "Find the orders that have the highest freight cost in each month of 2023.",
            "What is the percentage of orders shipped via method '3' against the total orders in 2023?",
            "What is the percentage of orders delivered on or before the required date this month?",
            "Which shipping method is used the most?",
            "Which shipping company has the highest average freight cost?",
            "How many orders were shipped later than the required date?",
            "What is the total freight cost for orders shipped to 'USA'?",
            "What is the average shipping cost for each month?",
            "How many orders were placed in the last year?",
            "Which city has the highest number of orders shipped to?",
            "What is the sum of freight cost for orders handled by each employee?",
            "What is the average order fulfillment time for orders placed in the last month?",
            "What is the total number of unique customers?",
            "What is the average order fulfillment time for each shipping method?",
            "How many orders were placed by employee ID 1001?",
            "What is the total freight cost for orders placed in '2022-01'?",
            "Which country has the highest average freight cost per order?",
            "How many orders were placed and shipped within the same month?",
            "What is the average shipping cost per order for the current month?",
            "What is the average order fulfillment time for the current month?",
            "How many orders were placed by each customer in the last year?",
            "Which shipping company (ShipVia) has the highest on-time delivery rate?",
            "What is the total freight cost for each shipping company for the last quarter?",
            "Which country has the highest average shipping cost over the last year?",
            "What is the average shipping time for orders shipped to a specific country in the current month?",
            "How many orders were shipped late in the current month?",
            "Which customers have placed more than 10 orders in the last six months?",
            "What is the total number of orders shipped per month for the last two years?",
            "What is the percentage of orders that were shipped within 3 days of being placed?",
            "What is the most common shipping city for the current year?",
            "Which employee has handled the highest number of orders in the past quarter?",
            "What is the average shipping time for orders handled by each employee?",
            "What is the distribution of order fulfillment times (in days) for the past six months?",
            "Which region has the highest number of orders placed in the last quarter?",
            "What is the average freight cost for orders delivered to different postal codes?",
            "What is the total number of orders not yet shipped past their required date?",
            "Which orders have the largest freight cost discrepancy between the expected and actual costs?",
            "What is the average shipping cost per order for the last month?",
            "What is the percentage of orders delivered on or before the required date for each month?",
            "How many days on average does it take to fulfill an order?",
            "What is the total freight cost for orders shipped via each shipping method?",
            "What is the shipping cost per order for each customer?",
            "What is the average fulfillment time per employee?",
            "What percentage of orders were delivered before the required date in 2022?",
            "How many orders were placed during each day of the week?",
            "What is the average freight cost for each shipping company?",
            "Which region has the highest average shipping cost?",
            "How many orders were shipped to each country?",
            "What is the maximum, minimum, and average freight cost for orders shipped within the last month?",
            "What is the average number of days between the order date and the required date?",
            "What is the trend of average shipping costs over the last six months?",
            "What is the average number of days between the order date and the shipped date for each shipping method?",
            "What is the average shipping cost per order per month?",
            "What is the percentage of orders delivered on or before the required date per month?",
            "What is the average time taken to fulfill an order per month?",
            "Which employees have fulfilled the most orders?",
            "What are the top 5 shipping methods used in last year?",
            "What are the average shipping times for each shipping method?",
            "How many orders were placed in the last month?",
            "Which shipping company has the best on-time delivery rate?",
            "What is the average freight cost for orders shipped to a specific country?",
            "What is the total number of orders per shipping method?",
            "What is the average order completion time for each employee?",
            "What is the total number of orders per customer?",
            "What are the average shipping costs by shipping company?",
            "Which countries have the highest average order fulfillment time?",
            "What is the average number of orders placed per month?",
            "Which months had the highest number of orders?",
            "Which orders were shipped on time?",
            "List the top 5 customers by the number of orders placed.",
            "What is the highest freight cost incurred for any order?",
            "What is the total freight cost for each month?",
            "List orders along with the employee who handled each order.",
            "Find the order that took the longest time to ship.",
            "Average order fulfilment time per month?",
            "What percentage of orders were delivered on time?",
            "List orders where the shipping cost was above average.",
            "How many orders required more than 7 days to ship?",
            "List the cities with the highest number of shipped orders.",
            "Find orders that exceeded the required delivery date by more than 3 days.",
            "What are the 10 most recent orders?",
            "Group orders by shipping region and provide the count of orders in each group.",
            "What percentage of orders are delivered on or before the required date?",
            "List all orders shipped by each shipping method.",
            "Find the total freight cost incurred in the year 2023.",
            "What is the total number of orders placed each month?",
            "Which shipping method was used the most?",
            "Calculate the total freight cost for each shipping method.",
            "Find the average shipping cost per country.",
            "Identify the month with the highest number of orders.",
            "Calculate the average fulfillment time per month.",
            "What is the percentage of orders that were shipped from each country?",
            "Find the top 5 cities with the highest average shipping cost.",
            "List the orders where the freight cost exceeded $100.",
            "Calculate the average shipping time per region.",
            "Find the orders with the earliest and latest shipping dates.",
            "What is the correlation between freight cost and fulfillment time?",
            "List the orders grouped by required dates and their total freight costs.",
            "Identify the countries with the highest on-time delivery rate.",
            "How many orders were shipped out within three days of being placed?",
            "Which country has the highest number of orders shipped?",
            "What is the total freight cost for all orders in the current quarter?",
            "Which customer has placed the highest number of orders?",
            "How many orders have been delivered late in the last three months?",
            "Which city has the longest average order fulfillment time?",
            "How many employees have fulfilled at least 10 orders in the past month?",
            "Which month had the highest order fulfillment time this year?",
            "What is the average freight cost for orders required in the upcoming week?",
            "How many orders were shipped but not yet delivered by the required date?",
            "Which region has the highest on-time delivery rate?",
            "How many orders were placed this year compared to last year?",
            "What is the total number of orders placed by each employee?",
            "What is the variance in order fulfillment time by month?",
            "What percentage of orders were delivered on or before the required date for each month?",
            "Which day of the week has the highest average shipping cost?",
            "Which city has the highest number of shipments?",
            "What is the total freight cost incurred in the last quarter?",
            "Which shipping company is used most frequently?",
            "What is the average order completion time for each shipping company?",
            "How many orders did each employee handle in the last month?",
            "What is the average order processing time for orders processed by each employee?",
            "What is the delay in days for deliveries did not meet the required date?",
            "What is the on-time delivery rate for each employee?",
            "Which month had the highest total freight cost?",
            "What is the total number of orders shipped in the last year?",
            "What is the average time to deliver an order by month for the current year?",
            "What is the on-time delivery rate for the month of January 2023?",
            "What is the average time taken to fulfill an order for the second quarter of 2023?",
            "Which shipping method has the highest average shipping cost?",
            "Which country has the highest number of orders shipped in the year 2023?",
            "Calculate the percentage of orders shipped late.",
            "Which employee processed the highest number of orders in the first half of 2023?",
            "What is the average shipping cost for orders shipped to 'USA'?",
            "What is the highest freight cost recorded for any order?",
            "Calculate the average time taken to ship an order for each month in 2023.",
            "Determine the shipping method used most frequently.",
            "Calculate the total number of orders shipped by each employee.",
            "Find the city with the most orders shipped.",
            "Determine the freights cost totals for each month in 2023.",
            "Identify the top 5 customers who have incurred the highest total freight costs.",
            "Calculate the average shipping cost for orders shipped within and outside 'Region' 'NA'.",
            "Identify the order with the longest fulfillment time.",
            "Calculate the percentage of orders shipped within 5 days of the order date.",
            "What is the average number of days between the required date and the shipped date?"
        ],
        "sql_queries": [
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders;",
            "SELECT (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate)::DECIMAL / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders WHERE DATE_PART('month', OrderDate) = DATE_PART('month', CURRENT_DATE);",
            "SELECT AVG(DATE_PART('day', ShippedDate::timestamp - OrderDate::timestamp)) AS AverageFulfillmentTime FROM orders;",
            "SELECT ShipVia, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY ShipVia;",
            "SELECT ShipVia, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY ShipVia ORDER BY OrdersCount DESC LIMIT 1;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE DATE_PART('month', ShippedDate) = DATE_PART('month', CURRENT_DATE - INTERVAL '1 month');",
            "SELECT ShipCountry, COUNT(OrderID) AS ShippedOrders FROM orders GROUP BY ShipCountry ORDER BY ShippedOrders DESC LIMIT 1;",
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipCountry = 'USA';",
            "SELECT OrderID, Freight AS HighestFreightCost FROM orders ORDER BY Freight DESC LIMIT 1;",
            "SELECT CustomerID, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY CustomerID;",
            "SELECT AVG(DATE_PART('day', ShippedDate::timestamp - OrderDate::timestamp)) AS AverageDaysToShip FROM orders;",
            "SELECT (COUNT(OrderID) FILTER (WHERE ShippedDate > RequiredDate)::DECIMAL / COUNT(OrderID)) * 100 AS LateDeliveryRate FROM orders;",
            "SELECT * FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrdersProcessed FROM orders GROUP BY EmployeeID ORDER BY OrdersProcessed DESC LIMIT 1;",
            "SELECT DATE_PART('year', OrderDate) AS Year, DATE_PART('month', OrderDate) AS Month, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY DATE_PART('year', OrderDate), DATE_PART('month', OrderDate);",
            "SELECT AVG(Freight) AS AverageFreightCost FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT ShipCity, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY ShipCity ORDER BY OrdersCount DESC LIMIT 1;",
            "SELECT ShipRegion, (COUNT(OrderID)::DECIMAL / (SELECT COUNT(*) FROM orders)) * 100 AS RegionPercentage FROM orders GROUP BY ShipRegion;",
            "SELECT ShipAddress, COUNT(OrderID) AS Frequency FROM orders GROUP BY ShipAddress ORDER BY Frequency DESC LIMIT 5;",
            "SELECT VARIANCE(Freight) AS ShippingCostVariance FROM orders;",
            "SELECT (COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgOrderFulfillmentTime FROM orders;",
            "SELECT ShipVia, AVG(Freight) AS AvgFreight FROM orders GROUP BY ShipVia ORDER BY AvgFreight DESC LIMIT 1;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT EmployeeID, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY EmployeeID;",
            "SELECT ShipCity, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 5;",
            "SELECT COUNT(OrderID) AS TotalOnTimeOrders FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT ShipCountry, COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders) AS PercentageOfOrders FROM orders GROUP BY ShipCountry;",
            "SELECT CustomerID, AVG(Freight) AS AvgFreight FROM orders GROUP BY CustomerID;",
            "SELECT EmployeeID FROM employees WHERE EmployeeID NOT IN (SELECT DISTINCT EmployeeID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH));",
            "SELECT ShipRegion, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipRegion;",
            "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTimeInDays FROM orders HAVING FulfillmentTimeInDays > 10;",
            "SELECT OrderID FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY OrderMonth;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgOrderFulfillmentTime FROM orders GROUP BY ShipVia;",
            "SELECT CustomerID FROM customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
            "SELECT ShipVia, COUNT(OrderID) AS UseCount FROM orders GROUP BY ShipVia ORDER BY UseCount DESC LIMIT 1;",
            "SELECT CustomerID, SUM(Freight) AS TotalFreight FROM orders GROUP BY CustomerID ORDER BY TotalFreight DESC LIMIT 5;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY EmployeeID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(*) AS OrderCount FROM orders GROUP BY Month;",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipCountry;",
            "SELECT (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate) * 1.0 / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders;",
            "SELECT DISTINCT EmployeeID FROM orders WHERE DATE_FORMAT(ShippedDate, '%Y-%m') = '2023-01';",
            "SELECT COUNT(*) AS LateOrdersCount FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY Month;",
            "SELECT CustomerID, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY CustomerID ORDER BY TotalFreightCost DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, ShipVia, COUNT(*) AS OrderCount FROM orders GROUP BY Month, ShipVia;",
            "SELECT COUNT(*) AS HighShippingCostOrders FROM orders WHERE Freight > 100;",
            "SELECT CustomerID, COUNT(*) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 10;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingDays FROM orders WHERE ShipCountry = 'USA';",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia ORDER BY AverageFulfillmentTime ASC LIMIT 1;",
            "SELECT ShipCity, COUNT(*) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(*) AS TotalOrders, SUM(Freight) AS TotalFreightCost FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY Month;",
            "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders GROUP BY EmployeeID;",
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipCountry = 'Canada';",
            "SELECT DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime, COUNT(*) AS OrderCount FROM orders GROUP BY FulfillmentTime;",
            "SELECT ShipVia, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipVia;",
            "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY EmployeeID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipCountry;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
            "SELECT ShipCity, COUNT(OrderID) AS TotalShipments FROM orders GROUP BY ShipCity ORDER BY TotalShipments DESC LIMIT 1;",
            "SELECT COUNT(OrderID) AS TotalLateOrders FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY Month;",
            "SELECT MAX(Freight) AS HighestFreightCost FROM orders;",
            "SELECT ShipRegion, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY ShipRegion;",
            "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgOrderFulfillmentTime FROM orders GROUP BY Month;",
            "SELECT MAX(DATEDIFF(ShippedDate, OrderDate)) AS LongestFulfillmentTime FROM orders;",
            "SELECT COUNT(DISTINCT CustomerID) AS TotalCustomers FROM orders;",
            "SELECT EmployeeID, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY EmployeeID ORDER BY OnTimeDeliveryRate DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Freight) AS avg_shipping_cost FROM orders GROUP BY month;",
            "SELECT SUM(Freight) AS total_shipping_cost FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT CustomerID, COUNT(OrderID) AS num_orders FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y-%m') GROUP BY CustomerID;",
            "SELECT COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(*) AS on_time_delivery_rate FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT ShipVia, DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Freight) AS avg_cost FROM orders GROUP BY ShipVia, month ORDER BY avg_cost DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders GROUP BY month;",
            "SELECT COUNT(OrderID) AS late_orders FROM orders WHERE ShippedDate > RequiredDate AND OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);",
            "SELECT ShipVia, COUNT(OrderID) AS total_orders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY ShipVia;",
            "SELECT AVG(Freight) AS avg_freight_cost FROM orders WHERE ShipCountry = 'USA';",
            "SELECT EmployeeID, COUNT(OrderID) AS orders_fulfilled FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(NOW() - INTERVAL 1 MONTH, '%Y-%m') GROUP BY EmployeeID ORDER BY orders_fulfilled DESC LIMIT 1;",
            "SELECT ShipCity, COUNT(OrderID) AS num_orders FROM orders GROUP BY ShipCity ORDER BY num_orders DESC LIMIT 5;",
            "SELECT COUNT(DISTINCT CustomerID) AS unique_customers FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT ShipCountry, AVG(Freight) AS avg_freight_cost FROM orders GROUP BY ShipCountry;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders GROUP BY ShipVia;",
            "SELECT ShipVia, COUNT(OrderID) AS use_count FROM orders GROUP BY ShipVia ORDER BY use_count DESC LIMIT 1;",
            "SELECT ShipVia, COUNT(OrderID) AS orders_count FROM orders GROUP BY ShipVia;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Freight) AS avg_cost FROM orders GROUP BY month ORDER BY avg_cost DESC LIMIT 1; SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Freight) AS avg_cost FROM orders GROUP BY month ORDER BY avg_cost ASC LIMIT 1;",
            "SELECT ShipVia, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(*) AS on_time_rate FROM orders GROUP BY ShipVia;",
            "SELECT EmployeeID, COUNT(OrderID) AS num_orders FROM orders WHERE YEAR(ShippedDate) = YEAR(CURDATE()) GROUP BY EmployeeID;",
            "SELECT CustomerID, MIN(OrderDate) AS earliest_order FROM orders GROUP BY CustomerID ORDER BY earliest_order ASC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*)) * 100 AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
            "SELECT ShipVia, COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate GROUP BY ShipVia;",
            "SELECT ShipCity, COUNT(*) AS NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia;",
            "SELECT CustomerID, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY CustomerID ORDER BY AverageShippingCost DESC LIMIT 1;",
            "SELECT CustomerID, DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(*) AS NumberOfOrders FROM orders GROUP BY CustomerID, Month;",
            "SELECT ShipVia, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY ShipVia;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(*) AS NumberOfOrders FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 3 GROUP BY Month;",
            "SELECT ShipRegion, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipRegion ORDER BY TotalFreightCost DESC LIMIT 1;",
            "SELECT ShipVia, (COUNT(*) / (SELECT COUNT(*) FROM orders)) * 100 AS PercentageOfOrders FROM orders GROUP BY ShipVia;",
            "SELECT YEAR(OrderDate) AS Year, COUNT(*) AS NumberOfOrders FROM orders GROUP BY Year;",
            "SELECT COUNT(*) AS OrdersWithNoShippedDate FROM orders WHERE ShippedDate IS NULL;",
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipCountry = 'USA';",
            "SELECT ShipCountry, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipCountry;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY EmployeeID ORDER BY AverageFulfillmentTime ASC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrdersShipped FROM orders GROUP BY Month ORDER BY OrdersShipped DESC LIMIT 1;",
            "SELECT ShipVia, COUNT(OrderID) AS UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC;",
            "SELECT CustomerID, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY CustomerID ORDER BY TotalFreightCost DESC;",
            "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate AND YEAR(ShippedDate) = YEAR(CURDATE()) - 1;",
            "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY EmployeeID ORDER BY TotalOrders DESC;",
            "SELECT ShipRegion, COUNT(OrderID) AS Shipments FROM orders GROUP BY ShipRegion ORDER BY Shipments DESC;",
            "SELECT ShipCountry, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY ShipCountry;",
            "SELECT Freight, DATEDIFF(ShippedDate, OrderDate) AS ShipmentTime FROM orders;",
            "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS ShortestFulfillmentTime FROM orders ORDER BY ShortestFulfillmentTime ASC LIMIT 1;",
            "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS LongestFulfillmentTime FROM orders ORDER BY LongestFulfillmentTime DESC LIMIT 1;",
            "SELECT ShipVia, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY ShipVia;",
            "SELECT COUNT(OrderID) AS OrdersByCustomer FROM orders WHERE CustomerID = 'CUST123';",
            "SELECT OrderID, Freight AS HighestFreightCost FROM orders ORDER BY Freight DESC LIMIT 1;",
            "SELECT ShipCity, COUNT(OrderID) AS Shipments FROM orders GROUP BY ShipCity ORDER BY Shipments DESC LIMIT 5;",
            "SELECT (COUNT(CASE WHEN ShippedDate > RequiredDate THEN 1 END) / COUNT(OrderID)) * 100 AS LateShipmentPercentage FROM orders;",
            "SELECT COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 1.0 / COUNT(*) AS OnTimeDeliveryRate FROM orders;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders;",
            "SELECT MONTH(OrderDate) AS Month, COUNT(*) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY MONTH(OrderDate);",
            "SELECT ShipVia, COUNT(*) AS Frequency FROM orders GROUP BY ShipVia ORDER BY Frequency DESC;",
            "SELECT ShipVia, SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS OnTimeDeliveryRate FROM orders GROUP BY ShipVia ORDER BY OnTimeDeliveryRate DESC;",
            "SELECT COUNT(*) AS OrdersInJanuary FROM orders WHERE MONTH(ShippedDate) = 1 AND YEAR(ShippedDate) = 2023;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCity = 'New York';",
            "SELECT MAX(Freight) AS HighestFreightCost FROM orders;",
            "SELECT EmployeeID, COUNT(*) AS NumberOfOrders FROM orders GROUP BY EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ShipCountry, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders GROUP BY ShipCountry;",
            "SELECT MONTH(OrderDate) AS Month, AVG(Freight) AS AverageShippingCost FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY MONTH(OrderDate) ORDER BY AverageShippingCost DESC LIMIT 1;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY EmployeeID;",
            "SELECT COUNT(*) * 1.0 / (SELECT COUNT(*) FROM orders) AS PercentageFreightOver100 FROM orders WHERE Freight > 100;",
            "SELECT ShipVia, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY ShipVia ORDER BY AverageShippingCost DESC LIMIT 1;",
            "SELECT DAYNAME(OrderDate) AS DayOfWeek, COUNT(*) AS NumberOfOrders FROM orders GROUP BY DayOfWeek ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT MONTH(OrderDate) AS Month, COUNT(*) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY MONTH(OrderDate);",
            "SELECT MAX(DATEDIFF(ShippedDate, OrderDate)) AS LongestShippingTime FROM orders;",
            "SELECT CustomerID, COUNT(*) AS NumberOfOrders FROM orders GROUP BY CustomerID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ShipCountry, COUNT(*) AS TotalOrders FROM orders GROUP BY ShipCountry;",
            "SELECT AVG(Freight) AS AverageFreightCost FROM orders;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders;",
            "SELECT SUM(Freight) AS TotalFreightCostUSA FROM orders WHERE ShipCountry = 'USA';",
            "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT ShipCountry, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCountry;",
            "SELECT * FROM orders WHERE ShippedDate IS NULL;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Month ORDER BY Month;",
            "SELECT ShipVia, AVG(Freight) AS AverageFreight FROM orders GROUP BY ShipVia;",
            "SELECT (COUNT(OrderID) * 100.0 / (SELECT COUNT(*) FROM orders)) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT ShipName, ShipAddress FROM orders ORDER BY Freight DESC LIMIT 1;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY Month;",
            "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY Freight) AS MedianFreightCost FROM orders;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia;",
            "SELECT ShipRegion, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipRegion;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 3;",
            "SELECT ShipVia, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY ShipVia;",
            "SELECT MAX(Freight) AS MaxFreightCost FROM orders;",
            "SELECT ShipVia, AVG(Freight) AS AvgFreightCost FROM orders GROUP BY ShipVia ORDER BY AvgFreightCost DESC LIMIT 1;",
            "SELECT COUNT(OrderID) * 100.0 / (SELECT COUNT(*) FROM orders WHERE MONTH(OrderDate) = MONTH(CURRENT_DATE) AND YEAR(OrderDate) = YEAR(CURRENT_DATE)) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND MONTH(OrderDate) = MONTH(CURRENT_DATE) AND YEAR(OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT * FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT ShipCountry, COUNT(*) AS NumberOfOrders FROM orders GROUP BY ShipCountry ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipCountry;",
            "SELECT EmployeeID, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ShipCity, AVG(Freight) AS AverageFreightCost FROM orders GROUP BY ShipCity;",
            "SELECT DAYNAME(ShippedDate) AS ShippingDay, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShippingDay ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders GROUP BY ShipVia;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS OrderFulfillmentTime FROM orders GROUP BY ShipVia;",
            "SELECT * FROM orders ORDER BY Freight DESC LIMIT 10;",
            "SELECT ShipVia, COUNT(OrderID) * 100.0 / (SELECT COUNT(*) FROM orders WHERE ShippedDate <= RequiredDate) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate GROUP BY ShipVia;",
            "SELECT CustomerID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageDaysToShip FROM orders GROUP BY CustomerID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreightCost, AVG(Freight) AS AvgFreightCost FROM orders WHERE YEAR(OrderDate) = YEAR(CURRENT_DATE) GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT ShipVia, COUNT(OrderID) AS UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1;",
            "SELECT ShipCity, AVG(Freight) AS AverageFreightCost FROM orders GROUP BY ShipCity ORDER BY AverageFreightCost DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY Month;",
            "SELECT AVG(DATEDIFF(ShippedDate, RequiredDate)) AS AvgLateShipment FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT ShipCountry, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY ShipCountry ORDER BY OrdersCount DESC LIMIT 5;",
            "SELECT ShipCountry, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY ShipCountry;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrdersHandled FROM orders GROUP BY EmployeeID ORDER BY OrdersHandled DESC;",
            "SELECT CustomerID, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY CustomerID ORDER BY TotalFreightCost DESC;",
            "SELECT COUNT(OrderID) AS MissingShipDates FROM orders WHERE ShippedDate IS NULL;",
            "SELECT AVG(DATEDIFF(RequiredDate, OrderDate)) AS AverageDaysBetweenOrderAndRequired FROM orders;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, ShipVia, COUNT(OrderID) AS OrdersShipped FROM orders GROUP BY Month, ShipVia;",
            "SELECT ShipRegion, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(OrderID)) AS OnTimeDeliveryRate FROM orders GROUP BY ShipRegion ORDER BY OnTimeDeliveryRate DESC;",
            "SELECT COUNT(OrderID) AS OrdersWithinSameCountry FROM orders WHERE ShipCountry = ShippingCountry;",
            "SELECT ShipRegion, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgOrderFulfillmentTime FROM orders GROUP BY ShipRegion ORDER BY AvgOrderFulfillmentTime ASC LIMIT 3;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, AVG(DATEDIFF(ShippedDate, OrderDate)) as AvgFulfillmentTime FROM orders GROUP BY Month;",
            "SELECT CustomerID, COUNT(OrderID) as TotalOrders FROM orders GROUP BY CustomerID;",
            "SELECT CustomerID, SUM(Freight) as TotalFreightCost FROM orders GROUP BY CustomerID;",
            "SELECT ShipVia, COUNT(OrderID) as TotalOrders FROM orders GROUP BY ShipVia ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT ShipCountry, COUNT(OrderID) as TotalOrders FROM orders GROUP BY ShipCountry ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT EmployeeID, COUNT(OrderID) as TotalOrders FROM orders GROUP BY EmployeeID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) as AvgShippingTime FROM orders GROUP BY ShipVia;",
            "SELECT COUNT(OrderID) as TotalOrders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
            "SELECT ShipCountry, AVG(Freight) as AvgFreightCost FROM orders GROUP BY ShipCountry;",
            "SELECT ShipCity, COUNT(OrderID) as TotalOrders FROM orders GROUP BY ShipCity ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT COUNT(OrderID) as TotalLateDeliveries FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT AVG(DATEDIFF(ShippedDate, RequiredDate)) as AvgLateDays FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, COUNT(OrderID) as TotalOrders FROM orders GROUP BY Month;",
            "SELECT (COUNT(CASE WHEN DATEDIFF(ShippedDate, OrderDate) <= 3 THEN 1 END) / COUNT(OrderID)) * 100 as PercentShippedWithin3Days FROM orders;",
            "SELECT ShipRegion, VARIANCE(Freight) as FreightVariance FROM orders GROUP BY ShipRegion;",
            "SELECT MAX(Freight) as MaxShippingCost FROM orders;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OnTimeDeliveries FROM orders WHERE ShippedDate <= RequiredDate GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY Month;",
            "SELECT CustomerID, SUM(Freight) AS TotalShippingCost FROM orders GROUP BY CustomerID ORDER BY TotalShippingCost DESC;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders GROUP BY ShipVia ORDER BY AverageShippingTime ASC;",
            "SELECT (COUNT(OrderID) - SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END)) / COUNT(OrderID) * 100 AS LateDeliveryPercentage FROM orders;",
            "SELECT ShipCountry, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCountry ORDER BY NumberOfOrders DESC LIMIT 5;",
            "SELECT ShipCity, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCity;",
            "SELECT EmployeeID, COUNT(OrderID) AS NumberOfFulfilledOrders FROM orders GROUP BY EmployeeID ORDER BY NumberOfFulfilledOrders DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY Month ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT AVG(DATEDIFF(RequiredDate, OrderDate)) AS AverageLeadTime FROM orders;",
            "SELECT AVG(Freight) AS AverageFreightCost FROM orders WHERE ShipCountry IN ('Austria', 'Belgium', 'Denmark', 'Finland', 'France', 'Germany', 'Greece', 'Ireland', 'Italy', 'Netherlands', 'Norway', 'Poland', 'Portugal', 'Spain', 'Sweden', 'Switzerland', 'United Kingdom');",
            "SELECT ShipVia, COUNT(OrderID) AS NumberOfShipments FROM orders GROUP BY ShipVia;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);",
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31';",
            "SELECT OrderID FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT ShipCountry, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCountry;",
            "SELECT * FROM orders WHERE ShipVia = ?;",
            "SELECT COUNT(OrderID) AS FulfilledWithinTwoDays FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 2;",
            "SELECT CustomerID, SUM(Freight) AS TotalFreight FROM orders GROUP BY CustomerID HAVING SUM(Freight) = (SELECT MAX(TotalFreight) FROM (SELECT CustomerID, SUM(Freight) AS TotalFreight FROM orders GROUP BY CustomerID) AS SubQuery);",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia;",
            "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY EmployeeID ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT ShipRegion, AVG(Freight) AS AverageFreight FROM orders GROUP BY ShipRegion;",
            "SELECT OrderID FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 5;",
            "SELECT ShipCity, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipCity;",
            "SELECT ShipCountry, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY ShipCountry ORDER BY AverageShippingCost DESC LIMIT 1;",
            "SELECT ShipRegion, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipRegion;",
            "SELECT AVG(Freight) AS avg_shipping_cost FROM orders;",
            "SELECT COUNT(OrderID) AS on_time_deliveries FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT ShipVia, COUNT(*) AS frequency FROM orders GROUP BY ShipVia ORDER BY frequency DESC LIMIT 1;",
            "SELECT SUM(Freight) AS total_freight_cost FROM orders WHERE YEAR(OrderDate) = 2023;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Freight) AS avg_shipping_cost FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE NULL END) * 1.0 / COUNT(*) AS on_time_delivery_rate FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY month;",
            "SELECT ShipCity, COUNT(*) AS order_count FROM orders GROUP BY ShipCity ORDER BY order_count DESC LIMIT 1;",
            "SELECT CustomerID, COUNT(*) AS order_count FROM orders GROUP BY CustomerID ORDER BY order_count DESC LIMIT 5;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, ShipVia, COUNT(*) AS order_count FROM orders GROUP BY month, ShipVia;",
            "SELECT ShipVia, SUM(Freight) AS total_freight_cost FROM orders GROUP BY ShipVia;",
            "SELECT COUNT(*) AS two_day_shipments FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 2;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders GROUP BY ShipVia;",
            "SELECT AVG(Freight) AS AvgShippingCost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-01'",
            "SELECT (COUNT(OrderID) FILTER(WHERE ShippedDate <= RequiredDate) / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-02'",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-03'",
            "SELECT ShipVia, COUNT(ShipVia) AS UsageCount FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-04' GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1",
            "SELECT COUNT(OrderID) AS OrdersCount FROM orders WHERE CustomerID = 'C123' AND DATE_FORMAT(OrderDate, '%Y-%m') = '2023-05'",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCountry = 'USA' AND DATE_FORMAT(OrderDate, '%Y-%m') = '2023-06'",
            "SELECT AVG(Freight) AS AvgFreightCost FROM orders WHERE ShipVia = 1 AND DATE_FORMAT(OrderDate, '%Y-%m') = '2023-07'",
            "SELECT CustomerID, COUNT(OrderID) AS OrdersCount FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-08' GROUP BY CustomerID ORDER BY OrdersCount DESC LIMIT 1",
            "SELECT EmployeeID, COUNT(OrderID) AS OrdersCount FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-09' GROUP BY EmployeeID ORDER BY OrdersCount DESC LIMIT 1",
            "SELECT AVG(Freight) AS AvgShippingCost FROM orders WHERE ShipCity = 'New York' AND DATE_FORMAT(OrderDate, '%Y-%m') = '2023-10'",
            "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate AND DATE_FORMAT(OrderDate, '%Y-%m') = '2023-11'",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgDeliveryTime FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-12'",
            "SELECT ShipCity, COUNT(OrderID) AS OrdersCount FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2023' GROUP BY ShipCity ORDER BY OrdersCount DESC LIMIT 3",
            "SELECT ShipRegion, AVG(Freight) AS AvgFreightCost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2023' GROUP BY ShipRegion ORDER BY AvgFreightCost DESC LIMIT 1",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2023'",
            "SELECT AVG(Freight) AS AvgShippingCost FROM orders WHERE ShipName = 'ShipName ABC' AND DATE_FORMAT(OrderDate, '%Y') = '2023'",
            "SELECT * FROM orders WHERE DATEDIFF(RequiredDate, ShippedDate) = 5 AND DATE_FORMAT(OrderDate, '%Y') = '2023'",
            "SELECT ShipCountry, AVG(Freight) AS AvgShippingCost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2023' GROUP BY ShipCountry",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, OrderID, MAX(Freight) AS MaxFreightCost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2023' GROUP BY OrderMonth",
            "SELECT (COUNT(OrderID) FILTER (WHERE ShipVia = 3) / COUNT(OrderID)) * 100 AS Method3Percentage FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = '2023'",
            "SELECT (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate)::DECIMAL / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders WHERE DATE_PART('month', OrderDate) = DATE_PART('month', CURRENT_DATE) AND DATE_PART('year', OrderDate) = DATE_PART('year', CURRENT_DATE);",
            "SELECT ShipVia, COUNT(*) AS Count FROM orders GROUP BY ShipVia ORDER BY Count DESC LIMIT 1;",
            "SELECT ShipVia, AVG(Freight) AS AverageFreightCost FROM orders GROUP BY ShipVia ORDER BY AverageFreightCost DESC LIMIT 1;",
            "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCountry = 'USA';",
            "SELECT DATE_TRUNC('month', OrderDate) AS Month, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY Month ORDER BY Month;",
            "SELECT COUNT(*) AS OrdersLastYear FROM orders WHERE EXTRACT(YEAR FROM OrderDate) = EXTRACT(YEAR FROM CURRENT_DATE) - 1;",
            "SELECT ShipCity, COUNT(*) AS NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT EmployeeID, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY EmployeeID ORDER BY TotalFreightCost DESC;",
            "SELECT AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AverageFulfillmentTime FROM orders WHERE OrderDate >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 MONTH' AND OrderDate < DATE_TRUNC('month', CURRENT_DATE);",
            "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders;",
            "SELECT ShipVia, AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia;",
            "SELECT COUNT(*) AS NumberOfOrders FROM orders WHERE EmployeeID = 1001;",
            "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE DATE_PART('year', OrderDate) = 2022 AND DATE_PART('month', OrderDate) = 1;",
            "SELECT ShipCountry, AVG(Freight) AS AverageFreightCost FROM orders GROUP BY ShipCountry ORDER BY AverageFreightCost DESC LIMIT 1;",
            "SELECT COUNT(*) AS OrdersInSameMonth FROM orders WHERE DATE_PART('month', OrderDate) = DATE_PART('month', ShippedDate) AND DATE_PART('year', OrderDate) = DATE_PART('year', ShippedDate);",
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY CustomerID;",
            "SELECT ShipVia, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*) * 100 AS OnTimeDeliveryRate FROM orders GROUP BY ShipVia ORDER BY OnTimeDeliveryRate DESC LIMIT 1;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreight FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 QUARTER) GROUP BY ShipVia;",
            "SELECT ShipCountry, AVG(Freight) AS AvgFreight FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ShipCountry ORDER BY AvgFreight DESC LIMIT 1;",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShippingTime FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m') AND ShipCountry = 'specified_country';",
            "SELECT COUNT(*) AS LateOrders FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m') AND ShippedDate > RequiredDate;",
            "SELECT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY CustomerID HAVING COUNT(*) > 10;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(*) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR) GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT COUNT(CASE WHEN DATEDIFF(ShippedDate, OrderDate) <= 3 THEN 1 END) / COUNT(*) * 100 AS WithinThreeDays FROM orders;",
            "SELECT ShipCity, COUNT(*) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT EmployeeID, COUNT(OrderID) AS HandledOrders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 QUARTER) GROUP BY EmployeeID ORDER BY HandledOrders DESC LIMIT 1;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShippingTime FROM orders GROUP BY EmployeeID;",
            "SELECT DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime, COUNT(*) AS NumberOfOrders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY FulfillmentTime;",
            "SELECT ShipRegion, COUNT(*) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 QUARTER) GROUP BY ShipRegion ORDER BY OrderCount DESC LIMIT 1;",
            "SELECT ShipPostalCode, AVG(Freight) AS AvgFreight FROM orders GROUP BY ShipPostalCode;",
            "SELECT COUNT(OrderID) AS UnShippedPastRequired FROM orders WHERE ShippedDate IS NULL AND RequiredDate < CURDATE();",
            "SELECT OrderID, (Freight - expected_freight_cost) AS FreightDiscrepancy FROM orders WHERE Freight IS NOT NULL AND expected_freight_cost IS NOT NULL ORDER BY FreightDiscrepancy DESC;",
            "SELECT AVG(Freight) FROM orders WHERE OrderDate >= DATEADD(MONTH, -1, GETDATE())",
            "SELECT DATEPART(MONTH, OrderDate) AS Month, SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY DATEPART(MONTH, OrderDate)",
            "SELECT AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AvgFulfillmentTime FROM orders",
            "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia",
            "SELECT CustomerID, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY CustomerID",
            "SELECT EmployeeID, AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AvgFulfillmentTimePerEmployee FROM orders GROUP BY EmployeeID",
            "SELECT SUM(CASE WHEN YEAR(OrderDate) = 2022 AND ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(OrderID) AS BeforeRequiredDateRate FROM orders WHERE YEAR(OrderDate) = 2022",
            "SELECT DATEPART(WEEKDAY, OrderDate) AS WeekDay, COUNT(OrderID) AS OrderCount FROM orders GROUP BY DATEPART(WEEKDAY, OrderDate)",
            "SELECT ShipVia, AVG(Freight) AS AvgFreightCost FROM orders GROUP BY ShipVia",
            "SELECT ShipRegion, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY ShipRegion ORDER BY AvgShippingCost DESC LIMIT 1",
            "SELECT ShipCountry, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCountry",
            "SELECT MAX(Freight) AS MaxFreight, MIN(Freight) AS MinFreight, AVG(Freight) AS AvgFreight FROM orders WHERE OrderDate >= DATEADD(MONTH, -1, GETDATE())",
            "SELECT AVG(DATEDIFF(day, OrderDate, RequiredDate)) AS AvgDaysToRequiredDate FROM orders",
            "SELECT DATEPART(MONTH, OrderDate) AS Month, AVG(Freight) AS AvgFreightCost FROM orders WHERE OrderDate >= DATEADD(MONTH, -6, GETDATE()) GROUP BY DATEPART(MONTH, OrderDate)",
            "SELECT ShipVia, AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AvgDaysToShip FROM orders GROUP BY ShipVia",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY Month;",
            "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC;",
            "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY ShipVia ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShippingTime FROM orders GROUP BY ShipVia;",
            "SELECT COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT ShipVia, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY ShipVia ORDER BY OnTimeDeliveryRate DESC LIMIT 1;",
            "SELECT ShipCountry, AVG(Freight) AS AvgFreight FROM orders GROUP BY ShipCountry;",
            "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipVia;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgCompletionTime FROM orders GROUP BY EmployeeID;",
            "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID;",
            "SELECT ShipVia, AVG(Freight) AS AvgFreight FROM orders GROUP BY ShipVia;",
            "SELECT ShipCountry, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY ShipCountry;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY Month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY Month ORDER BY OrderCount DESC LIMIT 3;",
            "SELECT * FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT CustomerID, COUNT(OrderID) AS order_count FROM orders GROUP BY CustomerID ORDER BY order_count DESC LIMIT 5;",
            "SELECT MAX(Freight) AS highest_freight_cost FROM orders;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM(Freight) AS total_freight FROM orders GROUP BY month ORDER BY month;",
            "SELECT o.OrderID, e.EmployeeName FROM orders o JOIN employees e ON o.EmployeeID = e.EmployeeID;",
            "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS days_to_ship FROM orders ORDER BY days_to_ship DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS average_fulfillment_time FROM orders GROUP BY month ORDER BY month;",
            "SELECT COUNT(OrderID) * 100.0 / (SELECT COUNT(*) FROM orders) AS on_time_delivery_rate FROM orders WHERE ShippedDate <= RequiredDate;",
            "SELECT * FROM orders WHERE Freight > (SELECT AVG(Freight) FROM orders);",
            "SELECT COUNT(OrderID) AS orders_above_7_days FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) > 7;",
            "SELECT ShipCity, COUNT(OrderID) AS count FROM orders GROUP BY ShipCity ORDER BY count DESC;",
            "SELECT * FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 3;",
            "SELECT * FROM orders ORDER BY OrderDate DESC LIMIT 10;",
            "SELECT ShipRegion, COUNT(OrderID) AS count_of_orders FROM orders GROUP BY ShipRegion;",
            "SELECT (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate)) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders;",
            "SELECT OrderID, ShipVia FROM orders;",
            "SELECT SUM(Freight) AS TotalFreightCost2023 FROM orders WHERE YEAR(OrderDate) = 2023;",
            "SELECT MONTH(OrderDate) AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY MONTH(OrderDate);",
            "SELECT ShipVia, COUNT(OrderID) AS UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1;",
            "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia;",
            "SELECT ShipCountry, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY ShipCountry;",
            "SELECT MONTH(OrderDate) AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY MONTH(OrderDate) ORDER BY TotalOrders DESC LIMIT 1;",
            "SELECT MONTH(OrderDate) AS OrderMonth, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY MONTH(OrderDate);",
            "SELECT ShipCountry, COUNT(OrderID) * 100.0 / (SELECT COUNT(*) FROM orders) AS PercentOfTotalOrders FROM orders GROUP BY ShipCountry;",
            "SELECT ShipCity, AVG(Freight) AS AverageFreight FROM orders GROUP BY ShipCity ORDER BY AverageFreight DESC LIMIT 5;",
            "SELECT OrderID, Freight FROM orders WHERE Freight > 100;",
            "SELECT ShipRegion, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders GROUP BY ShipRegion;",
            "SELECT MIN(ShippedDate) AS EarliestShippedDate, MAX(ShippedDate) AS LatestShippedDate FROM orders;",
            "SELECT Freight, DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime FROM orders;",
            "SELECT RequiredDate, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY RequiredDate;",
            "SELECT ShipCountry, COUNT(OrderID) * 100.0 / (SELECT COUNT(*) FROM orders WHERE ShippedDate <= RequiredDate) AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate GROUP BY ShipCountry ORDER BY OnTimeDeliveryRate DESC;",
            "SELECT COUNT(*) FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 3;",
            "SELECT ShipCountry, COUNT(*) AS order_count FROM orders GROUP BY ShipCountry ORDER BY order_count DESC LIMIT 1;",
            "SELECT SUM(Freight) FROM orders WHERE QUARTER(OrderDate) = QUARTER(CURDATE()) AND YEAR(OrderDate) = YEAR(CURDATE());",
            "SELECT CustomerID, COUNT(*) AS order_count FROM orders GROUP BY CustomerID ORDER BY order_count DESC LIMIT 1;",
            "SELECT COUNT(*) FROM orders WHERE ShippedDate > RequiredDate AND DATE_FORMAT(OrderDate, '%Y-%m') >= DATE_FORMAT(CURDATE() - INTERVAL 3 MONTH, '%Y-%m');",
            "SELECT ShipCity, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders GROUP BY ShipCity ORDER BY avg_fulfillment_time DESC LIMIT 1;",
            "SELECT EmployeeID, COUNT(*) AS order_count FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE() - INTERVAL 1 MONTH, '%Y-%m') GROUP BY EmployeeID HAVING order_count >= 10;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY month ORDER BY avg_fulfillment_time DESC LIMIT 1;",
            "SELECT AVG(Freight) FROM orders WHERE RequiredDate BETWEEN CURDATE() AND CURDATE() + INTERVAL 7 DAY;",
            "SELECT COUNT(*) FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT ShipRegion, (SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS on_time_rate FROM orders GROUP BY ShipRegion ORDER BY on_time_rate DESC LIMIT 1;",
            "SELECT SUM(CASE WHEN YEAR(OrderDate) = YEAR(CURDATE()) THEN 1 ELSE 0 END) AS this_year, SUM(CASE WHEN YEAR(OrderDate) = YEAR(CURDATE()) - 1 THEN 1 ELSE 0 END) AS last_year FROM orders;",
            "SELECT EmployeeID, COUNT(*) AS order_count FROM orders GROUP BY EmployeeID ORDER BY order_count DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, VARIANCE(DATEDIFF(ShippedDate, OrderDate)) AS variance_fulfillment_time FROM orders GROUP BY month;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*)) * 100 AS on_time_delivery_rate FROM orders GROUP BY month;",
            "SELECT DAYNAME(OrderDate) AS day_of_week, AVG(Freight) AS avg_shipping_cost FROM orders GROUP BY day_of_week ORDER BY avg_shipping_cost DESC LIMIT 1;",
            "SELECT ShipCity, COUNT(*) AS number_of_shipments FROM orders GROUP BY ShipCity ORDER BY number_of_shipments DESC LIMIT 1;",
            "SELECT SUM(Freight) AS total_freight_cost FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);",
            "SELECT ShipVia, COUNT(*) AS usage_frequency FROM orders GROUP BY ShipVia ORDER BY usage_frequency DESC LIMIT 1;",
            "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_order_completion_time FROM orders GROUP BY ShipVia;",
            "SELECT EmployeeID, COUNT(OrderID) AS number_of_orders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY EmployeeID;",
            "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_processing_time FROM orders GROUP BY EmployeeID;",
            "SELECT OrderID, DATEDIFF(RequiredDate, ShippedDate) AS delivery_delay FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT EmployeeID, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*)) * 100 AS on_time_delivery_rate FROM orders GROUP BY EmployeeID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM(Freight) AS total_freight_cost FROM orders GROUP BY month ORDER BY total_freight_cost DESC LIMIT 1;",
            "SELECT COUNT(OrderID) AS total_orders FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH);",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_delivery_time FROM orders WHERE DATE_FORMAT(OrderDate, '%Y') = DATE_FORMAT(CURRENT_DATE, '%Y') GROUP BY month;",
            "SELECT COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31') AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE OrderDate BETWEEN '2023-04-01' AND '2023-06-30';",
            "SELECT ShipVia, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY ShipVia ORDER BY AverageShippingCost DESC LIMIT 1;",
            "SELECT ShipCountry, COUNT(OrderID) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY ShipCountry ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders) AS LateShippingRate FROM orders WHERE ShippedDate > RequiredDate;",
            "SELECT EmployeeID, COUNT(OrderID) AS NumberOfOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-06-30' GROUP BY EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipCountry = 'USA';",
            "SELECT MAX(Freight) AS HighestFreightCost FROM orders;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY Month;",
            "SELECT ShipVia, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipVia ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT EmployeeID, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY EmployeeID;",
            "SELECT ShipCity, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 1;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreight FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY Month;",
            "SELECT CustomerID, SUM(Freight) AS TotalFreight FROM orders GROUP BY CustomerID ORDER BY TotalFreight DESC LIMIT 5;",
            "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipRegion = 'NA' UNION ALL SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipRegion != 'NA';",
            "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime FROM orders ORDER BY FulfillmentTime DESC LIMIT 1;",
            "SELECT COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders) AS PercentageWithin5Days FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 5;",
            "SELECT AVG(DATEDIFF(RequiredDate, ShippedDate)) AS AverageDaysDifference FROM orders;"
        ],
        "reviews": [
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected the query to calculate last month's dates correctly.",
            "Correct.",
            "Correct.",
            "Corrected to show correct query for determining highest freight cost.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected to include both year and month to get accurate monthly totals.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Query corrected: Should refer to employees table as the primary source.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect - The FILTER clause is not standard SQL. The correct query should use a CASE statement within SUM/COUNT, e.g., SELECT (SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(*)) * 100 AS OnTimeDeliveryRate FROM orders;",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Fixed the query by using COUNT with CASE WHEN for condition.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Fixed the query by using COUNT with CASE WHEN for condition.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. This query does not need the ORDER BY and LIMIT clause. The correct query is: SELECT ShipVia, DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Freight) AS avg_cost FROM orders GROUP BY ShipVia, month ORDER BY avg_cost DESC;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query. Valid calculation for on-time delivery rate.",
            "Correct query. Valid calculation for average order fulfillment time.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query. To find correlation, further statistical methods need to be applied on the result set.",
            "Corrected: The original query doesn't identify the order. Added ORDER BY and LIMIT 1 for proper selection.",
            "Corrected: The original query doesn't identify the order. Added ORDER BY and LIMIT 1 for proper selection.",
            "Correct query.",
            "Correct query.",
            "Corrected: Added ORDER BY and LIMIT 1 to properly identify the order with the highest freight cost.",
            "Correct query.",
            "Correct query.",
            "The query is correct. However, it's good practice to multiply the ratio by 100 to represent the percentage explicitly.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "DATE_FORMAT is not a standard SQL function. Replace it with EXTRACT function for compatibility. Corrected query: SELECT EXTRACT(YEAR_MONTH FROM OrderDate) AS Month, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY EXTRACT(YEAR_MONTH FROM OrderDate) ORDER BY EXTRACT(YEAR_MONTH FROM OrderDate);",
            "Correct.",
            "The formula didn't match the metric definition exactly as counting the percentage. Corrected query: SELECT (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(*)) AS OnTimeDeliveryRate FROM orders;",
            "Correct.",
            "Correct.",
            "Correct.",
            "DATE_FORMAT is not a standard SQL function. Replace it with EXTRACT function for compatibility. Corrected query: SELECT EXTRACT(YEAR_MONTH FROM OrderDate) AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY EXTRACT(YEAR_MONTH FROM OrderDate);",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Corrected for the correct counting of the monthly orders. Corrected query ensures proper calculation of on-time delivery rate for last month.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Corrected for correct percentage calculation. Corrected query ensures accurate percentage calculation per shipping company.",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected to use ORDER BY Freight DESC LIMIT 1 for highest freight cost.",
            "Correct.",
            "Correct.",
            "Corrected to multiply by 100.0 to ensure a floating-point operation.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected to multiply by 100.0 to ensure a floating-point operation.",
            "Column ShippingCountry does not exist. Corrected to 'ShipCountry' instead of 'ShippingCountry'.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Original query was incorrect because it used COUNT with a WHERE clause inside COUNT function. Corrected by using SUM and CASE WHEN.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Original query was almost correct, but multiplying by 100.0 was added to avoid integer division.",
            "Correct query.",
            "Correct query.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The original query has an error in calculating the on-time delivery rate. The revised query fixes this by using a window function to get the total count.",
            "The query looks correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The query is incorrect. It should not use MAX function outside of the aggregation.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "DATEDIFF is not a SQL standard function. It should be replaced with a standard date difference calculation. Correct query: SELECT AVG(EXTRACT(DAY FROM ShippedDate - OrderDate)) AS AverageFulfillmentTime FROM orders WHERE OrderDate >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 MONTH' AND OrderDate < DATE_TRUNC('month', CURRENT_DATE);",
            "Correct.",
            "DATEDIFF is not a SQL standard function. It should be replaced with a standard date difference calculation. Correct query: SELECT ShipVia, AVG(EXTRACT(DAY FROM ShippedDate - OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected. The original query COUNT(OrderID) / COUNT(*) * 100 AS OnTimeDeliveryRate is incorrect because COUNT(*) should count all rows in the dataset before any conditions are applied. It needs corrections to use COUNT(CASE WHEN...THEN 1 END) structure.",
            "Correct.",
            "Correct.",
            "Corrected. The original query COUNT(IF...)) should be changed to COUNT(CASE WHEN... THEN 1 END) to properly count the on-time deliveries.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected. The original query IF statements should be replaced with CASE WHEN statements.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected. The original query was missing parentheses around expected_freight_cost.",
            "Correct.",
            "Incorrect. The calculation of percentage is wrong. Correct query is: SELECT DATEPART(MONTH, OrderDate) AS Month, SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY DATEPART(MONTH, OrderDate)",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The WHERE clause for filtering the year should be moved out of the SUM() condition. Correct query is: SELECT SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(OrderID) AS BeforeRequiredDateRate FROM orders WHERE YEAR(OrderDate) = 2022",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct as it matches the metric definition.",
            "Correct as it matches the metric definition.",
            "Correct as it matches the metric definition.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The original query is incorrect because it uses window functions improperly. The corrected query is: SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) * 1.0 / COUNT(DISTINCT DATE_FORMAT(OrderDate, '%Y-%m')) AS AvgOrderCount FROM orders GROUP BY Month;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct. Assuming there is an employees table with EmployeeID and EmployeeName columns.",
            "Correct.",
            "Correct.",
            "Correct. The formula is correct but there's a minor oversight in the schema for the granularity. It doesn't account for filtering out NULL dates; should add that condition.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The correct query should be: SELECT (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate)) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders;",
            "Correct.",
            "Correct.",
            "Slight error. Correct query should be: SELECT MONTH(OrderDate) AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY MONTH(OrderDate);",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Needs correction. Since we're looking for orders that have been shipped but not yet delivered by the required date, we need to ensure ShippedDate is not null and RequiredDate is in the past compared to the ShippedDate: SELECT COUNT(*) FROM orders WHERE ShippedDate IS NOT NULL AND ShippedDate > RequiredDate;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "This query is correct and will identify the day of the week with the highest average shipping cost.",
            "Correct",
            "The last quarter generally refers to the last three months from today. To get the last quarter explicitly: SELECT SUM(Freight) AS total_freight_cost FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 QUARTER);",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The format function DATE_FORMAT is not standard SQL. It should use EXTRACT to get the month and year: SELECT EXTRACT(YEAR FROM OrderDate) AS Year, EXTRACT(MONTH FROM OrderDate) AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders WHERE EXTRACT(YEAR FROM OrderDate) = 2023 GROUP BY Year, Month;",
            "Correct.",
            "Correct.",
            "Correct.",
            "The format function DATE_FORMAT is not standard SQL. It should use EXTRACT to get the month and year: SELECT EXTRACT(YEAR FROM OrderDate) AS Year, EXTRACT(MONTH FROM OrderDate) AS Month, SUM(Freight) AS TotalFreight FROM orders WHERE EXTRACT(YEAR FROM OrderDate) = 2023 GROUP BY Year, Month;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct. It may be more meaningful to calculate absolute days difference, as this can reflect cases where RequiredDate precedes ShippedDate. Using absolute value ensures a positive calculation: SELECT AVG(ABS(DATEDIFF(RequiredDate, ShippedDate))) AS AverageDaysDifference FROM orders;"
        ],
        "difficulty": [
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "easy",
            "easy",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "medium"
        ]
    },
    "Inventory Management": {
        "questions": [
            "What are the top 5 best-selling products by quantity?",
            "Which products are below their reorder level?",
            "What is the average unit price of all products?",
            "Which suppliers provide the products with the highest sales?",
            "How many products are currently discontinued?",
            "What is the total revenue generated from a specific product?",
            "Which product has the highest stock value?",
            "What is the overall inventory turnover ratio?",
            "Which product categories are performing best based on sales?",
            "How many units of each product are currently on order?",
            "Which products have the highest discount rates applied?",
            "Which products should be reordered to avoid stockouts?",
            "What is the total quantity sold for each product this month?",
            "How much inventory value is currently in stock?",
            "What are the total sales and number of orders for each supplier?",
            "What is the average discount given on all orders?",
            "Which products contribute to 80% of the total sales revenue?",
            "How do sales figures compare month-over-month for each product?",
            "Which orders received the highest total discount value?",
            "What is the performance score of each product based on sales and inventory levels?",
            "What are the names of products that are currently discontinued?",
            "How many units of each product are currently in stock?",
            "Which products have a stock level below their reorder level?",
            "What is the average price per unit of all products?",
            "Which products are supplied by each supplier?",
            "What is the total revenue generated from all product sales?",
            "Which product has the highest number of units in stock?",
            "What is the total sales quantity for each product within the last month?",
            "How many different products are being sold by each supplier?",
            "What is the inventory turnover ratio for the last month?",
            "Which products have the highest reorder levels?",
            "What is the performance of each product based on sales quantity?",
            "How many orders have a discount applied to them?",
            "Which products are currently out of stock?",
            "What is the total number of discontinued products?",
            "How many products are in each category?",
            "What is the total quantity of products ordered in the last year by month?",
            "Which supplier provides the most expensive products?",
            "What are the sales figures and inventory levels for each category of products?",
            "What is the total number of products available in the inventory?",
            "Which products are currently discontinued?",
            "What is the name and UnitPrice of the most expensive product?",
            "What is the total sales revenue generated by each product?",
            "Which product has the highest total sales revenue?",
            "What is the average unit price of the products supplied by each supplier?",
            "For each category, what is the total number of units in stock?",
            "Which products have stock levels below their reorder level?",
            "Calculate the total value of inventory currently in stock.",
            "Identify the top 5 products based on the quantity sold.",
            "Determine the monthly inventory turnover ratio for the last 6 months.",
            "Which suppliers provide products that generate the most sales revenue?",
            "What is the product performance based on the total quantity sold monthly?",
            "For each product, what is the average discount applied in orders?",
            "How many orders include products that are currently discontinued?",
            "Identify the products that have never been ordered.",
            "Which categories have the highest number of discontinued products?",
            "For each supplier, determine the average reorder level of their products.",
            "What is the total number of products sold in each month of the current year?",
            "What are the top 5 products with the highest unit prices?",
            "How many products have been discontinued?",
            "Which products need to be reordered (units in stock < reorder level)?",
            "List all orders where the discount applied is greater than 20%.",
            "What is the total revenue generated from all orders?",
            "What is the average unit price of products supplied by each supplier?",
            "Which products have the highest total sales volume in quantity?",
            "How many different categories of products are there?",
            "What is the total quantity of products ordered by product ID?",
            "Which supplier provides the most number of products?",
            "What is the Inventory Turnover Ratio for the month of January 2023?",
            "What are the products with zero units in stock but have pending orders?",
            "Identify products that have not been ordered in the last six months.",
            "What is the total value of units in stock for each product category?",
            "List the products that are being sold at a discount (UnitPrice in orders < UnitPrice in products).",
            "What is the average reorder level of products supplied by each supplier?",
            "How much revenue has been lost due to the discontinuation of products?",
            "What is the average discount applied to all orders?",
            "List the products with the highest quantity per unit.",
            "Identify products with the lowest product performance (total quantity sold).",
            "What is the total number of units available in stock for each product?",
            "Which products have inventory levels below their reorder points?",
            "What is the total sales revenue generated for each product?",
            "Which are the top 5 products by sales revenue?",
            "What is the average unit price of products per supplier?",
            "List all products that have been discontinued.",
            "What is the Inventory Turnover Ratio for each month?",
            "Which product categories have the highest total quantity sold?",
            "What is the average discount given per order?",
            "Identify the supplier who provides the most number of different products.",
            "Which products have never been ordered?",
            "What is the monthly sales trend for each product over the last year?",
            "Calculate the total revenue generated by orders that had discounts applied.",
            "Determine the product with the highest Units On Order.",
            "Find the products with the highest average selling price discounted.",
            "Calculate the number of products that are both below reorder level and have units on order.",
            "What percentage of total stock does each product contribute?",
            "What is the total value of all orders (considering unit price and quantity)?",
            "Identify the least selling product categories.",
            "Which products have been ordered more than 100 times?",
            "What is the total number of units in stock for each product?",
            "Which products have more units on order than units in stock?",
            "List the names of discontinued products.",
            "Find the products that need to be reordered (units in stock are less than the reorder level).",
            "Which supplier provides the product with the highest unit price?",
            "Calculate the total revenue generated by each product.",
            "Find the average discount applied to all products.",
            "Determine the inventory turnover ratio on a monthly basis.",
            "List the top 5 best-selling products based on quantity sold.",
            "Identify products that have never been ordered.",
            "Which categories have the highest average unit price for their products?",
            "How many different products are provided by each supplier?",
            "Calculate the product performance based on sales for each month.",
            "List products where the total order quantity is greater than the available units in stock.",
            "Identify suppliers whose products are always in stock (never need reordering).",
            "Find the total units ordered for each product in the last year.",
            "Determine the monthly sales revenue for each product.",
            "Calculate the total quantity of products ordered for each discount level.",
            "Find the most popular product category based on total units sold.",
            "Identify the least ordered product.",
            "Which products have more than 100 units in stock?",
            "What is the total quantity of products ordered?",
            "Which product has the highest unit price?",
            "What is the total value of products in stock?",
            "How many different suppliers are there?",
            "What is the total sales value for each product?",
            "What are the distinct product categories available?",
            "Which product has the highest total sales value?",
            "What is the average reorder level for all products?",
            "What is the total discount given on all orders?",
            "Which products have not been ordered at all?",
            "What is the Inventory Turnover Ratio for the current month?",
            "What are the monthly total sales for each product?",
            "What is the average quantity per unit for all products?",
            "Which supplier provides the most products?",
            "What is the performance of each product based on sales?",
            "What are the names and unit prices of all products?",
            "How many units of each product are in stock?",
            "List all discontinued products.",
            "Which products have reached or fallen below their reorder level?",
            "What is the total number of units of all products currently on order?",
            "Retrieve the names of products supplied by a specific supplier (for example, SupplierID = 1).",
            "Which categories have the highest number of products?",
            "Calculate the total value of the stock for each product (UnitPrice * UnitsInStock).",
            "List the products with the highest and lowest unit price.",
            "How many distinct products have been ordered?",
            "What is the total revenue generated from each product?",
            "Identify products that have a total discount greater than a specific value (e.g., $100).",
            "Which products have the highest inventory turnover ratio?",
            "Find the top 5 performing products based on sales quantity.",
            "Calculate the average discount provided across all products.",
            "Determine the overall number of orders for each product.",
            "What is the total quantity of products ordered for a specific month (for example, '2023-09')?",
            "Which products are contributing the most to revenue after discounts are applied?",
            "Determine the number of products with a reorder level greater than a specific value (e.g., 50).",
            "Identify products with stock below their reorder level.",
            "Calculate the total number of units on order.",
            "Find the most expensive product by unit price.",
            "Determine the top 5 products by units in stock.",
            "Calculate the total sales value for each product.",
            "Identify the suppliers of products with stock below the reorder level.",
            "Count the number of products discontinued by each supplier.",
            "Find the average unit price of products by category.",
            "Calculate the total discount given on all orders.",
            "Identify the product with the highest inventory turnover ratio in the last month.",
            "List products with no orders in the last month.",
            "Calculate the average quantity per order for each product.",
            "Determine the percentage of total sales contributed by each product.",
            "Identify the products with the highest and lowest performance by sales in the last month.",
            "Count the number of products ordered more than 100 times in the last month.",
            "Determine the total revenue lost from discontinued products.",
            "Identify the product categories with the highest sales.",
            "Calculate the average discount applied to orders in the last month.",
            "Find the products where the reorder level has been reached but not yet reordered.",
            "What are the details of products that are currently out of stock?",
            "List all discontinued products with their corresponding supplier IDs.",
            "Find the products that need to be reordered.",
            "Identify the products with the highest unit price.",
            "Which products have the highest total sales revenue?",
            "Calculate the average unit price of all products.",
            "Count the number of products by each category.",
            "What is the total quantity of products ordered so far?",
            "List the top 5 most frequently ordered products.",
            "What is the inventory turnover ratio for the past month?",
            "Identify the product performance based on the sales quantity.",
            "Which suppliers provide products with more than 50 units in stock?",
            "Determine the total order quantity for each product in a specific month.",
            "Find products that have a lower units in stock than the reorder level.",
            "List products with unit prices higher than the average unit price of all products.",
            "Identify the product categories with the lowest total sales revenue.",
            "What is the average quantity per unit for all products in stock?",
            "Determine the number of units on order for each product.",
            "What are the names and prices of products that have less than 20 units in stock?",
            "Which suppliers provide products that are currently discontinued?",
            "How many units of each product are on order, and what is their total value?",
            "What is the average reorder level for each category of products?",
            "How many products have a unit price greater than the average unit price of all products?",
            "Which products have sold the most units this month?",
            "What is the inventory turnover ratio for each month?",
            "Which products need to be reordered (i.e., their units in stock are less than the reorder level)?",
            "What is the total revenue generated by each supplier?",
            "Which categories have the highest total units in stock?",
            "How many orders were placed for products with a discount greater than 0.10?",
            "What is the total discount given on all orders this year?",
            "Which products have not been ordered at all this month?",
            "What is the performance of each product based on the number of units sold this month?",
            "Which products have a high inventory but low sales?",
            "What is the total value of all units currently in stock?",
            "What is the highest priced product in each category?",
            "How many products have zero units in stock?",
            "Which products are from suppliers based in the same country as the company?",
            "What is the average number of units ordered per product?",
            "What is the total number of units in stock for all products?",
            "Which products have less than 10 units in stock?",
            "What are the names and quantities of all products supplied by SupplierID 3?",
            "Which products need to be reordered?",
            "What is the average number of units in stock per category?",
            "What are the total sales for each product?",
            "Which products have been ordered the most?",
            "What is the average discount offered on all orders?",
            "Which suppliers have supplied the most products?",
            "What is the performance of each product based on sales and inventory levels?",
            "Which products have the highest total sales value?",
            "What is the total value of units in stock for each product?",
            "How many order details entries have a discount greater than 10%?",
            "Which are the discontinued products with the highest stock levels?",
            "What are the total units on order for each product?",
            "Which products have been ordered in quantities greater than 100 units?",
            "What is the total sales (units * unit price) for each product considering the discount applied?",
            "Which supplier provides the highest number of units across all their products?",
            "Identify the product with the highest unit price.",
            "List all products with inventory levels below the reorder level.",
            "Determine the total revenue generated from orders of a specific product (by ProductID).",
            "Find the top 5 products in terms of quantity sold.",
            "Identify products with zero units in stock but units on order.",
            "Calculate the Inventory Turnover Ratio for the current month.",
            "Which product categories have the highest average unit price?",
            "Generate a report showing the monthly Product Performance for each product.",
            "Identify products that have not been ordered in the last month.",
            "Calculate the total discount given on all products over the last month.",
            "Determine the number of distinct products ordered by each customer.",
            "What is the total quantity ordered across all products by month?",
            "Find the product with the maximum reorder level.",
            "List all suppliers who provide products that have inventory levels greater than their reorder levels.",
            "Calculate the total value of current inventory (UnitPrice * UnitsInStock) for all products.",
            "Identify the products with the highest and lowest overall sales revenue.",
            "Which suppliers provide products that need reordering?",
            "What are the top 5 products with the highest unit price?",
            "How many units of each product have been ordered?",
            "Identify products that are discontinued.",
            "How many products have a stock level below their reorder level?",
            "Which categories have the most products in stock?",
            "What is the total discount amount applied to each product?",
            "Identify the products with less than 10 units in stock.",
            "What is the average discount percentage provided across all orders?",
            "Calculate the inventory turnover ratio on a monthly basis.",
            "How many products are supplied by each supplier?",
            "What is the total quantity of products available in each category?",
            "Which products have the highest order quantities?",
            "What are the total units on order for all products?",
            "What products are currently out of stock?",
            "Which products have a stock level below their reorder point?",
            "List the discontinued products.",
            "Identify the top 5 products by unit price.",
            "Which products have the highest number of units on order?",
            "Calculate the total value of units in stock for each product.",
            "Find the product with the highest sales quantity over all time.",
            "What is the average discount applied to products in order details?",
            "Calculate the total quantity ordered for each product category.",
            "Identify the suppliers providing the most products.",
            "Determine the total sales value for each product.",
            "Calculate the Inventory Turnover Ratio for the last month.",
            "List the products that have never been ordered.",
            "Identify the top 3 categories by total sales value.",
            "Calculate the monthly Product Performance for the current year.",
            "Identify the product with the highest unit price and its supplier.",
            "Find the top 3 products with the most significant increase in sales compared to the previous month.",
            "Which categories have an average unit price above $20?",
            "Determine the total discounts given across all orders last year.",
            "Identify products with sales quantities below 100 units in the last quarter.",
            "What are the names of all products with less than 10 units in stock?",
            "Which products have been discontinued?",
            "What is the total number of units ordered for each product?",
            "Which categories have products with a stock level below their reorder level?",
            "Which products have the highest unit prices?",
            "Which suppliers provide products that are currently out of stock?",
            "What is the total number of units sold and their total revenue for each month in the current year?",
            "Calculate the Inventory Turnover Ratio for each product.",
            "Find the top 5 products with the highest sales volume in the last year.",
            "List all products along with their corresponding order quantities and discounts.",
            "What is the performance of each product based on sales volume?",
            "Determine the average discount given on each product.",
            "What is the total number of orders each product has been part of?",
            "Which products need to be reordered based on their stock level and reorder point?",
            "Calculate the total value of products currently in stock for each supplier.",
            "List the products along with their categories and order quantities.",
            "What is the total number of products in each category?",
            "Which suppliers provide the highest number of products?",
            "Which products have the highest sales quantity?",
            "Which product categories have the highest total sales value?",
            "What is the total revenue generated by each product?",
            "What is the total discount given on each product in order details?",
            "Which are the least performing products in terms of sales quantity?",
            "How many different products have been ordered?",
            "What is the total quantity of products ordered by month?",
            "Which products need reordering?",
            "What is the total inventory value of products currently in stock?",
            "What is the number of products sold with discounts?",
            "What is the total revenue lost due to discontinued products?",
            "How does the average unit price of products vary across categories?",
            "What is the total number of units in stock for each product category?",
            "Which products need to be reordered soon based on their reorder levels?",
            "What is the most expensive product in the inventory?",
            "Which product has the highest inventory value (UnitsInStock * UnitPrice)?",
            "What is the total sales for each product in the last month?",
            "How many discontinued products are there in the inventory?",
            "What is the average discount given on orders?",
            "Which product had the highest sales quantity in the last month?",
            "What is the total quantity of products ordered by each supplier?",
            "Which products are currently on order?",
            "What is the total revenue from products that have been discontinued?",
            "What is the performance ranking of products based on sales quantity?",
            "What is the average unit price of products in each category?",
            "Which product has the lowest unit price in the inventory?",
            "What is the total number of units ordered for each product in the last quarter?",
            "What is the average quantity per unit for products supplied by each supplier?",
            "What are the names and prices of all products currently in stock?",
            "Which products need to be reordered (units in stock below reorder level) and what is their reorder level?",
            "Identify the top 5 products by total quantity sold.",
            "Calculate the inventory turnover ratio for the last month.",
            "Find the product with the highest sales revenue.",
            "How many units of each product were sold last month?",
            "Which suppliers provide products that are currently in stock?",
            "Identify the products that have received the highest average discount.",
            "Determine the average price per unit for each category of products.",
            "Which products have a quantity per unit greater than 10?",
            "Find the total revenue generated by each product.",
            "What is the total cost of goods sold for the last quarter?",
            "Identify the product categories with the lowest inventory levels.",
            "Calculate the average reorder level across all products.",
            "Find the difference between units in stock and units on order for each product.",
            "List all products with a unit price higher than the average unit price.",
            "Determine the number of products supplied by each supplier.",
            "What are the names and prices of all products?",
            "How many products are in stock for each category?",
            "Which products have reached their reorder level?",
            "What is the total value of current inventory based on unit price and units in stock?",
            "How many units of each discontinued product are still in stock?",
            "What is the average unit price of products for each supplier?",
            "What is the highest discount applied to any order?",
            "What is the total sales value generated by each product ID?",
            "What is the average Inventory Turnover Ratio for each month?",
            "Which products have a stock level below the reorder level and units on order?",
            "What are the top 5 products by sales quantity?",
            "What is the total quantity ordered for each supplier's products?",
            "What are the products with the lowest inventory turnover rate?",
            "What is the performance (total quantity ordered) of each product on a monthly basis?",
            "What is the monthly sales trend for each product?",
            "Which suppliers provide products with an average unit price above a specific threshold?",
            "What are the names and unit prices of all products currently in stock?",
            "What is the total quantity of products ordered from each supplier?",
            "Which suppliers provide the most products?",
            "What is the product performance based on total quantity sold?",
            "What is the inventory turnover ratio for each product?",
            "What is the total revenue generated for each product?",
            "Which product category generates the highest sales?",
            "What are the top 5 products based on sales volume?",
            "What are the average discounts applied per order?",
            "Which products have not been ordered in the past year?",
            "What is the total discount amount given for each product?",
            "Which product has the largest order quantity?",
            "What is the total inventory value for each product?",
            "Which products need to be reordered based on their current stock level and reorder points?",
            "What is the total stock value of all products?",
            "Which products have less than 5 units in stock?",
            "How many products have a reorder level higher than 20?",
            "List the names of products supplied by each supplier.",
            "Calculate the total quantity ordered for each product.",
            "Identify the top 5 products with the highest sales revenue.",
            "Determine the average discount given on products in the order details.",
            "Find the product categories with the highest average unit price.",
            "What is the total quantity of units ordered for products with a discount greater than 0.10?",
            "Which products have been ordered more than 1000 times?",
            "Calculate the total sales revenue for each supplier.",
            "Identify the product with the most units on order.",
            "Find the average reorder level for non-discontinued products.",
            "Determine which products need to be reordered.",
            "Calculate the monthly inventory turnover ratio for each product.",
            "Which products are the best performers based on units sold?",
            "What is the total value of orders placed within the last month?",
            "Identify the top 3 suppliers based on the total sales value of their products.",
            "What are the names and IDs of all products that are currently out of stock?",
            "Which products have not been reordered even once?",
            "What is the total number of units sold for each product?",
            "Which suppliers provide products that have been discontinued?",
            "What are the details of products whose reorder level is less than 10 units?",
            "Which products have received the highest discounts on average?",
            "List all products that have never been sold.",
            "Which categories have the most number of products with stock below the reorder level?",
            "How many units of each product were sold in the last month?",
            "What are the top 5 products based on total revenue generated?",
            "Identify products with stock levels below their reorder points.",
            "Determine the total quantity ordered for each product by each supplier.",
            "What is the monthly performance of each product based on sales?",
            "How many products have been discontinued and what is their total value in inventory?",
            "Identify the top 3 products with the most number of orders.",
            "What are the names and prices of all products that have been discontinued?",
            "How many units are currently on order for each product?",
            "Which products need to be reordered (i.e., their units in stock are below their reorder level)?",
            "What is the inventory turnover ratio for the last six months?",
            "Which products have the highest sales volume?",
            "Which suppliers provide the most different products?",
            "What are the top 5 products with the highest total sales value?",
            "How many products have a reorder level of zero?",
            "Which products have a unit price greater than $20 and are still in stock?",
            "What is the total sales value for each category?",
            "How many orders include products that received a discount of more than 10%?",
            "What is the average number of units per order for each product?",
            "Which products have been sold with a discount at least once?",
            "Which month had the highest inventory turnover ratio in the past year?",
            "How does the total number of units sold compare between discontinued and active products?",
            "What is the total sales revenue for each product?",
            "Which products need to be reordered based on their reorder level?",
            "What is the average unit price of the products in each category?",
            "What are the top 5 most ordered products?",
            "Which suppliers supply products that are currently out of stock?",
            "What is the product with the highest number of units on order?",
            "What is the total discount given for each order?",
            "Which product category has the highest total sales?",
            "What are the average inventory levels for each product?",
            "What is the monthly inventory turnover ratio?",
            "Which products have the lowest stock and need immediate attention?",
            "What is the performance of each product based on the number of units sold?",
            "Which products have a unit price above the average unit price of all products?",
            "What is the total quantity ordered for each supplier?",
            "What is the total cost of goods sold for each month?"
        ],
        "sql_queries": [
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT AVG(UnitPrice) AS AveragePrice FROM products;",
            "SELECT s.SupplierName, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierName ORDER BY TotalSales DESC;",
            "SELECT COUNT(*) AS DiscontinuedCount FROM products WHERE Discontinued = 1;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.ProductName = 'SpecificProductName' GROUP BY p.ProductName;",
            "SELECT p.ProductName, (p.UnitPrice * p.UnitsInStock) AS StockValue FROM products p ORDER BY StockValue DESC LIMIT 1;",
            "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID;",
            "SELECT c.CategoryName, SUM(od.Quantity) AS TotalSales FROM categories c JOIN products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryName ORDER BY TotalSales DESC;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT p.ProductName, MAX(od.Discount) AS HighestDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY HighestDiscount DESC;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE MONTH(od.OrderDate) = MONTH(CURDATE()) GROUP BY p.ProductName;",
            "SELECT SUM(UnitPrice * UnitsInStock) AS TotalInventoryValue FROM products;",
            "SELECT s.SupplierName, SUM(od.Quantity * od.UnitPrice) AS TotalSales, COUNT(DISTINCT o.OrderID) AS TotalOrders FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY s.SupplierName;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName HAVING SUM(od.Quantity * od.UnitPrice) >= (SELECT 0.8 * SUM(od.Quantity * od.UnitPrice) FROM [Order Details]);",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity, MONTH(od.OrderDate) AS OrderMonth FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName, MONTH(od.OrderDate) ORDER BY OrderMonth;",
            "SELECT o.OrderID, SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscountValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID ORDER BY TotalDiscountValue DESC;",
            "SELECT p.ProductName, SUM(od.Quantity) / AVG(p.UnitsInStock) AS PerformanceScore FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName, UnitsInStock FROM products;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT AVG(UnitPrice) AS AveragePrice FROM products;",
            "SELECT SupplierID, ProductName FROM products;",
            "SELECT SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od;",
            "SELECT ProductName FROM products ORDER BY UnitsInStock DESC LIMIT 1;",
            "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON o.OrderID = od.OrderID WHERE DATEPART(month, o.OrderDate) = DATEPART(month, GETDATE()) AND DATEPART(year, o.OrderDate) = DATEPART(year, GETDATE()) GROUP BY p.ProductID;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID;",
            "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE DATEPART(month, o.OrderDate) = DATEPART(month, GETDATE()) AND DATEPART(year, o.OrderDate) = DATEPART(year, GETDATE());",
            "SELECT ProductName FROM products ORDER BY ReorderLevel DESC LIMIT 1;",
            "SELECT p.ProductID, SUM(od.Quantity) AS TotalSalesQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT COUNT(DISTINCT OrderID) AS DiscountedOrders FROM [Order Details] WHERE Discount > 0;",
            "SELECT ProductName FROM products WHERE UnitsInStock = 0;",
            "SELECT COUNT(*) AS DiscontinuedCount FROM products WHERE Discontinued = 1;",
            "SELECT CategoryID, COUNT(ProductID) AS ProductCount FROM products GROUP BY CategoryID;",
            "SELECT DATEPART(year, o.OrderDate) AS Year, DATEPART(month, o.OrderDate) AS Month, SUM(od.Quantity) AS TotalQuantity FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN DATEADD(year, -1, GETDATE()) AND GETDATE() GROUP BY DATEPART(year, o.OrderDate), DATEPART(month, o.OrderDate) ORDER BY Year, Month;",
            "SELECT s.SupplierID, MAX(p.UnitPrice) AS MaxPrice FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.SupplierID;",
            "SELECT c.CategoryID, c.CategoryName, SUM(od.Quantity) AS TotalSales, SUM(p.UnitsInStock) AS TotalInventory FROM categories c JOIN products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID, c.CategoryName;",
            "SELECT COUNT(*) FROM products;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) as TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) as TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT suppliers.SupplierID, AVG(products.UnitPrice) AS AveragePrice FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID;",
            "SELECT CategoryID, SUM(UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY CategoryID;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT SUM(UnitPrice * UnitsInStock) AS TotalInventoryValue FROM products;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT DATE_FORMAT(Orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] JOIN Orders ON [Order Details].OrderID = Orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE Orders.OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH) GROUP BY Month;",
            "SELECT suppliers.SupplierID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID ORDER BY TotalRevenue DESC;",
            "SELECT products.ProductID, DATE_FORMAT(Orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN Orders ON [Order Details].OrderID = Orders.OrderID GROUP BY products.ProductID, Month ORDER BY Month;",
            "SELECT products.ProductName, AVG([Order Details].Discount) AS AverageDiscount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT COUNT(DISTINCT Orders.OrderID) FROM [Order Details] JOIN Orders ON [Order Details].OrderID = Orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.Discontinued = 1;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
            "SELECT CategoryID, COUNT(*) AS DiscontinuedProductCount FROM products WHERE Discontinued = 1 GROUP BY CategoryID;",
            "SELECT suppliers.SupplierID, AVG(products.ReorderLevel) AS AverageReorderLevel FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID;",
            "SELECT DATE_FORMAT(Orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] JOIN Orders ON [Order Details].OrderID = Orders.OrderID WHERE YEAR(Orders.OrderDate) = YEAR(CURRENT_DATE) GROUP BY Month ORDER BY Month;",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT COUNT(*) FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel AND Discontinued = 0;",
            "SELECT OrderID, ProductID, UnitPrice, Quantity, Discount FROM [Order Details] WHERE Discount > 0.2;",
            "SELECT SUM(UnitPrice * Quantity) AS TotalRevenue FROM [Order Details];",
            "SELECT SupplierID, AVG(UnitPrice) AS AvgUnitPrice FROM products GROUP BY SupplierID;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalSalesQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalSalesQuantity DESC;",
            "SELECT COUNT(DISTINCT CategoryID) AS CategoryCount FROM products;",
            "SELECT ProductID, SUM(Quantity) AS TotalOrderedQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT SupplierID, COUNT(*) AS NumberOfProducts FROM products GROUP BY SupplierID ORDER BY NumberOfProducts DESC;",
            "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "SELECT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.UnitsInStock = 0 AND p.UnitsOnOrder > 0;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderDate > DATE_SUB(CURDATE(), INTERVAL 6 MONTH));",
            "SELECT c.CategoryName, SUM(p.UnitPrice * p.UnitsInStock) AS TotalStockValue FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName;",
            "SELECT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.UnitPrice < p.UnitPrice;",
            "SELECT SupplierID, AVG(ReorderLevel) AS AvgReorderLevel FROM products GROUP BY SupplierID;",
            "SELECT SUM(UnitPrice * UnitsInStock) AS LostRevenue FROM products WHERE Discontinued = 1;",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT ProductName, QuantityPerUnit FROM products ORDER BY QuantityPerUnit DESC;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalQuantity ASC LIMIT 1;",
            "SELECT ProductID, UnitsInStock FROM products;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) AS TotalSalesRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) AS TotalSalesRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY TotalSalesRevenue DESC LIMIT 5;",
            "SELECT SupplierID, AVG(UnitPrice) AS AvgUnitPrice FROM products GROUP BY SupplierID;",
            "SELECT * FROM products WHERE Discontinued = 1;",
            "SELECT DATE_TRUNC('month', o.OrderDate) AS OrderMonth, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY OrderMonth;",
            "SELECT c.CategoryID, SUM(od.Quantity) AS TotalQuantitySold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID ORDER BY TotalQuantitySold DESC;",
            "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
            "SELECT SupplierID, COUNT(DISTINCT ProductID) AS NumProducts FROM products GROUP BY SupplierID ORDER BY NumProducts DESC LIMIT 1;",
            "SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
            "SELECT DATE_TRUNC('month', o.OrderDate) AS OrderMonth, p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY OrderMonth, p.ProductID ORDER BY OrderMonth, p.ProductID;",
            "SELECT SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od WHERE od.Discount > 0;",
            "SELECT p.ProductID, p.UnitsOnOrder FROM products p ORDER BY p.UnitsOnOrder DESC LIMIT 1;",
            "SELECT p.ProductID, AVG((od.UnitPrice - od.UnitPrice * od.Discount) * od.Quantity) AS AvgSellingPriceDiscounted FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY AvgSellingPriceDiscounted DESC;",
            "SELECT COUNT(ProductID) AS ProductsCount FROM products WHERE UnitsInStock < ReorderLevel AND UnitsOnOrder > 0;",
            "SELECT p.ProductID, ROUND(p.UnitsInStock / (SELECT SUM(UnitsInStock) FROM products) * 100, 2) AS StockPercentage FROM products p;",
            "SELECT SUM(od.Quantity * od.UnitPrice) AS TotalOrderValue FROM [Order Details] od;",
            "SELECT c.CategoryID, SUM(od.Quantity) AS TotalQuantitySold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID ORDER BY TotalQuantitySold ASC LIMIT 1;",
            "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantityOrdered FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID HAVING SUM(od.Quantity) > 100;",
            "SELECT ProductName, UnitsInStock FROM products;",
            "SELECT ProductName FROM products WHERE UnitsOnOrder > UnitsInStock;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT p.ProductName FROM products p INNER JOIN suppliers s ON p.SupplierID = s.SupplierID ORDER BY p.UnitPrice DESC LIMIT 1;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT DATE_FORMAT(od.OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY DATE_FORMAT(od.OrderDate, '%Y-%m');",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderID IS NULL;",
            "SELECT c.CategoryName, AVG(p.UnitPrice) AS AverageUnitPrice FROM categories c INNER JOIN products p ON c.CategoryID = p.CategoryID GROUP BY c.CategoryName ORDER BY AverageUnitPrice DESC;",
            "SELECT s.SupplierName, COUNT(p.ProductID) AS ProductCount FROM suppliers s INNER JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierName;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity, DATE_FORMAT(od.OrderDate, '%Y-%m') AS Month FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName, Month;",
            "SELECT p.ProductName FROM products p INNER JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName HAVING SUM(od.Quantity) > MAX(p.UnitsInStock);",
            "SELECT s.SupplierName FROM suppliers s INNER JOIN products p ON s.SupplierID = p.SupplierID WHERE p.UnitsInStock > 0 AND p.UnitsInStock = p.UnitsOnOrder;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalUnitsOrdered FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY p.ProductName;",
            "SELECT p.ProductName, DATE_FORMAT(od.OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) AS MonthlyRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName, Month;",
            "SELECT Discount, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY Discount;",
            "SELECT c.CategoryName, SUM(od.Quantity) AS TotalQuantity FROM categories c INNER JOIN products p ON c.CategoryID = p.CategoryID INNER JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryName ORDER BY TotalQuantity DESC;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalQuantity ASC LIMIT 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock > 100;",
            "SELECT SUM(Quantity) FROM [Order Details];",
            "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT SUM(UnitPrice * UnitsInStock) FROM products;",
            "SELECT COUNT(DISTINCT SupplierID) FROM products;",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT DISTINCT CategoryID FROM products;",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID ORDER BY TotalSales DESC LIMIT 1;",
            "SELECT AVG(ReorderLevel) FROM products;",
            "SELECT SUM(Discount) FROM [Order Details];",
            "SELECT ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].ProductID IS NULL;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE MONTH(CURDATE()) = MONTH([Order Details].OrderDate);",
            "SELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS MonthlySales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, MONTH([Order Details].OrderDate);",
            "SELECT AVG(QuantityPerUnit) FROM products;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC LIMIT 1;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS Performance FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
            "SELECT ProductName, UnitPrice FROM products;",
            "SELECT ProductName, UnitsInStock FROM products;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products;",
            "SELECT ProductName FROM products WHERE SupplierID = 1;",
            "SELECT CategoryID, COUNT(*) AS NumberOfProducts FROM products GROUP BY CategoryID ORDER BY NumberOfProducts DESC;",
            "SELECT ProductName, (UnitPrice * UnitsInStock) AS StockValue FROM products;",
            "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1 UNION ALL SELECT ProductName FROM products ORDER BY UnitPrice ASC LIMIT 1;",
            "SELECT COUNT(DISTINCT ProductID) AS DistinctProductsOrdered FROM [Order Details];",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
            "SELECT ProductName FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName HAVING SUM([Order Details].Discount) > 100;",
            "SELECT products.ProductName, (SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock)) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName ORDER BY InventoryTurnoverRatio DESC;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantitySold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalQuantitySold DESC LIMIT 5;",
            "SELECT AVG([Order Details].Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT products.ProductName, COUNT([Order Details].OrderID) AS TotalOrders FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
            "SELECT SUM([Order Details].Quantity) AS TotalQuantityOrdered FROM [Order Details] WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-09';",
            "SELECT products.ProductName, (SUM([Order Details].Quantity * [Order Details].UnitPrice) - SUM([Order Details].Discount)) AS RevenueAfterDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY RevenueAfterDiscount DESC;",
            "SELECT COUNT(*) AS NumberOfProducts FROM products WHERE ReorderLevel > 50;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products;",
            "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT ProductName FROM products ORDER BY UnitsInStock DESC LIMIT 5;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT s.SupplierID, s.SupplierName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE p.UnitsInStock < p.ReorderLevel;",
            "SELECT s.SupplierID, COUNT(p.ProductID) AS DiscontinuedProducts FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE p.Discontinued = 1 GROUP BY s.SupplierID;",
            "SELECT c.CategoryName, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName;",
            "SELECT SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscount FROM [Order Details] od;",
            "SELECT p.ProductName, (SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock)) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY p.ProductName ORDER BY InventoryTurnoverRatio DESC LIMIT 1;",
            "SELECT p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderID IS NULL OR od.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
            "SELECT p.ProductName, AVG(od.Quantity) AS AverageQuantityPerOrder FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT p.ProductName, (SUM(od.Quantity * od.UnitPrice) / (SELECT SUM(od2.Quantity * od2.UnitPrice) FROM [Order Details] od2)) * 100 AS PercentageOfTotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY p.ProductName ORDER BY TotalQuantity DESC LIMIT 1 UNION ALL SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY p.ProductName ORDER BY TotalQuantity ASC LIMIT 1;",
            "SELECT p.ProductName, COUNT(od.OrderID) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY p.ProductName HAVING OrderCount > 100;",
            "SELECT SUM(p.UnitPrice * p.UnitsInStock) AS LostRevenue FROM products p WHERE p.Discontinued = 1;",
            "SELECT c.CategoryName, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM products p JOIN categories c ON p.CategoryID = c.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryName ORDER BY TotalSales DESC;",
            "SELECT AVG(od.Discount) AS AverageDiscount FROM [Order Details] od WHERE od.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();",
            "SELECT p.ProductName FROM products p WHERE p.UnitsInStock <= p.ReorderLevel AND p.UnitsOnOrder = 0;",
            "SELECT * FROM products WHERE UnitsInStock = 0;",
            "SELECT ProductName, SupplierID FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalRevenue DESC;",
            "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM products;",
            "SELECT CategoryID, COUNT(*) AS ProductCount FROM products GROUP BY CategoryID;",
            "SELECT SUM(Quantity) AS TotalOrderedQuantity FROM [Order Details];",
            "SELECT p.ProductName, COUNT(od.ProductID) AS OrderCount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY OrderCount DESC LIMIT 5;",
            "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnover FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderID IN (SELECT OrderID FROM orders WHERE OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW());",
            "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY TotalQuantity DESC;",
            "SELECT p.ProductName, p.SupplierID FROM products p WHERE p.UnitsInStock > 50;",
            "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE MONTH(od.OrderID) = MONTH('specific-month') AND YEAR(od.OrderID) = YEAR('specific-year') GROUP BY p.ProductID;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ProductName FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT CategoryID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.CategoryID ORDER BY TotalRevenue ASC LIMIT 1;",
            "SELECT AVG(CONVERT(DECIMAL, SUBSTRING_INDEX(QuantityPerUnit, ' ', 1))) AS AverageQuantityPerUnit FROM products WHERE UnitsInStock > 0;",
            "SELECT ProductID, UnitsOnOrder FROM products WHERE UnitsOnOrder > 0;",
            "SELECT ProductName, UnitPrice FROM products WHERE UnitsInStock < 20;",
            "SELECT DISTINCT suppliers.SupplierID, suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1;",
            "SELECT ProductID, SUM(UnitsOnOrder) AS TotalUnitsOnOrder, SUM(UnitsOnOrder * UnitPrice) AS TotalValueOnOrder FROM products GROUP BY ProductID;",
            "SELECT CategoryID, AVG(ReorderLevel) AS AvgReorderLevel FROM products GROUP BY CategoryID;",
            "SELECT COUNT(*) FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT ProductID, SUM(Quantity) AS TotalUnitsSold FROM [Order Details] WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m') GROUP BY ProductID ORDER BY TotalUnitsSold DESC;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.SupplierID;",
            "SELECT CategoryID, SUM(UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY CategoryID ORDER BY TotalUnitsInStock DESC;",
            "SELECT COUNT(*) FROM [Order Details] WHERE Discount > 0.10;",
            "SELECT SUM(Discount * Quantity * UnitPrice) AS TotalDiscountGiven FROM [Order Details] WHERE YEAR(OrderDate) = YEAR(CURDATE());",
            "SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m'));",
            "SELECT ProductID, SUM(Quantity) AS TotalUnitsSold FROM [Order Details] WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m') GROUP BY ProductID ORDER BY TotalUnitsSold DESC;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock > 50 AND ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m'));",
            "SELECT SUM(UnitsInStock * UnitPrice) AS TotalInventoryValue FROM products;",
            "SELECT CategoryID, MAX(UnitPrice) AS HighestPrice FROM products GROUP BY CategoryID;",
            "SELECT COUNT(*) FROM products WHERE UnitsInStock = 0;",
            "SELECT ProductID, ProductName FROM products WHERE SupplierID IN (SELECT SupplierID FROM suppliers WHERE suppliers.Country = 'USA');",
            "SELECT AVG(Quantity) AS AvgUnitsOrdered FROM [Order Details];",
            "SELECT SUM(UnitsInStock) AS TotalUnitsInStock FROM products;",
            "SELECT ProductName, UnitsInStock FROM products WHERE UnitsInStock < 10;",
            "SELECT ProductName, QuantityPerUnit FROM products WHERE SupplierID = 3;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT CategoryID, AVG(UnitsInStock) AS AverageStock FROM products GROUP BY CategoryID;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalOrders FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalOrders DESC;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT s.SupplierID, COUNT(p.ProductID) AS TotalProductsSupplied FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID ORDER BY TotalProductsSupplied DESC;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalSales DESC;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalSalesValue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSalesValue DESC;",
            "SELECT p.ProductName, p.UnitsInStock * p.UnitPrice AS StockValue FROM products p;",
            "SELECT COUNT(*) FROM [Order Details] WHERE Discount > 0.1;",
            "SELECT ProductName, UnitsInStock FROM products WHERE Discontinued = 1 ORDER BY UnitsInStock DESC;",
            "SELECT ProductName, UnitsOnOrder FROM products;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalOrdered FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Quantity > 100 GROUP BY p.ProductName ORDER BY TotalOrdered DESC;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice * (1 - od.Discount)) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSales DESC;",
            "SELECT SupplierID, SUM(UnitsInStock) AS TotalUnits FROM products GROUP BY SupplierID ORDER BY TotalUnits DESC LIMIT 1;",
            "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] WHERE ProductID = 1;",
            "SELECT ProductName, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName ORDER BY TotalQuantity DESC LIMIT 5;",
            "SELECT ProductName FROM products WHERE UnitsInStock = 0 AND UnitsOnOrder > 0;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE MONTH([Order Details].OrderDate) = MONTH(CURRENT_DATE) AND YEAR([Order Details].OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT CategoryID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY CategoryID ORDER BY AveragePrice DESC;",
            "SELECT products.ProductName, MONTH([Order Details].OrderDate) AS OrderMonth, SUM([Order Details].Quantity) AS TotalSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName, OrderMonth ORDER BY TotalSold DESC;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE MONTH(OrderDate) = MONTH(CURRENT_DATE) -1 AND YEAR(OrderDate) = YEAR(CURRENT_DATE));",
            "SELECT SUM(Discount) AS TotalDiscount FROM [Order Details] WHERE MONTH(OrderDate) = MONTH(CURRENT_DATE) - 1 AND YEAR(OrderDate) = YEAR(CURRENT_DATE);",
            "SELECT [Order Details].CustomerID, COUNT(DISTINCT [Order Details].ProductID) AS DistinctProductsOrdered FROM [Order Details] GROUP BY [Order Details].CustomerID;",
            "SELECT MONTH(OrderDate) AS OrderMonth, YEAR(OrderDate) AS OrderYear, SUM(Quantity) AS TotalQuantityOrdered FROM [Order Details] GROUP BY OrderMonth, OrderYear;",
            "SELECT ProductName FROM products ORDER BY ReorderLevel DESC LIMIT 1;",
            "SELECT SupplierID, ProductName FROM products WHERE UnitsInStock > ReorderLevel;",
            "SELECT SUM(UnitPrice * UnitsInStock) AS TotalInventoryValue FROM products;",
            "(SELECT ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS SalesRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName ORDER BY SalesRevenue DESC LIMIT 1) UNION ALL (SELECT ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS SalesRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName ORDER BY SalesRevenue ASC LIMIT 1);",
            "SELECT DISTINCT suppliers.SupplierName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE products.UnitsInStock <= products.ReorderLevel;",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalOrdered FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT categories.CategoryName, SUM(products.UnitsInStock) AS TotalUnitsInStock FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName;",
            "SELECT products.ProductName, SUM([Order Details].Discount * [Order Details].Quantity * [Order Details].UnitPrice) AS TotalDiscountAmount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
            "SELECT ProductName FROM products WHERE UnitsInStock < 10;",
            "SELECT AVG([Order Details].Discount) AS AverageDiscountPercentage FROM [Order Details];",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS OrderMonth, (SUM([Order Details].Quantity * [Order Details].UnitPrice) / NULLIF(AVG(products.UnitsInStock), 0)) AS InventoryTurnoverRatio FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY OrderMonth;",
            "SELECT suppliers.SupplierName, COUNT(products.ProductID) AS ProductCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierName;",
            "SELECT categories.CategoryName, SUM(products.UnitsInStock + products.UnitsOnOrder) AS TotalQuantity FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalOrderQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName ORDER BY TotalOrderQuantity DESC LIMIT 5;",
            "SELECT SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products;",
            "SELECT ProductName FROM products WHERE UnitsInStock = 0;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT ProductName FROM products ORDER BY UnitsOnOrder DESC LIMIT 5;",
            "SELECT ProductName, UnitsInStock * UnitPrice AS TotalValue FROM products;",
            "SELECT p.ProductName FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY SUM(od.Quantity) DESC LIMIT 1;",
            "SELECT AVG(Discount) FROM [Order Details];",
            "SELECT c.CategoryID, c.CategoryName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID, c.CategoryName;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC;",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalSalesValue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalSalesValue DESC;",
            "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW();",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
            "SELECT c.CategoryName, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName ORDER BY TotalSales DESC LIMIT 3;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE YEAR(od.OrderDate) = YEAR(CURDATE()) GROUP BY p.ProductID ORDER BY TotalQuantity DESC;",
            "SELECT p.ProductName, p.UnitPrice, s.SupplierName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID ORDER BY p.UnitPrice DESC LIMIT 1;",
            "SELECT p.ProductName, (SUM(CASE WHEN od.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 2 MONTH) AND DATE_SUB(NOW(), INTERVAL 1 MONTH) THEN od.Quantity ELSE 0 END) - SUM(CASE WHEN od.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW() THEN od.Quantity ELSE 0 END)) AS SalesIncrease FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY SalesIncrease DESC LIMIT 3;",
            "SELECT CategoryName FROM categories c JOIN products p ON c.CategoryID = p.CategoryID GROUP BY c.CategoryName HAVING AVG(p.UnitPrice) > 20;",
            "SELECT SUM(Discount) FROM [Order Details] WHERE YEAR(OrderDate) = YEAR(CURDATE()) - 1;",
            "SELECT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 3 MONTH) AND NOW() GROUP BY p.ProductName HAVING SUM(od.Quantity) < 100;",
            "SELECT ProductName FROM products WHERE UnitsInStock < 10;",
            "SELECT ProductName FROM products WHERE Discontinued = 1;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalUnitsOrdered FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName;",
            "SELECT c.CategoryName FROM products p JOIN categories c ON p.CategoryID = c.CategoryID WHERE p.UnitsInStock < p.ReorderLevel GROUP BY c.CategoryName;",
            "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT s.SupplierID, p.ProductName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.UnitsInStock = 0;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalUnitsSold, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue, EXTRACT(MONTH FROM o.OrderDate) AS Month FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE EXTRACT(YEAR FROM o.OrderDate) = YEAR(CURRENT_DATE()) GROUP BY p.ProductName, EXTRACT(MONTH FROM o.OrderDate);",
            "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalUnitsSold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY p.ProductID ORDER BY TotalUnitsSold DESC LIMIT 5;",
            "SELECT p.ProductName, od.Quantity, od.Discount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID;",
            "SELECT p.ProductName, SUM(od.Quantity) AS TotalUnitsSold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductName, AVG(od.Discount) AS AverageDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductName, COUNT(od.OrderID) AS TotalOrders FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT s.SupplierID, SUM(p.UnitsInStock * p.UnitPrice) AS TotalValue FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID;",
            "SELECT p.ProductName, c.CategoryName, SUM(od.Quantity) AS TotalOrderQuantity FROM products p JOIN categories c ON p.CategoryID = c.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName, c.CategoryName;",
            "SELECT CategoryID, COUNT(ProductID) AS TotalProducts FROM products GROUP BY CategoryID;",
            "SELECT SupplierID, COUNT(ProductID) AS TotalProducts FROM products GROUP BY SupplierID ORDER BY TotalProducts DESC;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalSalesQuantity FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalSalesQuantity DESC;",
            "SELECT products.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalSalesValue FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.CategoryID ORDER BY TotalSalesValue DESC;",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalRevenue DESC;",
            "SELECT [Order Details].ProductID, SUM([Order Details].Discount * [Order Details].Quantity * [Order Details].UnitPrice) AS TotalDiscountGiven FROM [Order Details] GROUP BY [Order Details].ProductID;",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalSalesQuantity FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalSalesQuantity ASC LIMIT 5;",
            "SELECT COUNT(DISTINCT ProductID) AS TotalDistinctProducts FROM [Order Details];",
            "SELECT DATE_FORMAT([Order Details].OrderDate, '%Y-%m') AS Month, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY Month;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT SUM(UnitsInStock * UnitPrice) AS TotalInventoryValue FROM products;",
            "SELECT COUNT(DISTINCT ProductID) AS ProductsWithDiscount FROM [Order Details] WHERE Discount > 0;",
            "SELECT SUM(UnitsInStock * UnitPrice) AS TotalRevenueLost FROM products WHERE Discontinued = 1;",
            "SELECT products.CategoryID, AVG(products.UnitPrice) AS AverageUnitPrice FROM products GROUP BY products.CategoryID;",
            "SELECT CategoryID, SUM(UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY CategoryID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock <= ReorderLevel AND Discontinued = 0;",
            "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1;",
            "SELECT ProductID, ProductName, (UnitsInStock * UnitPrice) AS InventoryValue FROM products ORDER BY InventoryValue DESC LIMIT 1;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY p.ProductID, p.ProductName;",
            "SELECT COUNT(*) AS DiscontinuedProducts FROM products WHERE Discontinued = 1;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY p.ProductID, p.ProductName ORDER BY TotalQuantity DESC LIMIT 1;",
            "SELECT s.SupplierID, s.SupplierName, SUM(od.Quantity) FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID, s.SupplierName;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder > 0;",
            "SELECT SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE p.Discontinued = 1;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalQuantity DESC;",
            "SELECT c.CategoryID, c.CategoryName, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID, c.CategoryName;",
            "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice ASC LIMIT 1;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY p.ProductID, p.ProductName;",
            "SELECT s.SupplierID, s.SupplierName, AVG(CAST(p.QuantityPerUnit AS DECIMAL)) AS AverageQuantityPerUnit FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.SupplierName;",
            "SELECT ProductName, UnitPrice FROM products WHERE UnitsInStock > 0;",
            "SELECT ProductName, ReorderLevel FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 5;",
            "Corrected: SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE DATE_FORMAT(od.OrderDate, '%Y-%m') = DATE_FORMAT(CURRENT_DATE - INTERVAL 1 MONTH, '%Y-%m');",
            "SELECT ProductID, SUM(Quantity * UnitPrice) AS SalesRevenue FROM [Order Details] GROUP BY ProductID ORDER BY SalesRevenue DESC LIMIT 1;",
            "Corrected: SELECT ProductID, SUM(Quantity) AS TotalSold FROM [Order Details] WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURRENT_DATE - INTERVAL 1 MONTH, '%Y-%m') GROUP BY ProductID;",
            "SELECT DISTINCT SupplierID FROM products WHERE UnitsInStock > 0;",
            "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY AvgDiscount DESC;",
            "SELECT CategoryID, AVG(UnitPrice) AS AvgPrice FROM products GROUP BY CategoryID;",
            "Corrected: SELECT ProductName FROM products WHERE CAST(REGEXP_SUBSTR(QuantityPerUnit, '\\d+') AS INT) > 10;",
            "SELECT ProductID, SUM(Quantity * UnitPrice) AS TotalRevenue FROM [Order Details] GROUP BY ProductID;",
            "Corrected: SELECT SUM(Quantity * UnitPrice) AS CostOfGoodsSold FROM [Order Details] WHERE DATE_FORMAT(OrderDate, '%Y-%m') BETWEEN DATE_FORMAT(CURRENT_DATE - INTERVAL 3 MONTH, '%Y-%m') AND DATE_FORMAT(CURRENT_DATE, '%Y-%m');",
            "SELECT CategoryID, MIN(UnitsInStock) AS LowestInventory FROM products GROUP BY CategoryID;",
            "SELECT AVG(ReorderLevel) AS AvgReorderLevel FROM products;",
            "SELECT ProductID, (UnitsInStock - UnitsOnOrder) AS StockDiff FROM products;",
            "SELECT ProductName FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT SupplierID, COUNT(*) AS ProductCount FROM products GROUP BY SupplierID;",
            "SELECT ProductName, UnitPrice FROM products;",
            "SELECT CategoryID, SUM(UnitsInStock) AS StockCount FROM products GROUP BY CategoryID;",
            "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
            "SELECT SUM(UnitPrice * UnitsInStock) AS TotalInventoryValue FROM products;",
            "SELECT ProductName, UnitsInStock FROM products WHERE Discontinued = 1;",
            "SELECT SupplierID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY SupplierID;",
            "SELECT MAX(Discount) AS HighestDiscount FROM [Order Details];",
            "SELECT ProductID, SUM(Quantity * UnitPrice) AS TotalSalesValue FROM [Order Details] GROUP BY ProductID;",
            "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel AND UnitsOnOrder > 0;",
            "SELECT TOP 5 ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC;",
            "SELECT p.SupplierID, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID;",
            "SELECT ProductID, SUM(Quantity * UnitPrice) / AVG(UnitsInStock) AS InventoryTurnoverRate FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductID ORDER BY InventoryTurnoverRate ASC;",
            "SELECT ProductID, DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Quantity) AS TotalOrdered FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY ProductID, Month ORDER BY ProductID, Month;",
            "SELECT ProductID, DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Quantity * UnitPrice) AS MonthlySales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY ProductID, Month ORDER BY ProductID, Month;",
            "SELECT SupplierID, ProductName, UnitPrice FROM products WHERE UnitPrice > ? ORDER BY UnitPrice DESC;",
            "SELECT ProductName, UnitPrice FROM products WHERE UnitsInStock > 0;",
            "SELECT p.SupplierID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.SupplierID;",
            "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC;",
            "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantitySold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT c.CategoryID, SUM(od.Quantity * od.UnitPrice) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID ORDER BY TotalSales DESC;",
            "SELECT p.ProductID, SUM(od.Quantity) AS SalesVolume FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY SalesVolume DESC LIMIT 5;",
            "SELECT OrderID, AVG(Discount) AS AverageDiscount FROM [Order Details] GROUP BY OrderID;",
            "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
            "SELECT p.ProductID, SUM(od.Discount * od.Quantity * od.UnitPrice) AS TotalDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
            "SELECT p.ProductID, MAX(od.Quantity) AS MaxOrderQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY MaxOrderQuantity DESC LIMIT 1;",
            "SELECT p.ProductID, p.UnitsInStock * p.UnitPrice AS InventoryValue FROM products p;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT SUM(UnitPrice * UnitsInStock) AS TotalStockValue FROM products;",
            "SELECT ProductName FROM products WHERE UnitsInStock < 5;",
            "SELECT COUNT(*) AS HighReorderProducts FROM products WHERE ReorderLevel > 20;",
            "SELECT SupplierID, ProductName FROM products ORDER BY SupplierID;",
            "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
            "SELECT TOP 5 ProductID, SUM(UnitPrice * Quantity) AS TotalRevenue FROM [Order Details] GROUP BY ProductID ORDER BY TotalRevenue DESC;",
            "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
            "SELECT CategoryID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY CategoryID ORDER BY AverageUnitPrice DESC;",
            "SELECT SUM(Quantity) AS TotalQuantity FROM [Order Details] WHERE Discount > 0.10;",
            "SELECT ProductID, SUM(Quantity) AS TotalOrdered FROM [Order Details] GROUP BY ProductID HAVING SUM(Quantity) > 1000;",
            "SELECT SupplierID, SUM([Order Details].UnitPrice * Quantity) AS TotalSalesRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY SupplierID;",
            "SELECT ProductID, MAX(UnitsOnOrder) AS MostUnitsOnOrder FROM products ORDER BY MostUnitsOnOrder DESC LIMIT 1;",
            "SELECT AVG(ReorderLevel) AS AverageReorderLevel FROM products WHERE Discontinued = 0;",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS MonthlyInventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductID ORDER BY MonthlyInventoryTurnoverRatio DESC;",
            "SELECT ProductID, SUM(Quantity) AS TotalUnitsSold FROM [Order Details] GROUP BY ProductID ORDER BY TotalUnitsSold DESC;",
            "SELECT SUM(UnitPrice * Quantity) AS TotalOrderValue FROM [Order Details] WHERE [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATEADD(month, -1, GETDATE()));",
            "SELECT SupplierID, SUM([Order Details].UnitPrice * Quantity) AS TotalSalesValue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY SupplierID ORDER BY TotalSalesValue DESC LIMIT 3;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock = 0;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder = 0 AND Discontinued = 0;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalUnitsSold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT DISTINCT s.SupplierID, s.SupplierName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1;",
            "SELECT ProductID, ProductName, UnitsInStock, ReorderLevel FROM products WHERE ReorderLevel < 10;",
            "SELECT p.ProductID, p.ProductName, AVG(od.Discount) AS AverageDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY AverageDiscount DESC;",
            "SELECT p.ProductID, p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.ProductID IS NULL;",
            "SELECT c.CategoryID, c.CategoryName, COUNT(p.ProductID) AS ProductsBelowReorderLevel FROM categories c JOIN products p ON c.CategoryID = p.CategoryID WHERE p.UnitsInStock < p.ReorderLevel GROUP BY c.CategoryID, c.CategoryName;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS UnitsSoldLastMonth FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY p.ProductID, p.ProductName;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
            "SELECT ProductID, ProductName, UnitsInStock, ReorderLevel FROM products WHERE UnitsInStock < ReorderLevel;",
            "SELECT p.SupplierID, s.SupplierName, p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY p.SupplierID, s.SupplierName, p.ProductID, p.ProductName ORDER BY p.SupplierID, p.ProductID;",
            "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName;",
            "SELECT p.ProductID, p.ProductName, p.UnitsInStock * p.UnitPrice AS TotalValue FROM products p WHERE p.Discontinued = 1;",
            "SELECT p.ProductID, p.ProductName, COUNT(od.OrderID) AS NumberOfOrders FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY NumberOfOrders DESC LIMIT 3;",
            "SELECT ProductName, UnitPrice FROM products WHERE Discontinued = 1",
            "SELECT ProductID, UnitsOnOrder FROM products",
            "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / (SELECT AVG(UnitsInStock) FROM products WHERE products.Discontinued = 0) AS InventoryTurnoverRatio FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY Month",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY TotalSales DESC",
            "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC",
            "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSalesValue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY TotalSalesValue DESC LIMIT 5",
            "SELECT COUNT(*) AS ZeroReorderProducts FROM products WHERE ReorderLevel = 0",
            "SELECT ProductName FROM products WHERE UnitPrice > 20 AND UnitsInStock > 0",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSalesValue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName",
            "SELECT COUNT(DISTINCT OrderID) AS OrdersWithHighDiscount FROM [Order Details] WHERE Discount > 0.1",
            "SELECT products.ProductName, AVG([Order Details].Quantity) AS AverageUnitsPerOrder FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID",
            "SELECT DISTINCT products.ProductName FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE Discount > 0",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / (SELECT AVG(UnitsInStock) FROM products WHERE products.Discontinued = 0) AS InventoryTurnoverRatio FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Month ORDER BY InventoryTurnoverRatio DESC LIMIT 1",
            "SELECT products.Discontinued, SUM([Order Details].Quantity) AS TotalUnitsSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.Discontinued",
            "SELECT P.ProductID, SUM(OD.Quantity * OD.UnitPrice) AS TotalSalesRevenue FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID GROUP BY P.ProductID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock + UnitsOnOrder <= ReorderLevel;",
            "SELECT CategoryID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY CategoryID;",
            "SELECT TOP 5 ProductID, SUM(Quantity) AS TotalUnitsOrdered FROM [Order Details] GROUP BY ProductID ORDER BY TotalUnitsOrdered DESC;",
            "SELECT DISTINCT S.SupplierID, S.SupplierName FROM products P JOIN suppliers S ON P.SupplierID = S.SupplierID WHERE P.UnitsInStock = 0;",
            "SELECT ProductID FROM products ORDER BY UnitsOnOrder DESC LIMIT 1;",
            "SELECT OrderID, SUM(Discount * Quantity * UnitPrice) AS TotalDiscount FROM [Order Details] GROUP BY OrderID;",
            "SELECT C.CategoryName, SUM(OD.Quantity * P.UnitPrice) AS TotalSales FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID JOIN categories C ON P.CategoryID = C.CategoryID GROUP BY C.CategoryName ORDER BY TotalSales DESC;",
            "SELECT ProductID, AVG(UnitsInStock) AS AverageInventoryLevel FROM products GROUP BY ProductID;",
            "SELECT DATEPART(month, OrderDate) AS Month, SUM(OD.Quantity * OD.UnitPrice) / AVG(P.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID GROUP BY DATEPART(month, OrderDate);",
            "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < (SELECT AVG(UnitsInStock) FROM products);",
            "SELECT P.ProductID, SUM(OD.Quantity) AS Performance FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID GROUP BY P.ProductID;",
            "SELECT ProductID, ProductName FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
            "SELECT S.SupplierID, SUM(OD.Quantity) AS TotalQuantityOrdered FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID JOIN suppliers S ON P.SupplierID = S.SupplierID GROUP BY S.SupplierID;",
            "SELECT DATEPART(month, OrderDate) AS Month, SUM(OD.Quantity * OD.UnitPrice) AS TotalCostOfGoodsSold FROM [Order Details] OD GROUP BY DATEPART(month, OrderDate);"
        ],
        "reviews": [
            "Correct.",
            "Correct.",
            "Correct.",
            "Original query selected SUM(od.Quantity); corrected to calculate total sales revenue by multiplying quantity by unit price.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Duplicated from question 2. Correct.",
            "Column 'OrderDate' is missing in the schema; assuming it exists in the 'Order Details' table.",
            "Correct.",
            "Added DISTINCT to COUNT to avoid counting duplicated OrderID due to joins.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The original query used a subquery to get orders from the last month but didn't join with the orders table. Corrected query: SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON o.OrderID = od.OrderID WHERE DATEPART(month, o.OrderDate) = DATEPART(month, GETDATE()) AND DATEPART(year, o.OrderDate) = DATEPART(year, GETDATE()) GROUP BY p.ProductID;",
            "Correct.",
            "Incorrect. The original query didn't join with the orders table. Corrected query: SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON o.OrderID = od.OrderID WHERE DATEPART(month, o.OrderDate) = DATEPART(month, GETDATE()) AND DATEPART(year, o.OrderDate) = DATEPART(year, GETDATE());",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. 'suppliers' table is not mentioned in the schema. Remove the reference to the 'suppliers' table and just use the 'products' table. Correct query: SELECT SupplierID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY SupplierID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct query for retrieving top 5 products with the highest unit price.",
            "Correct query for counting the number of discontinued products.",
            "Correct query for fetching products that need to be reordered.",
            "Correct query; the 20% discount is correctly represented.",
            "Correct query for calculating total revenue from all orders.",
            "Correct query for finding the average unit price per supplier.",
            "Correct query for identifying products with the highest sales volume.",
            "Correct query for counting different product categories.",
            "Correct query for calculating total ordered quantity by product ID.",
            "Correct query for finding the supplier with the most products.",
            "Incorrect query. It should also consider the date format correction and null condition check for Stock in Inventory turnover. Correct query: SELECT SUM(od.Quantity * od.UnitPrice) / NULLIF(AVG(p.UnitsInStock), 0) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
            "Correct query for finding products with zero stock but pending orders.",
            "Incorrect query. DATE_SUB function should be changed to make sense of 6 months format. Correct query: SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderDate > NOW() - INTERVAL 6 MONTH);",
            "Schema issue: The 'categories' table should be included in the schema. Correct query for total stock value per category given the table exists: SELECT c.CategoryName, SUM(p.UnitPrice * p.UnitsInStock) AS TotalStockValue FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName;",
            "Correct query for finding products sold at a discount.",
            "Correct query for calculating average reorder level per supplier.",
            "Correct query for calculating lost revenue due to discontinued products.",
            "Correct query for finding the average discount applied to all orders.",
            "Correct query for listing products with the highest quantity per unit.",
            "Correct query for identifying the product with the lowest sales performance.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Modified query from using 'TOP' to 'LIMIT' for compatibility with standard SQL.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct assuming the presence of an 'orders' table with 'OrderDate' column.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct assuming the presence of an 'orders' table with 'OrderDate' column.",
            "The query is correct.",
            "The query corrected to fetch accurately by using the 'ORDER BY' clause and 'LIMIT'.",
            "The initial query was not appropriately calculating the discount; corrected query subtracts the discount from the unit price.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Added table alias 'p' before 'UnitPrice' to remove ambiguity.",
            "Correct.",
            "Correct.",
            "Modified to group by the formatted date to ensure accurate monthly grouping.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Modified to group by the formatted date to ensure accurate monthly grouping.",
            "Corrected to use MAX(p.UnitsInStock) to remove ambiguity with aggregation.",
            "Corrected to ensure that units in stock is non-zero.",
            "Added a WHERE clause to filter orders placed in the last year.",
            "Modified to group by the formatted date to ensure accurate monthly grouping.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query is mostly correct but missing product's restocking detail. A better query: SELECT ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].ProductID IS NULL AND products.UnitsInStock > 0;",
            "The current query does not have dates in [Order Details] table. A better query includes Order Date: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID;",
            "Correct.",
            "SELECT AVG(CAST(QuantityPerUnit AS DECIMAL)) FROM products; The current query would work if QuantityPerUnit is a numeric field; if not and it's stored as a string representing quantities can cause error.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query may produce unexpected results. The correct query should use a common table expression (CTE) or subqueries to ensure proper ordering. Correct query: SELECT ProductName FROM (SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1) AS highest UNION ALL SELECT ProductName FROM (SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice ASC LIMIT 1) AS lowest;",
            "Correct.",
            "Correct.",
            "Correct.",
            "The Inventory Turnover Ratio calculation should group by the period for the right granularity. The query also misses the filtering by the specified period. Correct query: SELECT products.ProductName, (SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock)) AS InventoryTurnoverRatio FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-09' GROUP BY products.ProductName ORDER BY InventoryTurnoverRatio DESC;",
            "Correct.",
            "Correct.",
            "The table '[Order Details]' does not have an 'OrderDate' column. The correct query should join with the 'orders' table, which should contain the 'OrderDate'. Correct query: SELECT SUM([Order Details].Quantity) AS TotalQuantityOrdered FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-09';",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect - Missing OrderDate field in products table. Replace with orders table to check dates.\nCorrect Query: SELECT p.ProductName, (SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock)) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY p.ProductName ORDER BY InventoryTurnoverRatio DESC LIMIT 1;",
            "Incorrect - od.OrderID IS NULL part is redundant if there were orders placed in other months.\nCorrect Query: SELECT p.ProductName FROM products p LEFT JOIN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) od ON p.ProductID = od.ProductID WHERE od.OrderID IS NULL;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Mistake: 'OrderID' is used incorrectly to filter by date in '[Order Details]'. Corrected Query: SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnover FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderID IN (SELECT OrderID FROM orders WHERE OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW());",
            "The query is correct.",
            "The query is correct.",
            "Mistake: The use of 'OrderID' to filter by date is incorrect. Corrected Query: SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE MONTH(od.OrderDate) = 'specific-month' AND YEAR(od.OrderDate) = 'specific-year' GROUP BY p.ProductID;",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The column 'OrderDate' is not present in the 'Order Details' table. It should be fetched from the related 'orders' table to filter by the current month.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The column 'OrderDate' is not present in the 'Order Details' table. It should be fetched from the related 'orders' table to filter by the current year.",
            "Correct.",
            "Duplicate of earlier complex query 6 and correct for reviewing purposes, please modify query as needed.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The GROUP BY clause should use DATE_FORMAT with proper format instead of simply grouping by MONTH. Corrected query: SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID GROUP BY DATE_FORMAT(o.OrderDate, '%Y-%m');",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The WHERE clause for checking ordered quantities should use HAVING clause instead of WHERE. Corrected query: SELECT p.ProductName, SUM(od.Quantity) AS TotalOrdered FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID HAVING SUM(od.Quantity) > 100 ORDER BY TotalOrdered DESC;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected query: Added filtering by CURRENT_YEAR to the WHERE clause to ensure we are calculating for the current month of the current year.",
            "Correct.",
            "Corrected query: Added grouping by MONTH([Order Details].OrderDate) to align with the monthly granularity required.",
            "Corrected query: Adjusted the filtering condition to include YEAR in the WHERE clause to ensure the query is looking at the month of the current year.",
            "Corrected query: Added filtering by CURRENT_YEAR to the WHERE clause to ensure the query is accurate for the requested month.",
            "Correct.",
            "Corrected query: Added grouping by YEAR along with MONTH to ensure the data aggregation accounts for multiple years.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Corrected query: Separated the two queries with proper parentheses in the UNION ALL clause to ensure proper execution of the union of the highest and lowest sales revenue.",
            "Correct: The query correctly sums the UnitsInStock from the products table.",
            "Correct: The query correctly selects top 5 products ordered by UnitPrice.",
            "Correct: The query correctly sums the quantity ordered for each product.",
            "Correct: The query correctly identifies products that have not been ordered.",
            "Correct: The query correctly identifies products with stock levels below the reorder level.",
            "Correct: The query correctly calculates the average unit price of products supplied by each supplier.",
            "Correct: The query correctly calculates the total discount amount for each product.",
            "Correct: The query correctly identifies products with less than 10 units in stock.",
            "Correct: The query correctly calculates the average discount percentage across all orders.",
            "Corrected: The query needs to handle division by zero in AVG(UnIitsInStock). NULLIF(AVG(products.UnitsInStock), 0) is added.",
            "Correct: The query correctly counts the number of products supplied by each supplier.",
            "Correct: The query correctly calculates the total quantity of products for each category.",
            "Correct: The query correctly sums the highest ordered quantities for each product.",
            "Correct: The query correctly sums the total units on order for all products.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query is mostly correct but does not handle ties well. Corrected query: SELECT p.ProductName FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY SUM(od.Quantity) DESC LIMIT 1;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query is incorrect. The 'od' table does not seem to have an 'OrderDate' column according to the provided schema. Corrected query assuming the 'orders' table has an 'OrderDate' column: SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW();",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Query may not be accurate. Comparison logic seems reversed. Corrected query: SELECT p.ProductName, (SUM(CASE WHEN od.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 1 MONTH) AND NOW() THEN od.Quantity ELSE 0 END) - SUM(CASE WHEN od.OrderDate BETWEEN DATE_SUB(NOW(), INTERVAL 2 MONTH) AND DATE_SUB(NOW(), INTERVAL 1 MONTH) THEN od.Quantity ELSE 0 END)) AS SalesIncrease FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY SalesIncrease DESC LIMIT 3;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The query is correct, but `YEAR(CURDATE())` and `EXTRACT(YEAR FROM o.OrderDate)` are inconsistently used. Both should use `YEAR(CURRENT_DATE())` for consistency. The query does.",
            "Correct.",
            "The query misses the `orders` table join to get the `OrderDate`. The corrected query: `SELECT p.ProductName, SUM(od.Quantity) AS TotalUnitsSold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY p.ProductID ORDER BY TotalUnitsSold DESC LIMIT 5;`",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The query does not include a date field and directly using CURDATE() does not group by month. Corrected query includes OrderDate: SELECT DATE_FORMAT([Order Details].OrderDate, '%Y-%m') AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] INNER JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY Month;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The query uses CURDATE() but should instead refer to OrderDate field for correct grouping: SELECT DATE_FORMAT([Order Details].OrderDate, '%Y-%m') AS Month, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY Month;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query may be incorrect as the 'omitted OrderDate doesn\u2019t exist in the schema.Product' table may not have 'OrderDate' column",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct.",
            "The original query is correct. Adjusted AVG for QuantityPerUnit to accommodate potential VARCHAR type.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Original query contained table aliases that were not consistent. Corrected the query.",
            "Correct.",
            "Original query did not have a comma after DATE_FORMAT(). Corrected the query.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Original query improperly cast QuantityPerUnit. Used REGEXP_SUBSTR for correct parsing.",
            "Correct.",
            "Query matches the question but the date range should include entire months. Corrected the query.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Error in the query: DATE_FORMAT function should be used with appropriate module-based formatting. Corrected query: SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
            "Correct.",
            "Incorrect: TOP clause is not standard SQL. Corrected query: SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 5;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The SupplierID should be taken from the products table based on the JOIN. The corrected query is: SELECT p.SupplierID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.SupplierID;",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The 'OrderDate' should be included in the query. The corrected query is: SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct, but ordering by SupplierID is unnecessary. Better to group by SupplierID instead.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Error: The query should include a date filter to group by each month. The correct query: SELECT ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS MonthlyInventoryTurnoverRatio, DATEPART(month, OrderDate) AS Month FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductID, DATEPART(month, OrderDate) ORDER BY MonthlyInventoryTurnoverRatio DESC;",
            "Correct.",
            "Error: The query is invalid because the 'orders' table is not included in the database schema. If we need to verify the date, the query should include a fixed date instead, e.g.: SELECT SUM(UnitPrice * Quantity) AS TotalOrderValue FROM [Order Details] WHERE [Order Details].OrderDate >= '2023-03-01'; (assuming current date is '2023-04-01').",
            "Error: LIMIT is not supported by some SQL engines like SQL Server. Correct query using appropriate method: SELECT TOP 3 SupplierID, SUM([Order Details].UnitPrice * Quantity) AS TotalSalesValue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY SupplierID ORDER BY TotalSalesValue DESC;",
            "Correct",
            "Corrected to include only products that have never been reordered and are not discontinued.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Corrected to use CURDATE() instead of NOW() and factoryEARTHDATE_SUB() instead of DATE_SUB()",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: The AVG(UnitesInStock) should be calculated for non-discontinued products.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: The AVG(UnitesInStock) should be calculated for non-discontinued products.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Corrected: Using LIMIT 1 for compatibility with standard SQL.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct"
        ],
        "difficulty": [
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced"
        ]
    },
    "cross_scenario": {
        "questions": [
            "What are the total sales for the year 2023?",
            "What is the average order value for January 2023?",
            "Which customer has the highest lifetime value?",
            "How many units of each product were sold in the first quarter of 2023?",
            "Who is the highest-performing employee in terms of sales for February 2023?",
            "What is the average order fulfillment time for March 2023?",
            "What is the customer retention rate for the first half of 2023?",
            "Which supplier has the best lead time performance for April 2023?",
            "What is the inventory turnover ratio for May 2023?",
            "What is the average shipping cost per order in June 2023?",
            "What percentage of orders were delivered on time in July 2023?",
            "Which product has the highest sales in August 2023?",
            "What are the total sales generated by each sales territory in September 2023?",
            "Which shipping company has the highest on-time delivery rate for October 2023?",
            "What is the average discount given on orders in November 2023?",
            "Which product category generated the highest sales in December 2023?",
            "What are the monthly sales trends for 2023?",
            "How does the total sales of Q1 2023 compare to Q1 2022?",
            "What is the average lead time for orders delivered by each supplier?",
            "Who are the top 5 customers based on sales in 2023?",
            "What is the total sales revenue generated in January 2023?",
            "What is the average value of orders placed in February 2023?",
            "What is the performance of each product in terms of quantity sold in March 2023?",
            "Which employee generated the highest sales in April 2023?",
            "What is the average time taken to fulfill orders in May 2023?",
            "What is the customer retention rate from 2022 to 2023?",
            "What is the average lead time for suppliers to deliver products in June 2023?",
            "What is the inventory turnover ratio for July 2023?",
            "What is the average shipping cost per order for August 2023?",
            "What is the on-time delivery rate for September 2023?",
            "What are the total sales by each supplier in October 2023?",
            "Which are the top 5 cities generating the highest sales in 2023?",
            "What is the average discount given on orders in 2023?",
            "How many orders were shipped using each shipping method in 2023?",
            "What is the total number of orders placed by each customer in 2023?",
            "What is the average order fulfillment time by each shipping company in 2023?",
            "How many products are currently out of stock?",
            "Which product categories have the highest sales in 2023?",
            "What is the revenue contribution of each region in 2023?",
            "What is the average order value for the month of January 2023?",
            "Which customers have the highest lifetime value?",
            "How many units of each product were sold in March 2023?",
            "Which employees generated the highest sales in the first quarter of 2023?",
            "What is the average time taken to fulfill an order in February 2023?",
            "What is the customer retention rate for the year 2023?",
            "What is the average supplier lead time for each supplier in January 2023?",
            "What is the inventory turnover ratio for February 2023?",
            "What percentage of orders were delivered on or before the required date in July 2023?",
            "How many orders were placed by each customer in April 2023?",
            "Which products generated the highest sales revenue in the second quarter of 2023?",
            "What is the monthly total sales trend for the year 2023?",
            "Which shipping company has the lowest average shipping cost?",
            "What is the average order value by each employee?",
            "Which products are low in stock and need to be reordered?",
            "How many new customers were acquired in May 2023?",
            "Which regions have the highest sales?",
            "What are the top 5 selling products in 2023?",
            "What is the total sales revenue generated in the year 2023?",
            "What is the average order value for orders placed between January 1, 2023, and December 31, 2023?",
            "Which product has the highest sales volume in July 2023?",
            "Who are the top 5 customers by total purchase value?",
            "What is the customer lifetime value for each customer?",
            "How many products have been discontinued?",
            "What is the average order fulfillment time per month?",
            "Which employee generated the highest sales in the first quarter of 2023?",
            "What is the average shipping cost per order?",
            "Which shipping company has the highest on-time delivery rate?",
            "What is the total sales revenue for each month in 2023?",
            "Which suppliers have the shortest lead time?",
            "What is the inventory turnover ratio for each product category?",
            "How many orders were fulfilled on time in December 2023?",
            "Which cities have the highest number of customers?",
            "What is the employee sales performance by region?",
            "How many active suppliers are there in the database?",
            "What is the average discount applied to orders in 2023?",
            "Which product category has the highest total sales in 2023?",
            "What is the average delivery time for orders shipped by each shipping company?",
            "What is the average value of orders placed in the year 2023?",
            "How many units of each product were sold in January 2023?",
            "What are the total sales generated by each employee in Q1 2023?",
            "What is the average time taken to fulfill an order in 2023?",
            "What is the average lead time taken by each supplier to deliver products?",
            "What is the inventory turnover ratio for products in the year 2023?",
            "What is the average shipping cost per order in 2023?",
            "What is the on-time delivery rate for orders in 2023?",
            "Which product has the highest sales performance in Q1 2023?",
            "Which shipping company has the lowest average shipping cost per order?",
            "How many units of the most popular product were sold in each month of 2023?",
            "What are the average monthly sales generated by each region?",
            "Which products are nearing their reorder level?",
            "Which supplier provides the highest number of different products?",
            "What is the average discount given per order in 2023?",
            "Which employee has the highest total sales value in the year 2023?",
            "What is the total sales for the month of January 2023?",
            "What is the average order value for the year 2023?",
            "What are the top 5 products by quantity sold in the year 2023?",
            "How many orders did each employee fulfill in the first quarter of 2023?",
            "What is the average order fulfillment time for the month of February 2023?",
            "What is the retention rate of customers comparing the first half of 2023 to the previous year?",
            "What is the average lead time for suppliers in the month of March 2023?",
            "What is the inventory turnover ratio for the top-selling product in 2023?",
            "What is the shipping cost per order for the second quarter of 2023?",
            "Which shipping company has the highest on-time delivery rate for 2023?",
            "What are the total sales by each product category for the year 2023?",
            "How many orders have been placed by customers in Germany in the year 2023?",
            "Which employee has generated the highest sales in April 2023?",
            "Which supplier has the lowest average lead time in 2023?",
            "How many products are below the reorder level as of December 2023?",
            "What is the average discount applied on orders in the third quarter of 2023?",
            "Which employee has hired the most recent employee?",
            "What are the top 3 cities with the highest number of orders placed in 2023?",
            "What is the total sales for each month of 2023?",
            "What is the total sales revenue for the year 2023?",
            "Calculate the average order value for March 2023.",
            "What is the lifetime value of each customer?",
            "Which product had the highest number of units sold in Q1 2023?",
            "Identify the top 5 employees by total sales in December 2023.",
            "What is the average order fulfillment time in 2022?",
            "Calculate the customer retention rate for the year 2023.",
            "What is the average supplier lead time for January 2023?",
            "Find the inventory turnover ratio for product ID 7 for February 2023.",
            "Compute the average shipping cost per order in June 2023.",
            "What is the on-time delivery rate for July 2023?",
            "Which customer generated the most revenue in Q2 2023?",
            "Identify the least popular product based on units sold in 2023.",
            "Calculate the total sales per country for the year 2022.",
            "Determine the total sales generated by employee ID 3 for the year 2022.",
            "What was the most popular shipping method in 2023 and how many orders used it?",
            "Compute the average order value for Q4 2023, excluding any orders with discounts.",
            "Find the average time taken to ship orders in the region 'WA' for the year 2023.",
            "Which supplier delivered products the fastest in September 2023?",
            "Identify the product with the highest revenue in Q3 2023.",
            "What was the total sales revenue generated in the year 2023?",
            "What is the average order value for the month of September 2023?",
            "Which customers have purchased more than 5 different products?",
            "Which employee generated the highest sales revenue in March 2023?",
            "What is the average time taken to fulfill orders in 2023?",
            "Which products had zero sales in the first quarter of 2023?",
            "What is the average shipping cost per order for the month of July 2023?",
            "Which suppliers delivered products with an average lead time of less than a week?",
            "What is the on-time delivery rate for orders shipped by 'Speedy Express'?",
            "How many distinct customers placed orders in 2023 compared to 2022?",
            "Which product categories have the highest inventory turnover ratio for August 2023?",
            "What is the total number of orders fulfilled by each shipping company in 2023?",
            "Which product has the highest sales revenue in the northeastern region?",
            "Which employees have been with the company for more than 10 years?",
            "What is the total sales revenue generated per region in 2023?",
            "What are the top 5 products by total sales revenue?",
            "How many orders were delayed past the required date in 2023?",
            "What is the average discount applied across all orders in 2023?",
            "Which month had the highest total sales revenue in 2023?",
            "Which customer has the highest lifetime value to the company?",
            "How many orders were fulfilled within the required time frame in 2023?",
            "What is the average order fulfillment time for orders placed in 2023?",
            "Which employee generated the highest sales during the first quarter of 2023?",
            "Which product has the highest sales volume (quantity sold) in February 2023?",
            "What is the total number of unique customers who placed orders in 2023?",
            "How many suppliers delivered products on time in 2022?",
            "What is the inventory turnover ratio for product ID 1 for the month of March 2023?",
            "What is the average shipping cost per order for orders shipped via shipper ID 2?",
            "What is the on-time delivery rate for the month of April 2023?",
            "How many orders were placed by customers located in the USA in 2022?",
            "Which product category generated the highest revenue in Q2 of 2023?",
            "What is the monthly sales trend for 2023?",
            "Which supplier has the shortest average lead time for delivering products in 2023?",
            "What is the total number of orders where the quantity ordered exceeded 50 units in 2023?",
            "What is the average number of orders placed per customer in 2023?",
            "Which employee has the highest average order value in the second half of 2023?",
            "What is the average order value for orders placed between January 2023 and December 2023?",
            "Which customer has generated the highest lifetime value?",
            "How many units of each product were sold in June 2023?",
            "Which employee generated the highest sales revenue in the first quarter of 2023?",
            "Which supplier has the shortest average lead time for delivering products?",
            "What is the inventory turnover ratio for products in the second quarter of 2023?",
            "What is the average shipping cost per order in December 2023?",
            "What percentage of orders were delivered on or before the required date in the third quarter of 2023?",
            "Which employee territory generated the most sales revenue in 2023?",
            "What is the total number of orders placed by each customer?",
            "What is the total sales revenue generated by each product category in 2023?",
            "What is the average discount applied on orders shipped in July 2023?",
            "Which products are below their reorder level as of today?",
            "What is the average unit price of products provided by each supplier?",
            "How many orders were shipped by each shipping company in 2023?",
            "What is the total number of units in stock for each product category?",
            "Which employee has the highest average order value in 2023?",
            "What is the total sales revenue generated in the first quarter of 2023?",
            "Which product had the highest sales in 2022?",
            "What is the average order value for all orders placed in December 2022?",
            "Which employees achieved the highest total sales in Q2 of 2023?",
            "Which suppliers have the shortest average lead times?",
            "What is the customer lifetime value for each customer who made purchases in 2021?",
            "What percentage of orders were delivered on time in 2022?",
            "What is the total sales revenue generated by country in 2022?",
            "Which products are currently below their reorder level?",
            "How does the inventory turnover ratio vary each month in 2023?",
            "Which customers placed the most orders in 2022?",
            "What is the average order fulfillment time by month for 2023?",
            "Have there been any patterns in the shipping costs per order over the last year?",
            "Which categories of products have the highest sales revenue in 2023?",
            "What is the retention rate of customers who made their first purchase in January 2022?",
            "Which regions have generated the highest sales revenue in 2022?",
            "What is the average discount applied to orders that include ProductID 42?",
            "Which shipping method is most commonly used for orders in 2023?",
            "What is the average number of products in stock for each product category?",
            "Which employees are managing the highest number of territories?",
            "What is the total sales revenue generated in the year 2022?",
            "What is the total sales revenue by each employee for each month in 2022?",
            "Which product has the highest total sales in 2022?",
            "What is the average order value for the year 2022?",
            "How many orders were shipped on time in 2022?",
            "What is the average time taken to fulfill an order in 2022?",
            "How many customers have placed more than three orders in 2022?",
            "Which supplier has the shortest average lead time for delivery in 2022?",
            "What is the total number of products sold in 2022?",
            "What is the total number of orders placed by each customer in 2022?",
            "What is the total revenue generated from each product sold in 2022?",
            "What is the total freight cost for orders shipped in 2022?",
            "What is the customer retention rate for 2022?",
            "What is the average shipping cost per order in 2022?",
            "Which employee generated the highest sales in 2022?",
            "What is the total inventory turnover ratio for the year 2022?",
            "What is the customer lifetime value for each customer up to 2022?",
            "Which shipping company delivered the highest number of orders on time in 2022?",
            "What is the performance of products based on sales and inventory levels for each month in 2022?",
            "What is the average discount provided on orders in 2022?",
            "Which region generated the highest total sales in 2022?",
            "How many orders were placed in each quarter of 2022?",
            "What is the total number of units on order for each product in 2022?",
            "Which customers are from the USA and have placed orders in 2022?",
            "What is the total sales generated in March 2023?",
            "What is the average order value for Q1 2023?",
            "How many units of each product were sold in the year 2023?",
            "What is the total sales generated by employee with EmployeeID=5 in January 2023?",
            "What is the customer retention rate for the year 2022?",
            "Which supplier has the shortest average lead time in April 2023?",
            "What is the inventory turnover ratio for the product with ProductID=10 in 2022?",
            "What is the average shipping cost per order in the first half of 2023?",
            "What percentage of orders were delivered on or before the required date in 2023?",
            "List the top 5 products by sales for Q2 2023.",
            "What are the total sales and the number of orders for each customer located in the USA in 2023?",
            "Which employee generated the most sales in Q4 2023?",
            "Which product category had the highest sales in 2023?",
            "What is the total freight cost for orders shipped using ShipperID=2 in 2023?",
            "What are the number of orders and total sales for each month in the year 2023?",
            "Which territory had the highest average order value in 2023?",
            "For each employee, what is the average number of orders handled per month in 2023?",
            "Which customer placed the highest number of orders in 2023?",
            "What is the average order value for orders placed in December 2023?",
            "Which product had the highest sales volume in Q1 2023?",
            "Which employee achieved the highest sales in January 2023?",
            "What is the average order fulfillment time for orders shipped in February 2023?",
            "What is the customer retention rate from January 2022 to January 2023?",
            "Which supplier has the shortest lead time for delivering products?",
            "What is the inventory turnover ratio for March 2023?",
            "What are the top 5 cities with the highest number of orders placed?",
            "Which shipping method is used most frequently for orders shipped in 2023?",
            "Which products need to be reordered soon based on their current stock levels?",
            "How many distinct customers placed orders in Q2 2023?",
            "What is the total freight cost incurred in shipping to 'Germany' in 2023?",
            "Which employees have managed more than 100 orders in 2023?",
            "What is the most common product category ordered in 2023?",
            "What is the average discount provided on all orders in Q4 2023?",
            "What are the total sales per region for the year 2023?",
            "Who are the top 10 customers by lifetime value?",
            "What is the performance of each product in terms of quantity sold for the month of January 2023?",
            "Which employee generated the highest sales in December 2022?",
            "What is the average order fulfillment time for the second quarter of 2022?",
            "What is the lead time for each supplier in the month of November 2022?",
            "What is the inventory turnover ratio for the product with ProductID 5 in March 2022?",
            "What is the average shipping cost per order for the third quarter of 2022?",
            "What is the on-time delivery rate for orders placed in 2022?",
            "What is the total sales revenue generated by the top 5 employees in January 2023?",
            "What products had the highest and lowest sales performance in December 2022?",
            "What is the average discount given on orders in 2022?",
            "Which customer placed the most orders in 2022?",
            "What is the most frequently ordered product in 2022?",
            "What is the total sales value of orders shipped by each shipping company in 2022?",
            "What is the monthly trend of average order value for 2022?",
            "Which supplier has the best lead time performance in the first half of 2022?",
            "What is the average time taken from order placement to shipping for orders that were fulfilled on-time in the year 2022?",
            "What is the total sales revenue generated in Q1 of 2023?",
            "Which product had the highest sales in terms of quantity in March 2023?",
            "Which employees generated the highest sales revenue in April 2023?",
            "What is the average time taken to fulfill orders in the first half of 2023?",
            "What is the total revenue generated from customers in the USA?",
            "Which supplier has the highest lead time in delivering products for Q2 of 2023?",
            "What is the inventory turnover ratio for 'ProductID' 101 in June 2023?",
            "What is the on-time delivery rate for January 2023?",
            "Who are the top 5 customers by revenue for the year 2023?",
            "What is the total shipping cost per order for Q3 of 2023?",
            "What is the product performance for 'ProductID' 102 for every month of 2023?",
            "Which city has the highest sales revenue in Q4 of 2023?",
            "What is the monthly sales trend for 'CategoryID' 1 in 2023?",
            "Which employees exceeded their sales targets in 2023?",
            "What is the most frequently ordered product in 2023?",
            "What is the total quantity of 'ProductID' 105 sold in February 2023?",
            "Which region has the longest order fulfillment time in 2023?",
            "How many unique customers placed orders in 2022?",
            "Which employee has generated the highest sales in February 2023?",
            "What is the performance of each product based on sales quantities in Q1 2023?",
            "Calculate the Customer Lifetime Value (CLV) for each customer.",
            "What is the average time taken to fulfill orders each month in 2023?",
            "What is the customer retention rate in 2023?",
            "Which supplier has the shortest average lead time in 2023?",
            "What is the average shipping cost per order in May 2023?",
            "What percentage of orders were delivered on or before the required date in April 2023?",
            "List the top 5 cities with the highest number of orders in Q2 2023.",
            "Identify the most frequently ordered product category in 2023.",
            "Who are the top 3 customers by total sales in 2023?",
            "Calculate the total freight cost for each shipping company in 2023.",
            "What are the sales trends by month in 2023?",
            "Determine the total number of orders processed by each employee in 2023.",
            "Which region has the highest sales in 2023?",
            "What are the total and average discount percentages applied on orders in 2023?",
            "What is the total sales for the year 2023?",
            "Which customer generated the highest lifetime value?",
            "What are the total quantities ordered for each product in February 2023?",
            "What are the total sales generated by each employee in March 2023?",
            "What is the average order fulfillment time in April 2023?",
            "What is the average lead time for suppliers in May 2023?",
            "What is the inventory turnover ratio for June 2023?",
            "What is the average shipping cost per order in July 2023?",
            "What percentage of orders were delivered on time in August 2023?",
            "Which products are discontinued?",
            "What is the total number of orders each customer placed in 2023?",
            "Which products have the highest unit prices?",
            "What are the average order fulfillment times for each shipping company in 2023?",
            "Which employee has the highest sales in Q1 2023?",
            "What is the total sales for each category in the year 2023?",
            "Which region has the highest number of customers?",
            "What is the total number of orders shipped by each shipper in 2023?",
            "What is the total freight cost for each order in September 2023?",
            "What is the average reorder level for all products?",
            "What is the average order value per month for 2023?",
            "Who is the top customer by lifetime value?",
            "Which product had the highest sales volume in January 2023?",
            "How many days on average does it take to fulfill an order?",
            "What is the customer retention rate for 2023?",
            "What is the average lead time for supplier deliveries grouped by supplier?",
            "What is the inventory turnover ratio for each product in 2023?",
            "What percentage of orders were delivered on-time in 2023?",
            "How many orders were placed by each customer in 2023?",
            "What is the total sales generated by each employee in 2023?",
            "Which region has the highest number of orders in 2023?",
            "What is the total quantity of products ordered in 2023?",
            "How many customers are from the USA?",
            "Which product generated the most revenue in 2023?",
            "What is the average discount applied per order in 2023?",
            "What is the total revenue generated from orders fulfilled by a specific shipper in 2023?",
            "Which customer placed the first order in 2023?",
            "What is the average order value for orders placed in December 2022?",
            "How many units of each product were sold in January 2022?",
            "What is the total sales generated by each employee in Q1 2022?",
            "What is the average order fulfillment time for orders placed in 2022?",
            "What percentage of customers who made a purchase in 2021 returned to make a purchase in 2022?",
            "What is the average lead time for suppliers in Q1 2022?",
            "What is the inventory turnover ratio for product ID 5 in February 2022?",
            "What is the average shipping cost per order in 2021?",
            "What is the on-time delivery rate for orders placed in January 2022?",
            "Which shipping company has the highest average on-time delivery rate?",
            "Which employees have the highest sales performance in March 2022?",
            "What is the most popular product category based on total units sold in the first half of 2022?",
            "Which supplier offers the fastest average delivery time across all products?",
            "How many customers from London placed orders in Q2 2022?",
            "What is the average sales per customer for customers located in France?",
            "Which product had the highest sales revenue in 2022?",
            "How many orders were fulfilled on or before the required date in Q3 2022?",
            "What is the total quantity of goods sold by each supplier in 2021?",
            "What is the total sales revenue generated in 2023?",
            "What is the average order value for June 2023?",
            "Which customers have generated the highest lifetime value?",
            "Which products have the highest number of units sold in July 2023?",
            "How much sales did each employee generate in Q1 2023?",
            "What's the average order fulfillment time in August 2023?",
            "Which suppliers have the best average lead time in 2023?",
            "What is the inventory turnover ratio for the product 'Chai' in May 2023?",
            "What's the on-time delivery rate for the last quarter of 2023?",
            "Which month had the highest total sales in 2023?",
            "What are the top 5 products based on sales revenue in 2023?",
            "List the monthly total sales and average order value for 2023.",
            "Which customers placed orders that were not delivered on time in 2023?",
            "What's the distribution of order fulfillment time across different shipping methods?",
            "How many orders were placed by each customer in Q2 2023?",
            "What's the total freight charge for orders shipped to 'USA' in November 2023?",
            "Which customer has placed the most orders in 2023?",
            "Analyze the sales performance of each product category in 2023.",
            "How has product performance varied monthly for each product in 2023?",
            "What are the total sales generated by each employee on a monthly basis?",
            "What is the on-time delivery rate for the year 2023?",
            "What is the average supplier lead time for 2023?",
            "What is the inventory turnover ratio on a monthly basis?",
            "What is the average shipping cost per order for 2023?",
            "How many orders were placed and fulfilled in each month of 2023?",
            "Which products have the highest inventory turnover ratio?",
            "What are the top 5 products by total sales in 2023?",
            "How do total sales vary by country for the year 2023?",
            "Which employees have the highest sales performance in 2023?",
            "What is the distribution of orders by shipping method in 2023?",
            "What are the top 5 suppliers by total sales in 2023?",
            "What is the average discount given in orders for the year 2023?",
            "How does the average order value compare between different regions?",
            "What is the average value of orders placed in January 2023?",
            "What are the total sales generated by each customer?",
            "Which products have the highest sales in terms of quantity sold?",
            "How much sales revenue did each employee generate in March 2023?",
            "What is the average time taken to fulfill orders in February 2023?",
            "What percentage of customers placed at least one order in both 2022 and 2023?",
            "What is the lead time for each supplier based on order data in 2023?",
            "What is the monthly inventory turnover ratio for the year 2023?",
            "What is the average shipping cost per order in Q1 2023?",
            "What percentage of orders were delivered on time in April 2023?",
            "How many products are discontinued?",
            "Which suppliers provided products with the shortest lead times in 2023?",
            "What is the year-over-year growth in total sales from 2022 to 2023?",
            "How many orders were placed by each customer in March 2023?",
            "What is the total number of units sold for each product in 2023?",
            "What is the most profitable product category in 2023?",
            "What is the average order fulfillment time for each month in 2023?",
            "Which employees generated the highest sales in Q3 2023?",
            "What is the average order value for orders placed in June 2023?",
            "Which customers have generated the highest lifetime value for the company?",
            "What are the top 5 best-performing products in terms of quantity sold in the last month?",
            "How many products were low on stock (below reorder level) in August 2023?",
            "Which employees generated the most sales revenue in Q1 2023?",
            "What is the inventory turnover ratio for the month of July 2023?",
            "What is the average shipping cost per order for the current year?",
            "Which product categories have the highest sales revenue?",
            "Which cities and countries generate the most sales revenue?",
            "What is the average discount given to customers in 2022?",
            "What is the average sales revenue per region for the year 2023?",
            "Which shippers have the highest on-time delivery rates?",
            "Which product has the highest unit price but lowest sales quantity?",
            "What is the average number of units in stock for all products?",
            "Which customers have placed the most orders in the last quarter?",
            "What is the average order value for each month in 2023?",
            "Which products have the highest sales volume in 2023?",
            "Who are the top 5 employees by total sales in 2023?",
            "What is the average order fulfillment time in 2023?",
            "What is the average supplier lead time for each supplier in 2023?",
            "What is the inventory turnover ratio for each product category in 2023?",
            "How many customers placed orders more than once in 2023?",
            "Which product category generated the highest revenue in 2023?",
            "What is the total sales generated by each employee in Q1 2023?",
            "Which shipping company is the most cost-effective based on average freight cost per order in 2023?",
            "What is the average time taken to ship orders for each product category in 2023?",
            "What is the distribution of orders by shipping region for 2023?",
            "How many orders included a discount in 2023?",
            "Which customers have the most orders delivered late in 2023?"
        ],
        "sql_queries": [
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC LIMIT 1",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31'",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-06-30') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
            "SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "SELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice * (1 - [Order Details].Discount)) AS product_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-08-01' AND '2023-08-31' GROUP BY products.ProductID ORDER BY product_sales DESC LIMIT 1",
            "SELECT territories.TerritoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS territory_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID WHERE orders.OrderDate BETWEEN '2023-09-01' AND '2023-09-30' GROUP BY territories.TerritoryID",
            "SELECT shippers.ShipperID, COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-10-31' GROUP BY shippers.ShipperID ORDER BY on_time_delivery_rate DESC LIMIT 1",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-11-01' AND '2023-11-30'",
            "SELECT categories.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS category_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-12-01' AND '2023-12-31' GROUP BY categories.CategoryID ORDER BY category_sales DESC LIMIT 1",
            "SELECT EXTRACT(MONTH FROM orders.OrderDate) AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS monthly_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY EXTRACT(MONTH FROM orders.OrderDate)",
            "SELECT (SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31') / (SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-03-31') AS sales_growth_Q1",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID ORDER BY total_sales DESC LIMIT 5",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY products.ProductID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30' GROUP BY products.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-08-01' AND '2023-08-31'",
            "SELECT SUM(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 ELSE 0 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-09-01' AND '2023-09-30'",
            "SELECT products.SupplierID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-10-31' GROUP BY products.SupplierID",
            "SELECT orders.ShipCity, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipCity ORDER BY total_sales DESC LIMIT 5",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT orders.ShipVia, COUNT(orders.OrderID) AS total_orders FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipVia",
            "SELECT orders.CustomerID, COUNT(orders.OrderID) AS total_orders FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.CustomerID",
            "SELECT shippers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.CompanyName",
            "SELECT products.ProductName FROM products WHERE products.UnitsInStock = 0",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName",
            "SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID JOIN region ON territories.RegionID = region.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY region.RegionDescription",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY products.ProductID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN products ON orders.OrderID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "SELECT COUNT(orders.OrderID) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31' AND orders.ShippedDate <= orders.RequiredDate",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS orders_placed FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY customers.CustomerID",
            "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS sales_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY products.ProductID ORDER BY sales_revenue DESC",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month ORDER BY month",
            "SELECT shippers.CompanyName, AVG(orders.Freight) AS avg_shipping_cost FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY avg_shipping_cost ASC",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID",
            "SELECT products.ProductID, products.ProductName FROM products WHERE products.UnitsInStock + products.UnitsOnOrder < products.ReorderLevel",
            "SELECT COUNT(DISTINCT customers.CustomerID) AS new_customers FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
            "SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS region_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID JOIN region ON customers.Region = region.RegionID GROUP BY region.RegionDescription ORDER BY region_sales DESC",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID, products.ProductName ORDER BY total_quantity DESC LIMIT 5",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS total_quantity_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31' GROUP BY products.ProductName ORDER BY total_quantity_sold DESC LIMIT 1",
            "SELECT customers.CustomerID, customers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_purchase_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID, customers.CompanyName ORDER BY total_purchase_value DESC LIMIT 5",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID",
            "SELECT COUNT(*) AS discontinued_count FROM products WHERE products.Discontinued = 1",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders GROUP BY month",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID, employees.FirstName, employees.LastName ORDER BY employee_sales DESC LIMIT 1",
            "SELECT AVG(orders.Freight) AS avg_shipping_cost_per_order FROM orders",
            "SELECT shippers.CompanyName, COUNT(orders.OrderID) WHERE orders.ShippedDate <= orders.RequiredDate / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY on_time_delivery_rate DESC LIMIT 1",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month ORDER BY month",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName ORDER BY avg_lead_time ASC LIMIT 5",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName ORDER BY inventory_turnover_ratio DESC",
            "SELECT COUNT(*) AS on_time_fulfillment_count FROM orders WHERE orders.RequiredDate >= orders.ShippedDate AND orders.OrderDate BETWEEN '2023-12-01' AND '2023-12-31'",
            "SELECT customers.City, COUNT(customers.CustomerID) AS customer_count FROM customers GROUP BY customers.City ORDER BY customer_count DESC",
            "SELECT region.RegionDescription, employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID JOIN region ON territories.RegionID = region.RegionID GROUP BY region.RegionDescription, employees.EmployeeID ORDER BY employee_sales DESC",
            "SELECT COUNT(DISTINCT suppliers.SupplierID) AS active_supplier_count FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 0",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName ORDER BY total_sales DESC",
            "SELECT shippers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_delivery_time FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY avg_delivery_time",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.ProductID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE [Order Details].OrderID IN (SELECT OrderID FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31')",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT COUNT(orders.OrderID) FILTER (WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID ORDER BY product_performance DESC LIMIT 1",
            "SELECT shippers.ShipperID, AVG(orders.Freight) AS avg_shipping_cost FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.ShipperID ORDER BY avg_shipping_cost ASC LIMIT 1",
            "SELECT products.ProductID, DATE_TRUNC('month', orders.OrderDate) AS month, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.ProductID, month ORDER BY units_sold DESC LIMIT 1",
            "SELECT territories.RegionID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT DATE_TRUNC('month', orders.OrderDate)) AS avg_monthly_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID GROUP BY territories.RegionID",
            "SELECT products.ProductID, products.ProductName FROM products WHERE products.UnitsInStock <= products.ReorderLevel",
            "SELECT suppliers.SupplierID, COUNT(DISTINCT products.ProductID) AS product_count FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY product_count DESC LIMIT 1",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 1",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS avg_order_value FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT p.ProductID, SUM(od.Quantity) AS total_quantity_sold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY p.ProductID ORDER BY total_quantity_sold DESC LIMIT 5",
            "SELECT e.EmployeeID, COUNT(o.OrderID) AS total_orders FROM orders o JOIN employees e ON o.EmployeeID = e.EmployeeID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY e.EmployeeID",
            "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS avg_fulfillment_time FROM orders o WHERE o.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "(SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-06-30') / (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate < '2023-01-01') AS customer_retention_rate",
            "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS avg_lead_time FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY p.SupplierID",
            "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE p.ProductID = (SELECT od.ProductID FROM [Order Details] od GROUP BY od.ProductID ORDER BY SUM(od.Quantity) DESC LIMIT 1)",
            "SELECT AVG(o.Freight) AS avg_shipping_cost FROM orders o WHERE o.OrderDate BETWEEN '2023-04-01' AND '2023-06-30'",
            "SELECT s.CompanyName, COUNT(o.OrderID) FILTER (WHERE o.ShippedDate <= o.RequiredDate) / COUNT(o.OrderID) AS on_time_delivery_rate FROM orders o JOIN shippers s ON o.ShipVia = s.ShipperID GROUP BY s.CompanyName ORDER BY on_time_delivery_rate DESC LIMIT 1",
            "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY c.CategoryName",
            "SELECT COUNT(o.OrderID) FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE c.Country = 'Germany' AND o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS employee_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN employees e ON o.EmployeeID = e.EmployeeID WHERE o.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY e.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT s.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS avg_lead_time FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY s.SupplierID ORDER BY avg_lead_time ASC LIMIT 1",
            "SELECT p.ProductID, p.ProductName FROM products p WHERE p.UnitsInStock < p.ReorderLevel",
            "SELECT AVG(od.Discount) AS avg_discount FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-07-01' AND '2023-09-30'",
            "SELECT e.FirstName, e.LastName FROM employees e ORDER BY e.HireDate DESC LIMIT 1",
            "SELECT c.City, COUNT(o.OrderID) AS total_orders FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY c.City ORDER BY total_orders DESC LIMIT 3",
            "SELECT EXTRACT(MONTH FROM o.OrderDate) AS month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY EXTRACT(MONTH FROM o.OrderDate)",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS total_units FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductName ORDER BY total_units DESC LIMIT 1",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-12-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 5",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT (SELECT COUNT(DISTINCT Temp1.CustomerID) FROM (SELECT CustomerID FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY 1 HAVING COUNT(OrderID) > 1) AS Temp1) / (SELECT COUNT(DISTINCT Temp2.CustomerID) FROM (SELECT CustomerID FROM orders WHERE OrderDate < '2023-01-01' GROUP BY 1 HAVING COUNT(OrderID) > 1) AS Temp2) AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].ProductID = 7 AND orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
            "SELECT COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate) / COUNT(OrderID) AS on_time_delivery_rate FROM orders WHERE OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "SELECT customers.CustomerID, customers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY customers.CustomerID ORDER BY total_revenue DESC LIMIT 1",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS total_units FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID ORDER BY total_units ASC LIMIT 1",
            "SELECT customers.Country, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customers.Country",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.EmployeeID = 3 AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT ShipVia, COUNT(*) AS order_count FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ShipVia ORDER BY order_count DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31' AND [Order Details].Discount = 0",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_shipping_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' AND orders.ShipRegion = 'WA'",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-09-01' AND '2023-09-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-09-30' GROUP BY products.ProductName ORDER BY total_revenue DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-09-01' AND '2023-09-30'",
            "SELECT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID, customers.CompanyName HAVING COUNT(DISTINCT [Order Details].ProductID) > 5",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT products.ProductID, products.ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID LEFT JOIN orders ON [Order Details].OrderID = orders.OrderID AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' WHERE [Order Details].OrderID IS NULL",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID HAVING AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) < 7",
            "SELECT COUNT(orders.OrderID) * 100.0 / (SELECT COUNT(*) FROM orders WHERE orders.ShipVia = (SELECT ShipperID FROM shippers WHERE CompanyName = 'Speedy Express')) AS on_time_delivery_rate FROM orders WHERE orders.ShipVia = (SELECT ShipperID FROM shippers WHERE CompanyName = 'Speedy Express') AND orders.ShippedDate <= orders.RequiredDate",
            "SELECT (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') AS customer_count_2023, (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31') AS customer_count_2022",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE MONTH(orders.OrderDate) = 8 AND YEAR(orders.OrderDate) = 2023 GROUP BY categories.CategoryName",
            "SELECT shippers.CompanyName, COUNT(orders.OrderID) AS total_orders FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.CompanyName",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS sales_revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN territories ON orders.EmployeeID = territories.TerritoryID WHERE territories.RegionID = (SELECT RegionID FROM region WHERE RegionDescription = 'Northeast') GROUP BY products.ProductName ORDER BY sales_revenue DESC LIMIT 1",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName FROM employees WHERE DATEDIFF(CURDATE(), employees.HireDate) > 365*10",
            "SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID JOIN region ON territories.RegionID = region.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY region.RegionDescription",
            "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY total_sales DESC LIMIT 5",
            "SELECT COUNT(orders.OrderID) AS delayed_orders FROM orders WHERE orders.ShippedDate > orders.RequiredDate AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT AVG([Order Details].Discount) AS average_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS order_month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY order_month ORDER BY total_sales DESC LIMIT 1",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC LIMIT 1",
            "SELECT COUNT(orders.OrderID) AS on_time_orders FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 1",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28' GROUP BY products.ProductID ORDER BY total_quantity DESC LIMIT 1",
            "SELECT COUNT(DISTINCT orders.CustomerID) AS total_customers FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT suppliers.SupplierID, COUNT(DISTINCT orders.OrderID) AS on_time_deliveries FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY suppliers.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.ProductID = 1 AND orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31'",
            "SELECT AVG(orders.Freight) AS avg_shipping_cost FROM orders WHERE orders.ShipVia = 2",
            "SELECT COUNT(orders.OrderID) FILTER (WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30'",
            "SELECT COUNT(orders.OrderID) AS total_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.Country = 'USA' AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY categories.CategoryName ORDER BY total_revenue DESC LIMIT 1",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS monthly_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT suppliers.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY suppliers.SupplierID ORDER BY avg_lead_time ASC LIMIT 1",
            "SELECT COUNT(orders.OrderID) AS large_orders FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].Quantity > 50 AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT AVG(order_count) AS avg_orders_per_customer FROM (SELECT orders.CustomerID, COUNT(orders.OrderID) AS order_count FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.CustomerID) AS customer_orders",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY avg_order_value DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC LIMIT 1",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE MONTH(orders.OrderDate) = 6 AND YEAR(orders.OrderDate) = 2023 GROUP BY products.ProductID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30'",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE MONTH(orders.OrderDate) = 12 AND YEAR(orders.OrderDate) = 2023",
            "SELECT COUNT(orders.OrderID) FILTER (WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-09-30'",
            "SELECT territories.TerritoryDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID WHERE YEAR(orders.OrderDate) = 2023 GROUP BY territories.TerritoryDescription ORDER BY total_sales DESC LIMIT 1",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS total_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2023 GROUP BY categories.CategoryName",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE MONTH(orders.ShippedDate) = 7 AND YEAR(orders.ShippedDate) = 2023",
            "SELECT products.ProductID, products.ProductName FROM products WHERE products.UnitsInStock < products.ReorderLevel",
            "SELECT suppliers.CompanyName, AVG(products.UnitPrice) AS avg_unit_price FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName",
            "SELECT shippers.CompanyName, COUNT(orders.OrderID) AS total_orders FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE YEAR(orders.OrderDate) = 2023 GROUP BY shippers.CompanyName",
            "SELECT categories.CategoryName, SUM(products.UnitsInStock) AS total_units_in_stock FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName",
            "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE YEAR(orders.OrderDate) = 2023 GROUP BY employees.EmployeeID ORDER BY avg_order_value DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID ORDER BY total_quantity DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-12-01' AND '2022-12-31'",
            "SELECT employees.EmployeeID, employees.LastName, employees.FirstName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY employees.EmployeeID ORDER BY total_sales DESC",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID ORDER BY avg_lead_time ASC",
            "SELECT customers.CustomerID, customers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY customers.CustomerID",
            "SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT customers.Country, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customers.Country",
            "SELECT products.ProductID, products.ProductName FROM products WHERE products.UnitsInStock < products.ReorderLevel",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month",
            "SELECT customers.CustomerID, customers.CompanyName, COUNT(orders.OrderID) AS total_orders FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customers.CustomerID ORDER BY total_orders DESC",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, AVG(orders.Freight) AS avg_shipping_cost FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY month",
            "SELECT categories.CategoryID, categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID ORDER BY total_sales DESC",
            "SELECT COUNT(DISTINCT orders.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate FROM orders",
            "SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID JOIN territories ON customers.Region = territories.RegionID JOIN region ON territories.RegionID = region.RegionID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY region.RegionDescription",
            "SELECT products.ProductID, products.ProductName, AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.ProductID = 42 GROUP BY products.ProductID",
            "SELECT shippers.CompanyName, COUNT(orders.OrderID) AS total_orders FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.CompanyName ORDER BY total_orders DESC",
            "SELECT categories.CategoryID, categories.CategoryName, AVG(products.UnitsInStock) AS avg_units_in_stock FROM products JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID",
            "SELECT managers.EmployeeID, managers.LastName, managers.FirstName, COUNT(employeeTerritories.TerritoryID) AS managed_territories FROM employees AS managers JOIN employeeTerritories ON managers.EmployeeID = employeeTerritories.EmployeeID WHERE managers.EmployeeID IN (SELECT employees.ReportsTo FROM employees) GROUP BY managers.EmployeeID ORDER BY managed_territories DESC",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT employees.EmployeeID, MONTH(orders.OrderDate) AS order_month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY employees.EmployeeID, order_month",
            "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID ORDER BY total_sales DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT COUNT(orders.OrderID) AS on_time_orders FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customers.CustomerID HAVING order_count > 3",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.SupplierID ORDER BY avg_lead_time ASC LIMIT 1",
            "SELECT SUM([Order Details].Quantity) AS total_units_sold FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS total_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customers.CustomerID",
            "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID",
            "SELECT SUM(orders.Freight) AS total_freight_cost FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2022-01-01') AS customer_retention_rate",
            "SELECT AVG(orders.Freight) AS avg_shipping_cost FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 1",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate <= '2022-12-31' GROUP BY customers.CustomerID",
            "SELECT shippers.CompanyName, COUNT(orders.OrderID) AS on_time_orders FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY shippers.CompanyName ORDER BY on_time_orders DESC LIMIT 1",
            "SELECT products.ProductID, MONTH(orders.OrderDate) AS order_month, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID, order_month",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT territories.RegionID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY territories.RegionID ORDER BY total_sales DESC LIMIT 1",
            "SELECT QUARTER(orders.OrderDate) AS order_quarter, COUNT(orders.OrderID) AS total_orders FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY order_quarter",
            "SELECT products.ProductID, SUM(products.UnitsOnOrder) AS units_on_order FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID",
            "SELECT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE customers.Country = 'USA' AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE employees.EmployeeID=5 AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2022-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' AND products.ProductID = 10",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-06-30'",
            "SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY products.ProductID ORDER BY total_sales DESC LIMIT 5",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales, COUNT(orders.OrderID) AS total_orders FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.Country = 'USA' AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 1",
            "SELECT categories.CategoryID, categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID",
            "SELECT SUM(orders.Freight) AS total_freight_cost FROM orders WHERE orders.ShipVia = 2 AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT MONTH(orders.OrderDate) AS order_month, YEAR(orders.OrderDate) AS order_year, COUNT(orders.OrderID) AS total_orders, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY YEAR(orders.OrderDate), MONTH(orders.OrderDate)",
            "SELECT territories.TerritoryID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employeeTerritories ON orders.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID GROUP BY territories.TerritoryID ORDER BY avg_order_value DESC LIMIT 1",
            "SELECT employees.EmployeeID, AVG(order_count) AS avg_orders_per_month FROM (SELECT employees.EmployeeID, COUNT(orders.OrderID) AS order_count, MONTH(orders.OrderDate) AS order_month FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID, MONTH(orders.OrderDate)) AS temp GROUP BY employees.EmployeeID",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS total_orders FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID ORDER BY total_orders DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-12-01' AND '2023-12-31'",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID ORDER BY product_performance DESC LIMIT 1",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.ShippedDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2023-01-01') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2022-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31'",
            "SELECT orders.ShipCity, COUNT(orders.OrderID) AS num_orders FROM orders GROUP BY orders.ShipCity ORDER BY num_orders DESC LIMIT 5",
            "SELECT orders.ShipVia, COUNT(orders.OrderID) AS shipping_count FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipVia ORDER BY shipping_count DESC LIMIT 1",
            "SELECT products.ProductID, products.ProductName, products.UnitsInStock FROM products WHERE products.UnitsInStock <= products.ReorderLevel",
            "SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30'",
            "SELECT SUM(orders.Freight) AS total_freight_cost FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' AND orders.ShipCountry = 'Germany'",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS order_count FROM orders JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID HAVING order_count > 100",
            "SELECT categories.CategoryName, COUNT([Order Details].OrderID) AS order_count FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName ORDER BY order_count DESC LIMIT 1",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31'",
            "SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID JOIN region ON customers.Region = region.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY region.RegionDescription",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC LIMIT 10",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.ProductID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2022-12-01' AND '2022-12-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2022-04-01' AND '2022-06-30'",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN products ON orders.OrderID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-11-01' AND '2022-11-30' GROUP BY products.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.ProductID = 5 AND orders.OrderDate BETWEEN '2022-03-01' AND '2022-03-31'",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2022-07-01' AND '2022-09-30'",
            "SELECT COUNT(orders.OrderID) WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 5",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-12-01' AND '2022-12-31' GROUP BY products.ProductID ORDER BY product_performance DESC",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customers.CustomerID ORDER BY order_count DESC LIMIT 1",
            "SELECT products.ProductID, COUNT([Order Details].OrderID) AS order_count FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID ORDER BY order_count DESC LIMIT 1",
            "SELECT shippers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY shippers.CompanyName",
            "SELECT MONTH(orders.OrderDate) AS order_month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY order_month ORDER BY order_month",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, products.OrderDate)) AS supplier_lead_time FROM orders JOIN products ON orders.ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_processing_time FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY products.ProductName ORDER BY total_quantity DESC LIMIT 1",
            "SELECT employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY employees.EmployeeID ORDER BY total_sales DESC",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-06-30'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.Country = 'USA'",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY suppliers.SupplierID ORDER BY avg_lead_time DESC",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].ProductID = 101 AND orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
            "SELECT COUNT(orders.OrderID) WHERE orders.ShippedDate <= orders.RequiredDate / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "SELECT customers.CustomerID, customers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID ORDER BY total_revenue DESC LIMIT 5",
            "SELECT AVG(orders.Freight) AS avg_shipping_cost FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-09-30'",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE [Order Details].ProductID = 102 AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY MONTH(orders.OrderDate)",
            "SELECT orders.ShipCity, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31' GROUP BY orders.ShipCity ORDER BY total_revenue DESC",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.CategoryID = 1 AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m') ORDER BY month",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID HAVING total_sales > 100000",
            "SELECT products.ProductID, products.ProductName, COUNT([Order Details].OrderID) AS order_count FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY order_count DESC LIMIT 1",
            "SELECT SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].ProductID = 105 AND orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "SELECT region.RegionDescription, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID JOIN region ON customers.Region = region.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY region.RegionDescription",
            "SELECT COUNT(DISTINCT orders.CustomerID) AS unique_customers FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID",
            "SELECT MONTH(orders.OrderDate) AS month, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY MONTH(orders.OrderDate)",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
            "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30') AS on_time_delivery_rate FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30'",
            "SELECT ShipCity, COUNT(*) AS order_count FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY ShipCity ORDER BY order_count DESC LIMIT 5",
            "SELECT categories.CategoryName, COUNT([Order Details].ProductID) AS order_count FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName ORDER BY order_count DESC LIMIT 1",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID ORDER BY total_sales DESC LIMIT 3",
            "SELECT shippers.CompanyName, SUM(orders.Freight) AS total_freight_cost FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.CompanyName",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m') ORDER BY month",
            "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS total_orders FROM orders JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID",
            "SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN regions ON customers.RegionID = regions.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY region.RegionDescription ORDER BY total_sales DESC LIMIT 1",
            "SELECT AVG([Order Details].Discount) AS avg_discount, SUM([Order Details].Discount) AS total_discount FROM [Order Details] WHERE [Order Details].OrderID IN (SELECT orders.OrderID FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31')",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC LIMIT 1;",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28' GROUP BY products.ProductID;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY employees.EmployeeID;",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30';",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY products.SupplierID;",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30';",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31';",
            "SELECT COUNT(orders.OrderID) FILTER (WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2023-08-01' AND '2023-08-31') / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-08-01' AND '2023-08-31';",
            "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS total_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID;",
            "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
            "SELECT shippers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.CompanyName;",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1;",
            "SELECT categories.CategoryID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID;",
            "SELECT customers.Region, COUNT(customers.CustomerID) AS total_customers FROM customers GROUP BY customers.Region ORDER BY total_customers DESC LIMIT 1;",
            "SELECT shippers.CompanyName, COUNT(orders.OrderID) AS total_orders FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.CompanyName;",
            "SELECT orders.OrderID, SUM(orders.Freight) AS total_freight_cost FROM orders WHERE orders.OrderDate BETWEEN '2023-09-01' AND '2023-09-30' GROUP BY orders.OrderID;",
            "SELECT AVG(ReorderLevel) AS avg_reorder_level FROM products;",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC LIMIT 1",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS sales_volume FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.ProductID ORDER BY sales_volume DESC LIMIT 1",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN products ON [Order Details].ProductID = products.ProductID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY products.SupplierID",
            "SELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID",
            "SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID",
            "SELECT territories.RegionID, COUNT(orders.OrderID) AS order_count FROM orders JOIN employeeTerritories ON orders.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY territories.RegionID",
            "SELECT SUM([Order Details].Quantity) AS total_quantity_sold FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT COUNT(*) AS customer_count FROM customers WHERE Country = 'USA'",
            "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS product_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID ORDER BY product_revenue DESC LIMIT 1",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT shippers.ShipperID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.ShipperID",
            "SELECT orders.CustomerID, orders.OrderDate FROM orders ORDER BY orders.OrderDate ASC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-12-01' AND '2022-12-31'",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS total_units_sold FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-01-31' GROUP BY products.ProductID",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY employees.EmployeeID",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "SELECT (SELECT COUNT(DISTINCT o2022.CustomerID) FROM orders o2022 WHERE o2022.OrderDate BETWEEN '2022-01-01' AND '2022-12-31') / (SELECT COUNT(DISTINCT o2021.CustomerID) FROM orders o2021 WHERE o2021.OrderDate BETWEEN '2021-01-01' AND '2021-12-31') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN products ON orders.ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY products.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.ProductID = 5 AND orders.OrderDate BETWEEN '2022-02-01' AND '2022-02-28'",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2021-01-01' AND '2021-12-31'",
            "SELECT COUNT(orders.OrderID WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-01-31'",
            "SELECT shippers.CompanyName, COUNT(orders.OrderID WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY on_time_delivery_rate DESC LIMIT 1",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2022-03-01' AND '2022-03-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity) AS total_units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY categories.CategoryName ORDER BY total_units_sold DESC LIMIT 1",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN products ON orders.ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName ORDER BY supplier_lead_time ASC LIMIT 1",
            "SELECT COUNT(orders.OrderID) AS total_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.City = 'London' AND orders.OrderDate BETWEEN '2022-04-01' AND '2022-06-30'",
            "SELECT AVG(total_sales_per_customer) FROM (SELECT orders.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales_per_customer FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.Country = 'France' GROUP BY orders.CustomerID) AS customer_sales",
            "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS product_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID ORDER BY product_sales DESC LIMIT 1",
            "SELECT COUNT(orders.OrderID) AS on_time_orders FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2022-07-01' AND '2022-09-30'",
            "SELECT suppliers.SupplierID, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate BETWEEN '2021-01-01' AND '2021-12-31' GROUP BY suppliers.SupplierID",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31' GROUP BY products.ProductID, products.ProductName ORDER BY units_sold DESC",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-08-01' AND '2023-08-31'",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN products ON [Order Details].ProductID = products.ProductID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.SupplierID ORDER BY supplier_lead_time",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.ProductName = 'Chai' AND orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
            "SELECT COUNT(orders.OrderID) AS on_time_delivery_count, COUNT(orders.OrderID WHERE orders.ShippedDate <= orders.RequiredDate) AS on_time_deliveries FROM orders WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31' HAVING on_time_delivery_count > 0 AND COUNT(orders.OrderID WHERE orders.ShippedDate <= orders.RequiredDate) / on_time_delivery_count AS on_time_delivery_rate",
            "SELECT MONTH(orders.OrderDate) AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY MONTH(orders.OrderDate) ORDER BY total_sales DESC LIMIT 1",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS sales_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID, products.ProductName ORDER BY sales_revenue DESC LIMIT 5",
            "SELECT MONTH(orders.OrderDate) AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY MONTH(orders.OrderDate)",
            "SELECT customers.CustomerID, customers.CompanyName, orders.OrderID, orders.ShippedDate, orders.RequiredDate FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.ShippedDate > orders.RequiredDate AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT orders.ShipVia, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders GROUP BY orders.ShipVia ORDER BY avg_fulfillment_time",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY customers.CustomerID ORDER BY order_count DESC",
            "SELECT SUM(orders.Freight) AS total_freight FROM orders WHERE orders.ShipCountry = 'USA' AND orders.OrderDate BETWEEN '2023-11-01' AND '2023-11-30'",
            "SELECT customers.CustomerID, customers.CompanyName, COUNT(orders.OrderID) AS order_count FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID ORDER BY order_count DESC LIMIT 1",
            "SELECT categories.CategoryID, categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS category_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID, categories.CategoryName ORDER BY category_sales DESC",
            "SELECT products.ProductID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID, month ORDER BY month",
            "SELECT employees.EmployeeID, DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID, month ORDER BY month",
            "SELECT COUNT(orders.OrderID) AS on_time_orders, COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.SupplierID",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month ORDER BY month",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, COUNT(orders.OrderID) AS orders_placed, COUNT(CASE WHEN orders.ShippedDate IS NOT NULL THEN 1 END) AS orders_fulfilled FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month ORDER BY month",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY turnover_ratio DESC",
            "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID, products.ProductName ORDER BY total_sales DESC LIMIT 5",
            "SELECT orders.ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipCountry",
            "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC",
            "SELECT orders.ShipVia, COUNT(orders.OrderID) AS order_count FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipVia",
            "SELECT suppliers.SupplierID, suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY suppliers.SupplierID, suppliers.CompanyName ORDER BY total_sales DESC LIMIT 5",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT orders.ShipRegion, AVG(SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID)) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipRegion",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS total_quantity_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY total_quantity_sold DESC",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY employees.EmployeeID",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.SupplierID",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
            "SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30'",
            "SELECT COUNT(*) AS discontinued_products FROM products WHERE products.Discontinued = 1",
            "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC",
            "SELECT (SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31') AS yoy_growth",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY customers.CustomerID",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS total_units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName ORDER BY total_sales DESC",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE YEAR(orders.OrderDate) = 2023 GROUP BY month",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-09-30' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
            "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
            "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC",
            "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY products.ProductID ORDER BY product_performance DESC LIMIT 5",
            "SELECT products.ProductID FROM products WHERE products.UnitsInStock < products.ReorderLevel AND MONTH(products.RecordDate) = 8 AND YEAR(products.RecordDate) = 2023",
            "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 5",
            "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE MONTH(orders.OrderDate) = 7 AND YEAR(orders.OrderDate) = 2023",
            "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE YEAR(orders.OrderDate) = YEAR(CURDATE())",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName ORDER BY total_sales DESC",
            "SELECT orders.ShipCity, orders.ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY orders.ShipCity, orders.ShipCountry ORDER BY total_sales DESC",
            "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2022",
            "SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID JOIN region ON territories.RegionID = region.RegionID WHERE YEAR(orders.OrderDate) = 2023 GROUP BY region.RegionDescription",
            "SELECT shippers.ShipperID, SUM(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 ELSE 0 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.ShipperID ORDER BY on_time_delivery_rate DESC",
            "SELECT products.ProductID, products.ProductName FROM products WHERE products.UnitPrice = (SELECT MAX(products.UnitPrice) FROM products) AND products.ProductID NOT IN (SELECT [Order Details].ProductID FROM [Order Details] WHERE [Order Details].Quantity > 0)",
            "SELECT AVG(products.UnitsInStock) AS avg_units_in_stock FROM products",
            "SELECT customers.CustomerID, COUNT(orders.OrderID) AS number_of_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY customers.CustomerID ORDER BY number_of_orders DESC",
            "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY DATE_FORMAT(orders.OrderDate, '%Y-%m')",
            "SELECT products.ProductName, SUM([Order Details].Quantity) AS total_quantity_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductName ORDER BY total_quantity_sold DESC",
            "SELECT employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 5",
            "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN products ON orders.OrderID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY suppliers.SupplierID",
            "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID",
            "SELECT COUNT(DISTINCT orders.CustomerID) AS repeat_customers FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.CustomerID HAVING COUNT(orders.OrderID) > 1",
            "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID ORDER BY total_revenue DESC LIMIT 1",
            "SELECT employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC",
            "SELECT shippers.CompanyName, AVG(orders.Freight) AS avg_freight_cost FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.ShipperID ORDER BY avg_freight_cost ASC LIMIT 1",
            "SELECT categories.CategoryName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_shipping_time FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID",
            "SELECT orders.ShipRegion, COUNT(orders.OrderID) AS order_count FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipRegion",
            "SELECT COUNT(*) AS discounted_orders FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' AND [Order Details].Discount > 0",
            "SELECT customers.CustomerID, customers.CompanyName, COUNT(orders.OrderID) AS late_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE orders.ShippedDate > orders.RequiredDate AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY customers.CustomerID ORDER BY late_orders DESC"
        ],
        "reviews": [
            "The query correctly calculates the total sales for the year 2023.",
            "The query correctly calculates the average order value for January 2023.",
            "The query correctly identifies the customer with the highest lifetime value.",
            "The query is missing the join with the orders table. Corrected query: SELECT products.ProductID, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID",
            "The query correctly identifies the highest-performing employee in terms of sales for February 2023.",
            "The query correctly calculates the average order fulfillment time for March 2023.",
            "The query correctly calculates the customer retention rate for the first half of 2023.",
            "The query has a mistake in the join condition. Corrected query: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "The query is missing a condition to filter orders within May 2023. Corrected query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
            "The query correctly calculates the average shipping cost per order in June 2023.",
            "The query needs a CASE statement for conditional counting. Corrected query: SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "The query correctly identifies the product with the highest sales in August 2023.",
            "The query correctly calculates the total sales generated by each sales territory in September 2023.",
            "The query has a misplaced parenthesis. Corrected query: SELECT shippers.ShipperID, COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-10-31' GROUP BY shippers.ShipperID ORDER BY on_time_delivery_rate DESC LIMIT 1",
            "The query correctly calculates the average discount given on orders in November 2023.",
            "The query is missing a join with the orders table. Corrected query: SELECT categories.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS category_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-12-01' AND '2023-12-31' GROUP BY categories.CategoryID ORDER BY category_sales DESC LIMIT 1",
            "The query correctly provides the monthly sales trends for 2023.",
            "The query correctly compares the total sales of Q1 2023 to Q1 2022.",
            "The query was missing a join with [Order Details]. Corrected query: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID",
            "The query correctly identifies the top 5 customers based on sales in 2023.",
            "Correct",
            "Correct",
            "The provided query missed the join with the orders table to filter by OrderDate. Corrected query: SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY products.ProductID",
            "Correct",
            "Correct",
            "Correct",
            "The provided query missed joining with the [Order Details] table for product information. Corrected query: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30' GROUP BY products.SupplierID",
            "The provided query missed joining with the orders table to filter by OrderDate. Corrected query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "Correct",
            "The COUNT() function needs to use a CASE statement instead of COUNT(column). Corrected query: SELECT SUM(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 ELSE 0 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-09-01' AND '2023-09-30'",
            "The provided query missed joining with the orders table to filter by OrderDate. Corrected query: SELECT products.SupplierID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-10-31' GROUP BY products.SupplierID",
            "The provided query is correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The provided query missed the join with the orders table to filter by OrderDate. Corrected query: SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query has a mistake. The join should be on products.SupplierID and [Order Details].ProductID. The corrected query is: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.SupplierID",
            "The query is correct.",
            "The query has a logic mistake. The division of the counts for on-time delivery rate should consider only the orders shipped within the date range. The corrected query is: SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "PARTIALLY CORRECT: The query is correct but using STR_TO_DATE instead of DATE_FORMAT function.",
            "Correct",
            "Correct",
            "INCORRECT: The 'WHERE' clause should be part of the 'COUNT' function. Correct query: SELECT shippers.CompanyName, COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY on_time_delivery_rate DESC LIMIT 1",
            "Correct",
            "Correct",
            "Correct",
            "Correct query implementation but with an incomplete syntax. Correct query: SELECT COUNT(*) AS on_time_fulfillment_count FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2023-12-01' AND '2023-12-31'",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct Query.",
            "Correct Query.",
            "Correct Query.",
            "Correct Query.",
            "Correct Query. Still, consider returning names instead of IDs or filtering further down.",
            "Correct Query.",
            "Correct Query.",
            "Correct Query.",
            "Incorrect Query. Fix: SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(*) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "Correct Query. But remove USE of LIMIT as it's not asked in the question.",
            "Correct Query.",
            "Correct Query. But, we must change limit to 1 which product has most popular.",
            "Correct Query.",
            "Correct Query.",
            "Correct Query.",
            "Correct Query.",
            "Correct Query. Even though consider using Indexing to avoid performance Issues given by the COUNT (*) in huge dataset or ORDER BY/ LIMIT",
            "Correct.",
            "Correct.",
            "Added Join for orders table.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The 'orders' table is not joined. Modified query: SELECT products.ProductName, SUM([Order Details].Quantity) AS total_units FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductName ORDER BY total_units DESC LIMIT 1",
            "Correct.",
            "Correct.",
            "Incorrect. Modified query: SELECT (SELECT COUNT(DISTINCT Temp1.CustomerID) FROM (SELECT CustomerID FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY 1 HAVING COUNT(OrderID) > 1) AS Temp1) / (SELECT COUNT(DISTINCT Temp2.CustomerID) FROM (SELECT CustomerID FROM orders WHERE OrderDate < '2023-01-01' GROUP BY 1 HAVING COUNT(OrderID) > 1) AS Temp2) AS customer_retention_rate",
            "Incorrect. The join condition is wrong. Modified query: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY products.SupplierID",
            "Incorrect. The 'orders' table is not joined. Modified query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].ProductID = 7 AND orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "Correct.",
            "Incorrect. Syntax error FILTER (WHERE ...). Modified query: SELECT COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate) / COUNT(OrderID) AS on_time_delivery_rate FROM orders WHERE OrderDate BETWEEN '2023-07-01' AND '2023-07-31'",
            "Correct.",
            "Incorrect. The 'orders' table is not joined. Modified query: SELECT products.ProductID, SUM([Order Details].Quantity) AS total_units FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID ORDER BY total_units ASC LIMIT 1",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The join condition is wrong. Modified query: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-09-01' AND '2023-09-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "There is a logical error in the query. It should count the on-time delivered orders correct. Correct query: SELECT COUNT(*) * 100.0 / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.ShipVia = (SELECT ShipperID FROM shippers WHERE CompanyName = 'Speedy Express') AND orders.ShippedDate <= orders.RequiredDate",
            "The query is correct.",
            "The query has a logical error. The orders table should be included in the start as it is in the Order Details. Correct query: SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE MONTH(orders.OrderDate) = 8 AND YEAR(orders.OrderDate) = 2023 GROUP BY categories.CategoryName",
            "The query is correct.",
            "The query is incorrect. There is an issue with the joins and conditions on orders.EmployeeID. The correct query should use territories for region column. Correct query: SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS sales_revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID JOIN region ON territories.RegionID = region.RegionID WHERE region.RegionDescription = 'Northeast' GROUP BY products.ProductName ORDER BY sales_revenue DESC LIMIT 1",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "The query is correct.",
            "Correct. Query calculates the average order value for January 2023.",
            "Correct. Query identifies the customer with the highest lifetime value.",
            "Correct. Query counts the orders fulfilled within required timeframe in 2023.",
            "Correct. Query calculates the average time to fulfill orders placed in 2023.",
            "Correct. Query finds the employee with highest sales for Q1 2023.",
            "Correct. Query identifies the product with highest sales volume in February 2023.",
            "Correct. Query counts the unique customers placing orders in 2023.",
            "Incorrect. The join condition is incorrect. Replace 'ON orders.OrderID = products.ProductID' with 'ON [Order Details].ProductID = products.ProductID'. Correct query: SELECT suppliers.SupplierID, COUNT(DISTINCT orders.OrderID) AS on_time_deliveries FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY suppliers.SupplierID.",
            "Incorrect. Missing JOIN with 'orders'. Correct query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.ProductID = 1 AND orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31'.",
            "Correct. Query computes the average shipping cost for orders shipped via shipper ID 2.",
            "Incorrect. Syntax error in COUNT. Correct query: SELECT COUNT(orders.OrderID) FILTER (WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30'.",
            "Correct. Query calculates the average discount applied on all orders in 2023.",
            "Incorrect. Missing JOIN with 'orders'. Correct query: SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY categories.CategoryName ORDER BY total_revenue DESC LIMIT 1.",
            "Correct. Query calculates monthly sales trend for 2023.",
            "Incorrect. Wrong join condition. Replace 'ON orders.OrderID = products.ProductID' with 'ON [Order Details].ProductID = products.ProductID'. Correct query: SELECT suppliers.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY suppliers.SupplierID ORDER BY avg_lead_time ASC LIMIT 1.",
            "Correct. Query counts orders with quantity greater than 50 in 2023.",
            "Correct. Query calculates average number of orders per customer in 2023.",
            "Correct",
            "Correct",
            "Correct",
            "Missing join on orders table",
            "Correct",
            "Correct",
            "Missing orders join and filter",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query: The join should be from orders to Order Details and then to Products. Corrected query:\n SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN Order Details ON orders.OrderID = Order Details.OrderID JOIN products ON Order Details.ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID ORDER BY avg_lead_time ASC",
            "Correct query.",
            "Incorrect query: The COUNT formula syntax should be adjusted. Corrected query:\nSELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Incorrect query: Missing JOIN on orders table. Corrected query:\nSELECT categories.CategoryID, categories.CategoryName, SUM(Order Details.UnitPrice * Order Details.Quantity * (1 - Order Details.Discount)) AS total_sales FROM Order Details JOIN orders ON Order Details.OrderID = orders.OrderID JOIN products ON Order Details.ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID ORDER BY total_sales DESC",
            "Incorrect query: Mistake in date range. 'Corrected query:\nSELECT COUNT(DISTINCT orders.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-01-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN'2022-02-01' AND '2023-12-31') AS customer_retention_rate FROM orders",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "Correct query.",
            "The query correctly calculates total sales revenue for 2022.",
            "The query correctly calculates total sales revenue by each employee for each month in 2022.",
            "The query originally missed joining the orders table, which is necessary to filter by OrderDate. The corrected query includes the orders table.",
            "The query correctly calculates the average order value for 2022.",
            "The query correctly counts orders shipped on time in 2022.",
            "The query correctly calculates the average time taken to fulfill an order in 2022.",
            "The query correctly calculates the number of customers who placed more than three orders in 2022.",
            "The original query had a join on OrderID instead of ProductID. The corrected query joins the tables correctly.",
            "The query correctly calculates the total number of products sold in 2022.",
            "The query correctly calculates the total number of orders placed by each customer in 2022.",
            "The query correctly calculates the total revenue generated from each product sold in 2022.",
            "The query correctly calculates the total freight cost for orders shipped in 2022.",
            "The query correctly calculates the customer retention rate for 2022.",
            "The query correctly calculates the average shipping cost per order in 2022.",
            "The query correctly identifies the employee who generated the highest sales in 2022.",
            "The query correctly calculates the total inventory turnover ratio for 2022.",
            "The original query did not account for orders up to 2022 and needed an additional condition in the WHERE clause. The corrected query adds this condition correctly.",
            "The original query did not limit the results to the highest number of on-time deliveries. The corrected query adds this condition.",
            "The query correctly calculates the performance of products based on sales and inventory levels for each month in 2022.",
            "The query correctly calculates the average discount provided on orders in 2022.",
            "The query correctly identifies the region that generated the highest sales in 2022.",
            "The query correctly calculates the number of orders placed in each quarter of 2022.",
            "The query correctly calculates the total number of units on order for each product in 2022.",
            "The query correctly identifies customers from the USA who placed orders in 2022.",
            "Correct",
            "Correct",
            "The provided query is missing a join with the orders table to filter by OrderDate. Correct query: SELECT products.ProductID, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID",
            "Correct",
            "Correct",
            "The provided query incorrectly joins orders and products. The correct join should be: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
            "The provided query is missing a join with the orders table to filter by OrderDate. Correct query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' AND products.ProductID = 10",
            "Correct",
            "Correct",
            "The provided query is missing a join with the orders table to filter by OrderDate. Correct query: SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY products.ProductID ORDER BY total_sales DESC LIMIT 5",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Error: 'orders' table is not joined. Correct query: SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID ORDER BY product_performance DESC LIMIT 1",
            "Correct",
            "Error: Shipped date should be used instead of Order Date for February. Correct query: SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.ShippedDate BETWEEN '2023-02-01' AND '2023-02-28'",
            "Correct",
            "Correct",
            "Error in COUNT function syntax. Correct query: SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Error: 'orders' table should also be joined. Correct query: SELECT categories.CategoryName, COUNT([Order Details].OrderID) AS order_count FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName ORDER BY order_count DESC LIMIT 1",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect: Orders table does not contain ProductID. Correct query: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-11-01' AND '2022-11-30' GROUP BY products.SupplierID",
            "Incorrect: [Order Details] table should be joined with orders to get OrderDate. Correct query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.ProductID = 5 AND orders.OrderDate BETWEEN '2022-03-01' AND '2022-03-31'",
            "Correct",
            "Incorrect: The placement of parentheses is wrong. Correct query: SELECT COUNT(orders.OrderID) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct Query",
            "Correct Query",
            "Correct Query",
            "Correct Query",
            "Correct Query",
            "Correct Query",
            "Incorrect query: The join condition to link orders and products should be orders.OrderID = [Order Details].OrderID. Corrected query: SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY suppliers.SupplierID ORDER BY avg_lead_time DESC",
            "Incorrect query: Orders table needs to be joined for order date filtering. Corrected query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].ProductID = 101 AND orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
            "Correct Query",
            "Correct Query",
            "Correct Query",
            "Incorrect query: Missing group by month. Corrected query: SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE [Order Details].ProductID = 102 AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY MONTH(orders.OrderDate)",
            "Correct Query",
            "Correct Query",
            "Correct Query",
            "Correct Query",
            "Incorrect query: Region should be matched with region.RegionID not region.RegionDescription. Corrected query: SELECT region.RegionDescription, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID JOIN region ON customers.Region = region.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY region.RegionDescription",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Missing JOIN with orders on OrderID. Corrected: SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID.",
            "Correct.",
            "Correct.",
            "Incorrect. Changed JOIN condition to include [Order Details] and products table, and fixed specific orders.OrderDate filter. Corrected: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1.",
            "Correct with orders table JOINed for OrderDate filtering. Corrected: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31'.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. Missing join with orders on OrderID. Corrected: SELECT categories.CategoryName, COUNT([Order Details].ProductID) AS order_count FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName ORDER BY order_count DESC LIMIT 1.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. No regions or region tables in schema. Corrected: SELECT region.RegionDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN regionCustomer ON customers.CustomerID = regionCustomer.CustomerID JOIN region ON regionCustomer.RegionID = region.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY region.RegionDescription ORDER BY total_sales DESC LIMIT 1.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Mistake in JOIN clause. Correct query provided.",
            "Mistake in inclusion of the 'orders' table in the query. Correct query provided.",
            "Correct.",
            "Syntax issue in COUNT with WHERE clause. Correct query provided.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Including products.OrderDate in the query using JOIN is needed. Correct query provided.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The query mistakenly joins `products` before joining `Order Details`, leading to an error. Correct query:\nSELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID",
            "The query mistakenly filters by orders but does not join the orders table. Correct query:\nSELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID",
            "Correct",
            "The COUNT function inside the queries should use the CASE statement. Correct query:\nSELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is correct.",
            "Query is conceptually correct, but it needs a small adjustment. The formula for Customer Retention Rate should be:\nSELECT (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' AND EXISTS (SELECT 1 FROM orders o2 WHERE o2.OrderDate BETWEEN '2021-01-01' AND '2021-12-31' AND o2.CustomerID = o.CustomerID)) / (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate BETWEEN '2021-01-01' AND '2021-12-31') AS customer_retention_rate",
            "There is an issue with the join condition. The correct query should be:\nSELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-03-31' GROUP BY products.SupplierID",
            "Query is missing a join with the orders table to filter by date. The correct query should be:\nSELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.ProductID = 5 AND orders.OrderDate BETWEEN '2022-02-01' AND '2022-02-28'",
            "Query is correct.",
            "The COUNT() function inside should be wrapped in parentheses and placed inside the main COUNT function. The correct query is:\nSELECT COUNT(orders.OrderID) AS total_orders FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-01-31' AND orders.ShippedDate <= orders.RequiredDate)) , COUNT(orders.OrderID))) AS on_time_delivery_rate",
            "The COUNT() function inside should be wrapped in parentheses and placed inside the main COUNT function. The correct query is:\n SELECT shippers.CompanyName, COUNT(orders.OrderID) AS total_orders FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-01-31' AND orders.ShippedDate <= orders.RequiredDate)) , COUNT(orders.OrderID))) AS supplier_lead_time",
            "Query is correct.",
            "orders.OrderDate alias added. The correct query is as follows:\nSELECT categories.CategoryName, SUM([Order Details].Quantity) AS total_units_sold FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN  categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-06-30' GROUP BY categories.CategoryName ORDER BY total_units_sold DESC LIMIT 1",
            "There is an issue with the join condition. The correct query should be:\nSELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID= products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName ORDER BY supplier_lead_time ASC LIMIT 1",
            "Query is correct.",
            "Query is correct.",
            "There is an issue with the join condition. The correct query should be:\nSELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice * (1 \u2014 [Order Details].Discount)) AS totalProductSales FROM orders ORDER BY product_sales , products.ProductID",
            "Correct.",
            "Correct.",
            "Correct.",
            "Incorrect. The 'orders' table is missing in the FROM clause. Corrected query: SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-07-01' AND '2023-07-31' GROUP BY products.ProductID, products.ProductName ORDER BY units_sold DESC",
            "Correct.",
            "Correct.",
            "Incorrect. The 'orders' table is missing in the FROM clause. Corrected query: SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.ProductName = 'Chai' AND orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
            "Correct.",
            "Incorrect. The COUNT function should be used correctly. Corrected query: SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31'",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct.",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect. The correct query is: SELECT COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect. The correct query is: SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, COUNT(orders.OrderID) AS orders_placed, COUNT(CASE WHEN orders.ShippedDate IS NOT NULL THEN 1 END) AS orders_fulfilled FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month ORDER BY month",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect. The correct query is: SELECT orders.ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY orders.ShipRegion",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The query had a mistake in the JOIN condition. Corrected the query to join on [Order Details].OrderID.",
            "Correct",
            "Corrected syntax of COUNT with conditional statement.",
            "Correct",
            "Correct",
            "The query had a mistake in the JOIN condition. Corrected the query to join on [Order Details].OrderID.",
            "Query has syntax errors; corrected it to check the date range in WHERE clause.",
            "Correct",
            "The JOIN with orders table is required to filter the date range.",
            "Added filter to only include orders within the year 2023.",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Incorrect. The join condition and calculation were incorrect. Correct query: SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID= orders.OrderID JOIN products ON [Order Details].ProductID= products.ProductID GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC",
            "Incorrect. Missing date condition to filter current year's orders. Correct query: SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE YEAR(orders.OrderDate) = YEAR(CURDATE())",
            "Correct",
            "Incorrect. Syntax error in COUNT function. Correct query: SELECT SUM(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 ELSE 0 END) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE YEAR(orders.OrderDate) = 2023",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "Correct",
            "The COUNT function is trying to be used within another function incorrectly. Corrected: SELECT (COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / COUNT(orders.OrderID)) * 100 AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
            "Correct",
            "Correct",
            "The query is missing a join on orders table. Correct query: SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryID ORDER BY total_revenue DESC LIMIT 1",
            "Correct",
            "Correct",
            "Correct"
        ],
        "difficulty": [
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "advanced",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "advanced",
            "easy",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "easy",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "advanced",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "easy",
            "advanced",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "easy",
            "easy",
            "advanced",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "medium",
            "medium",
            "advanced",
            "advanced",
            "easy",
            "easy",
            "medium",
            "medium",
            "advanced",
            "medium",
            "easy",
            "medium",
            "easy",
            "advanced",
            "easy",
            "medium",
            "medium",
            "medium",
            "easy",
            "advanced",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "medium",
            "advanced",
            "easy",
            "medium",
            "advanced",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "easy",
            "medium",
            "medium",
            "advanced",
            "easy",
            "medium",
            "easy",
            "easy",
            "medium",
            "easy",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "medium",
            "easy",
            "medium"
        ]
    }
}