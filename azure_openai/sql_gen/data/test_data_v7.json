[
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost for orders shipped via method 2 last month?",
        "output": "SELECT SUM(Freight) AS total_freight FROM orders WHERE ShipVia = 2 AND MONTH(OrderDate) = MONTH(CURDATE() - INTERVAL 1 MONTH) AND YEAR(OrderDate) = YEAR(CURDATE() - INTERVAL 1 MONTH);",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the top 5 selling products in terms of quantity.",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS Quantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY Quantity DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many suppliers are there in each country?",
        "output": "SELECT Country, COUNT(DISTINCT SupplierID) AS NumberOfSuppliers FROM suppliers GROUP BY Country;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which month in 2023 had the highest shipping costs?",
        "output": "SELECT MONTH(orders.OrderDate) AS order_month, SUM(orders.Freight) AS total_shipping_cost FROM orders WHERE YEAR(orders.OrderDate) = 2023 GROUP BY MONTH(orders.OrderDate) ORDER BY total_shipping_cost DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total number of products per category?",
        "output": "SELECT CategoryID, COUNT(ProductID) AS NumberOfProducts FROM products GROUP BY CategoryID",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the percentage of discontinued products?",
        "output": "SELECT (COUNT(ProductID) * 100.0 / (SELECT COUNT(ProductID) FROM products)) AS discontinued_percentage FROM products WHERE Discontinued = 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders have a shipping cost greater than $100?",
        "output": "SELECT COUNT(*) FROM orders WHERE Freight > 100;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the total sales revenue for each product.",
        "output": "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How does the sales performance of discontinued products compare to that of active products?",
        "output": "SELECT p.ProductName, SUM([Order Details].Quantity) AS total_quantity, p.Discontinued FROM [Order Details] JOIN products p ON [Order Details].ProductID = p.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2023 GROUP BY p.ProductName, p.Discontinued ORDER BY total_quantity DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the retention rate for customers over the last quarter?",
        "output": "SELECT (COUNT(DISTINCT o.CustomerID) FILTER (WHERE o.OrderDate BETWEEN DATE '2023-07-01' AND DATE '2023-09-30'))::DECIMAL / NULLIF((COUNT(DISTINCT o.CustomerID) FILTER (WHERE o.OrderDate < DATE '2023-07-01')), 0) AS RetentionRate FROM orders o;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average sale price per unit for each product category?",
        "output": "SELECT products.CategoryID, AVG([Order Details].UnitPrice) AS AverageSalePrice FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order for the year 2023?",
        "output": "SELECT AVG(orders.Freight) AS avg_shipping_cost FROM orders WHERE YEAR(orders.OrderDate) = 2023",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has processed the most orders in a given month?",
        "output": "SELECT e.EmployeeID, DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, DATE_FORMAT(o.OrderDate, '%Y-%m') ORDER BY OrderCount DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify products that need to be reordered immediately.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel AND Discontinued = 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees along with their total sales, sorted by sales in descending order.",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify products that are selling below their reorder level.",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the total discount given on all orders in 2023.",
        "output": "SELECT SUM(UnitPrice * Quantity * UnitPrice * Discount) AS TotalDiscount FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE EXTRACT(YEAR FROM o.OrderDate) = 2023;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify the most profitable product.",
        "output": "SELECT ProductName, SUM(([Order Details].UnitPrice - [Order Details].Discount) * [Order Details].Quantity) AS Profit FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName ORDER BY Profit DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products are below their reorder level?",
        "output": "SELECT COUNT(ProductID) AS ProductsBelowReorder FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have never been ordered?",
        "output": "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated from each customer?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average lead time for each supplier to deliver products?",
        "output": "SELECT s.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgLeadTime FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average discount given by each employee on their sales?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].Discount) AS AverageDiscount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many units of each product are on order currently?",
        "output": "SELECT ProductID, UnitsOnOrder FROM products WHERE UnitsOnOrder > 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers provide the most products?",
        "output": "SELECT SupplierID, COUNT(ProductID) as ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total freight cost incurred each month?",
        "output": "SELECT DATE_TRUNC('month', OrderDate) AS Month, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY DATE_TRUNC('month', OrderDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which country has the lowest average shipping cost per order?",
        "output": "SELECT ShipCountry, AVG(Freight) AS AvgCost FROM orders GROUP BY ShipCountry ORDER BY AvgCost ASC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the percentage of orders that had zero discounts?",
        "output": "SELECT (CAST(COUNT(*) FILTER(WHERE od.Discount = 0) AS DECIMAL) / COUNT(*)) * 100 AS ZeroDiscountPercentage FROM [Order Details] od;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average discount applied to products in orders?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details]",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employee is responsible for the highest number of orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the percentage of discontinued products relative to all products?",
        "output": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM products)) AS DiscontinuedPercentage FROM products WHERE Discontinued = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the correlation between freight cost and order value?",
        "output": "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / NULLIF(o.Freight, 0) AS ValuePerFreight FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID HAVING o.Freight > 0;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which product category has the highest average sales per order?",
        "output": "SELECT c.CategoryID, AVG(d.Quantity * d.UnitPrice) AS AvgSalesPerOrder FROM [Order Details] d JOIN products p ON d.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID ORDER BY AvgSalesPerOrder DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost paid by each customer?",
        "output": "SELECT CustomerID, SUM(Freight) AS total_freight_cost FROM orders GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers are associated with the top 3 performing products?",
        "output": "SELECT s.SupplierID, p.ProductName, SUM(od.Quantity) as TotalSold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.SupplierID, p.ProductName ORDER BY TotalSold DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find products that have been sold to more than 1000 units but are at or below reorder level.",
        "output": "SELECT ProductName FROM products WHERE ProductID IN (SELECT ProductID FROM [Order Details] GROUP BY ProductID HAVING SUM(Quantity) > 1000) AND UnitsInStock <= ReorderLevel;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Determine products with a discount greater than 20% in any orders.",
        "output": "SELECT DISTINCT products.ProductName FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].Discount > 0.20;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Determine the total freight cost for orders shipped in 2022.",
        "output": "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE YEAR(ShippedDate) = 2022;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier offers the most products that have been discontinued?",
        "output": "SELECT s.SupplierID, COUNT(p.ProductID) AS DiscontinuedCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1 GROUP BY s.SupplierID ORDER BY DiscontinuedCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which customer has placed the highest number of orders?",
        "output": "SELECT customers.CustomerID, COUNT(orders.OrderID) AS num_orders FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID ORDER BY num_orders DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have experienced the most significant price increases?",
        "output": "SELECT ProductName, MAX(UnitPrice) - MIN(UnitPrice) AS PriceIncrease FROM products GROUP BY ProductID ORDER BY PriceIncrease DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales revenue generated by each supplier?",
        "output": "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.CompanyName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders has each employee processed this year?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY e.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the most sold product based on order quantities?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalSold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalSold DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee has handled the most orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS NumOrders FROM orders GROUP BY EmployeeID ORDER BY NumOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which shipping country generates the highest revenue?",
        "output": "SELECT orders.ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.ShipCountry ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total value of inventory currently in stock?",
        "output": "SELECT SUM(p.UnitsInStock * p.UnitPrice) as TotalInventoryValue FROM products p;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total number of unique customers handled by each employee?",
        "output": "SELECT employees.EmployeeID, COUNT(DISTINCT orders.CustomerID) AS UniqueCustomerCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify low-performing products based on sales data.",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID HAVING SUM(od.Quantity) < 1000 ORDER BY TotalSales;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the distribution of employees across different regions?",
        "output": "SELECT e.Region, COUNT(e.EmployeeID) AS EmployeeCount FROM employees e GROUP BY e.Region",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which region had the highest sales revenue?",
        "output": "SELECT ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS RegionSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipRegion ORDER BY RegionSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "List products where the discount was greater than 20%.",
        "output": "SELECT DISTINCT products.ProductID, products.ProductName FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].Discount > 0.2;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average discount applied across all orders?",
        "output": "SELECT AVG(Discount) FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping company has the highest average shipping cost?",
        "output": "SELECT ShipVia, AVG(Freight) AS avg_cost FROM orders GROUP BY ShipVia ORDER BY avg_cost DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many units of each product have been sold in the last month?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATEADD(MONTH, -1, CURRENT_DATE) GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find products that have never been ordered.",
        "output": "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total quantity of products sold by category each month?",
        "output": "SELECT products.CategoryID, DATE_TRUNC('month', orders.OrderDate) AS Month, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.CategoryID, DATE_TRUNC('month', orders.OrderDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product generated the most revenue in 2023?",
        "output": "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductID ORDER BY revenue DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What are the total sales for each country?",
        "output": "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the top 5 employees based on their sales performance.",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the percentage of discontinued products per supplier?",
        "output": "SELECT s.SupplierID, (CAST(SUM(CASE WHEN p.Discontinued = 1 THEN 1 ELSE 0 END) AS DECIMAL) / COUNT(p.ProductID)) * 100 AS PercentDiscontinued FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer has the highest total sales value?",
        "output": "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify the top 3 suppliers by total units supplied.",
        "output": "SELECT SupplierID, SUM(UnitsInStock + UnitsOnOrder) as TotalUnits FROM products GROUP BY SupplierID ORDER BY TotalUnits DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time per shipper?",
        "output": "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY ShipVia;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales revenue generated for each month?",
        "output": "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS OrderMonth, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product had the highest sales value in the last month?",
        "output": "SELECT ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS SalesValue FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATE_TRUNC('month', CURRENT_DATE) - INTERVAL '1 month') GROUP BY ProductID ORDER BY SalesValue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which city has the most suppliers?",
        "output": "SELECT City, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY City ORDER BY SupplierCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How much discount was given on orders in total?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscountGiven FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have more than one reportee?",
        "output": "SELECT e.EmployeeID, COUNT(DISTINCT e1.EmployeeID) AS NumberOfReportees FROM employees e JOIN employees e1 ON e.EmployeeID = e1.ReportsTo GROUP BY e.EmployeeID HAVING NumberOfReportees > 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What percentage of total sales does each employee contribute?",
        "output": "SELECT e.EmployeeID, (SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) * 100.0 / (SELECT SUM(od2.UnitPrice * od2.Quantity * (1 - od2.Discount)) FROM [Order Details] od2)) AS SalesPercentage FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have processed orders for every month in 2023?",
        "output": "SELECT e.EmployeeID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.OrderDate) = 2023 GROUP BY e.EmployeeID HAVING COUNT(DISTINCT MONTH(o.OrderDate)) = 12",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed by customers with 'Manager' in their title?",
        "output": "SELECT COUNT(o.OrderID) AS manager_orders FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE c.ContactTitle LIKE '%Manager%';",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the average freight cost for each shipping method.",
        "output": "SELECT ShipVia, AVG(Freight) AS AverageFreight FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many products have a unit price greater than the average unit price?",
        "output": "SELECT COUNT(*) AS ProductsAboveAvgPrice FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total number of orders placed by each customer?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which shippers have the highest on-time delivery rate?",
        "output": "SELECT shippers.CompanyName, COUNT(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 END) / CAST(COUNT(orders.OrderID) AS FLOAT) AS on_time_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY on_time_rate DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Determine the on-time delivery rate for each month.",
        "output": "SELECT DATE_TRUNC('month', orders.OrderDate) AS Month, COUNT(orders.OrderID) FILTER (WHERE orders.ShippedDate <= orders.RequiredDate) * 1.0 / COUNT(orders.OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What was the total sales revenue for the year 2022?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Calculate the customer retention rate for the first quarter of 2023.",
        "output": "SELECT (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31') / NULLIF((SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01'), 0) AS customer_retention_rate",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Rank products by sales volume in the last month.",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') AND o.OrderDate < DATE_TRUNC('month', CURRENT_DATE) GROUP BY p.ProductName ORDER BY TotalSales DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total number of unique customers who placed orders in 2022?",
        "output": "SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE YEAR(o.OrderDate) = 2022;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders have been placed by each customer?",
        "output": "SELECT o.CustomerID, COUNT(o.OrderID) AS OrderCount FROM orders o GROUP BY o.CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average discount applied to all orders?",
        "output": "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee has the highest total sales in a given month?",
        "output": "SELECT employees.EmployeeID, CONCAT(employees.FirstName, ' ', employees.LastName) AS employee_name, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE EXTRACT(MONTH FROM orders.OrderDate) = @month AND EXTRACT(YEAR FROM orders.OrderDate) = @year GROUP BY employees.EmployeeID, employees.FirstName, employees.LastName ORDER BY total_sales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which city received the most shipments?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS num_shipments FROM orders GROUP BY ShipCity ORDER BY num_shipments DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the total units in stock for each product category.",
        "output": "SELECT products.CategoryID, SUM(products.UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY products.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order value for each month?",
        "output": "SELECT EXTRACT(YEAR FROM orders.OrderDate) AS Year, EXTRACT(MONTH FROM orders.OrderDate) AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Year, Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List all suppliers in a specific country along with their contact details.",
        "output": "SELECT SupplierID, CompanyName, ContactName, ContactTitle, Phone FROM suppliers WHERE Country = 'specified_country';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the total freight cost for all orders shipped to Germany.",
        "output": "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShipCountry = 'Germany';",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average number of days taken to fulfill an order in Q2 2023?",
        "output": "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE EXTRACT(QUARTER FROM orders.OrderDate) = 2 AND EXTRACT(YEAR FROM orders.OrderDate) = 2023",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Identify which shipping method has the best on-time delivery rate.",
        "output": "SELECT ShipVia, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0) / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY ShipVia ORDER BY OnTimeDeliveryRate DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How does the product performance vary across suppliers?",
        "output": "SELECT suppliers.CompanyName, products.ProductName, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.CompanyName, products.ProductName ORDER BY total_quantity DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the shipping cost per order for each shipping company?",
        "output": "SELECT shippers.CompanyName, AVG(orders.Freight) AS avg_shipping_cost FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated in each month?",
        "output": "SELECT DATE_TRUNC('month', orders.OrderDate) AS order_month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY order_month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees provide the highest average discount on their orders?",
        "output": "SELECT e.EmployeeID, AVG(od.Discount) AS AvgDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AvgDiscount DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Assess the trend of average shipping costs over time.",
        "output": "SELECT DATE_TRUNC('month', OrderDate) AS OrderMonth, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY OrderMonth ORDER BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Compute the total discount given on all orders in the last year.",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost for orders shipped in the last quarter?",
        "output": "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShippedDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE();",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the earliest and latest order date in the database.",
        "output": "SELECT MIN(OrderDate) AS EarliestOrder, MAX(OrderDate) AS LatestOrder FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer has the highest lifetime value?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS lifetime_value FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN \"Order Details\" od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY lifetime_value DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average sales per employee per month?",
        "output": "SELECT e.EmployeeID, DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, DATE_FORMAT(o.OrderDate, '%Y-%m')",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer has placed the most orders?",
        "output": "SELECT orders.CustomerID, COUNT(*) AS order_count FROM orders GROUP BY orders.CustomerID ORDER BY order_count DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped late for each year?",
        "output": "SELECT EXTRACT(YEAR FROM ShippedDate) AS Year, COUNT(OrderID) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate GROUP BY EXTRACT(YEAR FROM ShippedDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders have been delayed beyond the required date?",
        "output": "SELECT COUNT(OrderID) FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Are there any products below their reorder level?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find out the largest order (by value) and the customer who placed it.",
        "output": "SELECT o.OrderID, c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS order_value FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN customers c ON o.CustomerID = c.CustomerID GROUP BY o.OrderID, c.CustomerID ORDER BY order_value DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the top 5 products by total sales value.",
        "output": "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Determine the average shipping time for each day of the week.",
        "output": "SELECT EXTRACT(DOW FROM OrderDate) AS DayOfWeek, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders GROUP BY DayOfWeek;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the average sales per order for each employee?",
        "output": "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgSalesPerOrder FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the largest order by value?",
        "output": "SELECT orders.OrderID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS OrderValue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY orders.OrderID ORDER BY OrderValue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the top 5 customers based on total sales revenue.",
        "output": "SELECT o.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.CustomerID ORDER BY TotalRevenue DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average discount given per product over the last year?",
        "output": "SELECT p.ProductName, AVG(od.Discount) AS AverageDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE YEAR(od.OrderDate) = YEAR(CURRENT_DATE) - 1 GROUP BY p.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide the most products?",
        "output": "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total value of current inventory for each product?",
        "output": "SELECT products.ProductName, (UnitsInStock * UnitPrice) AS InventoryValue FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average freight cost for orders shipped late?",
        "output": "SELECT AVG(Freight) AS AverageFreightCost FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "List the customers who have generated the highest lifetime value.",
        "output": "SELECT customers.CustomerID, customers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID, customers.CompanyName ORDER BY total_lifetime_value DESC LIMIT 10",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customers are located in a specific city?",
        "output": "SELECT * FROM customers WHERE City = 'Specific City';",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify employees who have never offered a discount on any product.",
        "output": "SELECT e.EmployeeID FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID LEFT JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID HAVING SUM(CASE WHEN od.Discount > 0 THEN 1 ELSE 0 END) = 0;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which product generated the highest total revenue last year?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) - 1 GROUP BY p.ProductID, p.ProductName ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average discount applied to orders for the top 5 products by sales?",
        "output": "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY SUM(UnitPrice * Quantity * (1 - Discount)) DESC FETCH FIRST 5 ROWS ONLY;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers provide the most variety of products?",
        "output": "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductVariety FROM products GROUP BY SupplierID ORDER BY ProductVariety DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer ordered the highest quantity of products last year?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].Quantity) AS TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE EXTRACT(YEAR FROM orders.OrderDate) = EXTRACT(YEAR FROM CURRENT_DATE) - 1 GROUP BY customers.CustomerID ORDER BY TotalQuantity DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the distribution of customers by country?",
        "output": "SELECT Country, COUNT(CustomerID) AS NumberOfCustomers FROM customers GROUP BY Country;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which month had the highest total sales?",
        "output": "SELECT EXTRACT(YEAR FROM o.OrderDate) AS OrderYear, EXTRACT(MONTH FROM o.OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY EXTRACT(YEAR FROM o.OrderDate), EXTRACT(MONTH FROM o.OrderDate) ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Determine the ratio of discontinued to active products supplied by each supplier.",
        "output": "SELECT suppliers.CompanyName, CASE WHEN SUM(CASE WHEN products.Discontinued = 0 THEN 1 ELSE 0 END) = 0 THEN 0 ELSE CAST(SUM(CASE WHEN products.Discontinued = 1 THEN 1 ELSE 0 END) AS FLOAT) / SUM(CASE WHEN products.Discontinued = 0 THEN 1 ELSE 0 END) END AS DiscontinuedRatio FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Analyze the sales generated from discontinued products.",
        "output": "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS discontinued_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.Discontinued = 1 GROUP BY products.ProductName",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the correlation between order size and shipping cost?",
        "output": "SELECT Correlation FROM (SELECT Correlation(CAST(OrderSize AS DECIMAL), Freight) AS Correlation FROM orders) AS corr;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Find the average lead time by supplier for January 2023.",
        "output": "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE MONTH(orders.OrderDate) = 1 AND YEAR(orders.OrderDate) = 2023 GROUP BY products.SupplierID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers provide products that are discontinued?",
        "output": "SELECT DISTINCT SupplierID FROM products WHERE Discontinued = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee achieved the highest sales in March 2023?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE EXTRACT(MONTH FROM orders.OrderDate) = 3 AND EXTRACT(YEAR FROM orders.OrderDate) = 2023 GROUP BY employees.EmployeeID ORDER BY sales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee handled the most orders in the year?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS NumberOfOrders FROM orders WHERE EXTRACT(YEAR FROM OrderDate) = EXTRACT(YEAR FROM CURRENT_DATE) GROUP BY EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have the highest unit price?",
        "output": "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units of each product are on order?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity) AS UnitsOnOrder FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average age of employees in each city?",
        "output": "SELECT e.City, AVG(DATEDIFF(CURRENT_DATE, e.BirthDate) / 365.25) AS AvgAge FROM employees e GROUP BY e.City;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order in February 2023?",
        "output": "SELECT AVG(orders.Freight) AS avg_shipping_cost FROM orders WHERE MONTH(orders.OrderDate) = 2 AND YEAR(orders.OrderDate) = 2023",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the most diverse customer base in terms of countries?",
        "output": "SELECT e.EmployeeID, COUNT(DISTINCT o.ShipCountry) AS CountryCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY CountryCount DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify the products that are currently below their reorder level.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee generated the highest sales in the last year?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total discount given to each customer?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS total_discount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which customers have made repeat orders within the past year?",
        "output": "SELECT customers.CustomerID, COUNT(orders.OrderID) AS repeat_orders FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY customers.CustomerID HAVING repeat_orders > 1",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What percentage of products are currently discontinued?",
        "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM products) AS percentage_discontinued FROM products WHERE products.Discontinued = 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped by each shipping method each month?",
        "output": "SELECT DATE_TRUNC('month', ShippedDate) AS Month, ShipVia, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY Month, ShipVia;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the median order fulfillment time for all orders?",
        "output": "SELECT MEDIAN(DATEDIFF(ShippedDate, OrderDate)) AS median_fulfillment_time FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier has the highest total sales revenue from their products?",
        "output": "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify suppliers with products below their reorder level.",
        "output": "SELECT s.SupplierID, COUNT(p.ProductID) AS BelowReorder FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.UnitsInStock < p.ReorderLevel GROUP BY s.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What's the total discount given for each product?",
        "output": "SELECT ProductID, SUM(Discount * Quantity * UnitPrice) AS TotalDiscount FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which city has the highest number of customers?",
        "output": "SELECT c.City, COUNT(c.CustomerID) AS CustomerCount FROM customers c GROUP BY c.City ORDER BY CustomerCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employees have the highest sales performance?",
        "output": "SELECT employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.FirstName, employees.LastName ORDER BY total_sales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the trend in the number of orders over the last year?",
        "output": "SELECT EXTRACT(YEAR FROM o.OrderDate) AS order_year, EXTRACT(MONTH FROM o.OrderDate) AS order_month, COUNT(o.OrderID) AS order_count FROM orders o WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY order_year, order_month ORDER BY order_year, order_month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Who are the top 5 suppliers in terms of number of products supplied?",
        "output": "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS NumberOfProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName ORDER BY NumberOfProducts DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the percentage of orders containing discontinued products?",
        "output": "SELECT (COUNT(DISTINCT CASE WHEN p.Discontinued = 1 THEN o.OrderID END) * 100.0 / COUNT(DISTINCT o.OrderID)) AS PercentageWithDiscontinuedProducts FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many completed orders involved discontinued products?",
        "output": "SELECT COUNT(DISTINCT OrderID) AS CompletedOrdersWithDiscontinued FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE p.Discontinued = 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "List top 5 shipping methods used, based on the number of shipments.",
        "output": "SELECT ShipVia, COUNT(OrderID) AS NumberOfShipments FROM orders GROUP BY ShipVia ORDER BY NumberOfShipments DESC LIMIT 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List employees who have not processed any orders this year.",
        "output": "SELECT e.EmployeeID FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID AND YEAR(o.OrderDate) = YEAR(CURRENT_DATE) WHERE o.OrderID IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average supplier lead time for last month?",
        "output": "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH) GROUP BY products.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping company is used most frequently?",
        "output": "SELECT ShipVia, COUNT(*) AS ShipMethodCount FROM orders GROUP BY ShipVia ORDER BY ShipMethodCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How often do shipments exceed the required date by more than 5 days?",
        "output": "SELECT COUNT(OrderID) FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the percentage of late shipments?",
        "output": "SELECT (COUNT(CASE WHEN ShippedDate > RequiredDate THEN 1 END) * 100.0) / COUNT(OrderID) AS LateShipmentPercentage FROM orders;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which product has the highest average order quantity?",
        "output": "SELECT p.ProductName, AVG(od.Quantity) AS AverageOrderQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY AverageOrderQuantity DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify orders where the shipping address differs from the customer address.",
        "output": "SELECT o.OrderID FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE o.ShipAddress <> c.Address;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time for orders shipped to the United States?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders WHERE ShipCountry = 'United States';",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Analyze the performance of each shipping company over the past year.",
        "output": "SELECT ShipVia, EXTRACT(YEAR FROM OrderDate) AS year, COUNT(OrderID) AS total_orders, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) AS on_time_deliveries, AVG(Freight) AS avg_shipping_cost, AVG(DATEDIFF(ShippedDate, OrderDate)) AS avg_fulfillment_time FROM orders WHERE OrderDate >= DATEADD(year, -1, CURRENT_DATE) GROUP BY ShipVia, year ORDER BY year, on_time_deliveries DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee generated the highest sales in the last month?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATEADD(MONTH, -1, CURDATE()) GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the customer retention rate for the past quarter?",
        "output": "SELECT (COUNT(DISTINCT o.CustomerID) FILTER (WHERE o.OrderDate >= DATE_TRUNC('quarter', CURRENT_DATE) - INTERVAL '3 months' AND o.OrderDate < DATE_TRUNC('quarter', CURRENT_DATE)))::float / (NULLIF(COUNT(DISTINCT o.CustomerID) FILTER (WHERE o.OrderDate >= DATE_TRUNC('quarter', CURRENT_DATE) - INTERVAL '6 months' AND o.OrderDate < DATE_TRUNC('quarter', CURRENT_DATE) - INTERVAL '3 months')), 0)::float AS retention_rate FROM orders o;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders are still pending shipment?",
        "output": "SELECT COUNT(OrderID) AS PendingOrders FROM orders WHERE ShippedDate IS NULL;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales revenue generated in the year 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales_2023 FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2023",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many employees have generated zero sales this month?",
        "output": "SELECT COUNT(e.EmployeeID) FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID LEFT JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.OrderID IS NULL AND MONTH(o.OrderDate) = MONTH(CURRENT_DATE) AND YEAR(o.OrderDate) = YEAR(CURRENT_DATE);",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total discount given by each employee?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the average number of units ordered for each product.",
        "output": "SELECT products.ProductName, AVG([Order Details].Quantity) AS AverageUnitsOrdered FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which customers place the most frequent orders?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average order value for customers residing in Germany?",
        "output": "SELECT AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS average_order_value FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE c.Country = 'Germany';",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employee with the highest number of shipped orders.",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS ShippedOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL GROUP BY e.EmployeeID ORDER BY ShippedOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which product has the highest total sales?",
        "output": "SELECT ProductID, SUM(Quantity * UnitPrice * (1 - Discount)) AS TotalSales FROM [Order Details] GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average unit price of products per supplier?",
        "output": "SELECT suppliers.CompanyName, AVG(products.UnitPrice) AS AverageUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed by each customer per month?",
        "output": "SELECT CustomerID, DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY CustomerID, DATE_FORMAT(OrderDate, '%Y-%m');",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the average order value for each customer.",
        "output": "SELECT customers.CustomerID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Who is the top-performing employee based on sales in 2023?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the monthly sales trends for each employee this year?",
        "output": "SELECT e.EmployeeID, MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY e.EmployeeID, MONTH(o.OrderDate);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products need reordering based on their stock level?",
        "output": "SELECT COUNT(*) FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which product has the highest unit price?",
        "output": "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the relationship between freight cost and order value?",
        "output": "SELECT orders.Freight, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS OrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.Freight;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which month had the highest sales for any product?",
        "output": "SELECT EXTRACT(MONTH FROM o.OrderDate) AS OrderMonth, SUM(od.Quantity * od.UnitPrice * (1 - od.Discount)) AS MonthlySales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY OrderMonth ORDER BY MonthlySales DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value by month for 2023?",
        "output": "SELECT DATE_TRUNC('month', orders.OrderDate) AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales generated by each employee?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List all the orders that have not been shipped yet and are past their required date.",
        "output": "SELECT OrderID FROM orders WHERE ShippedDate IS NULL AND RequiredDate < CURDATE();",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find products with zero units in stock but pending orders.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock = 0 AND UnitsOnOrder > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Who is the top-performing employee in terms of sales for the current year?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were fulfilled within two days of the order date?",
        "output": "SELECT COUNT(OrderID) FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 2;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Calculate the total sales generated by each shipping company.",
        "output": "SELECT shippers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total discount given on each product?",
        "output": "SELECT ProductID, SUM(Quantity * UnitPrice * Discount) AS TotalDiscount FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total revenue from orders handled by employees from a specific city?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE employees.City = 'Specific City' GROUP BY employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total revenue generated by each product?",
        "output": "SELECT ProductID, SUM(Quantity * (UnitPrice - (UnitPrice * Discount))) AS TotalRevenue FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the top 5 suppliers based on total sales revenue.",
        "output": "SELECT s.SupplierID, s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID, s.CompanyName ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the percentage of products that are discontinued?",
        "output": "SELECT COUNT(ProductID) WHERE Discontinued = 1 / COUNT(ProductID) AS percent_discontinued FROM products",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products need to be reordered?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock + UnitsOnOrder <= ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average reorder level across all products?",
        "output": "SELECT AVG(ReorderLevel) AS AverageReorderLevel FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier has the highest average product price?",
        "output": "SELECT suppliers.CompanyName, AVG(products.UnitPrice) AS AveragePrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName ORDER BY AveragePrice DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which orders were placed by employees from a specific region?",
        "output": "SELECT orders.OrderID FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE employees.Region = 'RegionName';",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which category has the best product performance this year?",
        "output": "SELECT products.CategoryID, SUM([Order Details].Quantity) AS TotalSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE YEAR([Order Details].OrderDate) = YEAR(CURRENT_DATE) GROUP BY products.CategoryID ORDER BY TotalSold DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the most frequently shipped product?",
        "output": "SELECT [Order Details].ProductID, COUNT(*) AS product_count FROM [Order Details] GROUP BY [Order Details].ProductID ORDER BY product_count DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which country receives the highest number of shipments?",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS Shipments FROM orders GROUP BY ShipCountry ORDER BY Shipments DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the top three employees by sales for each month.",
        "output": "SELECT e.EmployeeID, MONTH(o.OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, OrderMonth, YEAR(o.OrderDate) ORDER BY OrderMonth, MonthlySales DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the total number of products sold by each employee.",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].Quantity) AS TotalProductsSold FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for the last quarter?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE QUARTER(orders.OrderDate) = QUARTER(CURRENT_DATE - INTERVAL 1 QUARTER) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 QUARTER);",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units are on order for discontinued products?",
        "output": "SELECT SUM(p.UnitsOnOrder) as TotalOnOrder FROM products p WHERE p.Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue for each customer region?",
        "output": "SELECT orders.ShipRegion, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS region_sales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.ShipRegion;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total number of units on order for each supplier?",
        "output": "SELECT SupplierID, SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products GROUP BY SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have the lowest inventory turnover ratio over the past month?",
        "output": "SELECT p.ProductID, p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.UnitsInStock > 0 GROUP BY p.ProductID, p.ProductName HAVING SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) < YOUR_THRESHOLD;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How does customer retention rate vary across regions?",
        "output": "SELECT regions.RegionDescription, (COUNT(DISTINCT orders.CustomerID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01')) * 100 AS retention_rate FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID JOIN employeeTerritories ON orders.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID JOIN region regions ON territories.RegionID = regions.RegionID GROUP BY regions.RegionID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products have been ordered but are currently out of stock?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock = 0 AND ProductID IN (SELECT ProductID FROM [Order Details]);",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average unit price of products within each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many times have customers in each region ordered more than once in a month?",
        "output": "SELECT Region, COUNT(CustomerID) AS RepeatCustomers FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY Region, YEAR(OrderDate), MONTH(OrderDate) HAVING COUNT(DISTINCT OrderID) > 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders have more than a 20% discount?",
        "output": "SELECT COUNT(DISTINCT OrderID) FROM [Order Details] WHERE Discount > 0.2;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue for each month in 2023?",
        "output": "SELECT MONTH(o.OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping company has the highest on-time delivery rate?",
        "output": "SELECT ShipVia, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN OrderID END) * 100.0 / COUNT(OrderID) AS OnTimeRate FROM orders GROUP BY ShipVia ORDER BY OnTimeRate DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the top 5 products contributing the most to revenue in the last year?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Revenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) - 1 GROUP BY p.ProductID, p.ProductName ORDER BY Revenue DESC LIMIT 5",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the average order value for February 2023.",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AverageOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= '2023-02-01' AND o.OrderDate < '2023-03-01';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employee handled the highest number of orders?",
        "output": "SELECT orders.EmployeeID, COUNT(orders.OrderID) AS NumberOfOrders FROM orders GROUP BY orders.EmployeeID ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify discontinued products with remaining stock.",
        "output": "SELECT ProductName FROM products WHERE Discontinued = 1 AND UnitsInStock > 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How much freight is incurred on average per order?",
        "output": "SELECT AVG(orders.Freight) AS avg_freight FROM orders;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average fulfillment time for orders?",
        "output": "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageFulfillmentTime FROM orders;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the employee with the earliest hire date.",
        "output": "SELECT e.EmployeeID, e.HireDate FROM employees e WHERE e.HireDate = (SELECT MIN(HireDate) FROM employees);",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have a unit price greater than the average unit price?",
        "output": "SELECT ProductName FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping method is used most frequently?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS frequency FROM orders GROUP BY ShipVia ORDER BY frequency DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "List products with inventory levels more than twice their reorder level.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock > 2 * ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many orders were shipped late, and who are the suppliers involved?",
        "output": "SELECT COUNT(DISTINCT o.OrderID) AS LateOrders, s.SupplierID, s.CompanyName FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE o.ShippedDate > o.RequiredDate GROUP BY s.SupplierID, s.CompanyName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "List the top 10 best-selling products of all time.",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY TotalSales DESC LIMIT 10;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average discount rate applied to orders?",
        "output": "SELECT AVG(Discount) AS AvgDiscountRate FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Determine the total sales and orders for discontinued products.",
        "output": "SELECT ProductName, SUM([Order Details].Quantity) AS TotalUnits, COUNT([Order Details].OrderID) AS TotalOrders FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE products.Discontinued = 1 GROUP BY ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify the most frequently ordered product.",
        "output": "SELECT ProductID, COUNT(*) AS OrderCount FROM [Order Details] GROUP BY ProductID ORDER BY OrderCount DESC FETCH FIRST 1 ROW ONLY;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which product has the highest average discount given across all orders?",
        "output": "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY AvgDiscount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide the highest number of discontinued products?",
        "output": "SELECT SupplierID, COUNT(ProductID) AS NumberOfDiscontinuedProducts FROM products WHERE Discontinued = 1 GROUP BY SupplierID ORDER BY NumberOfDiscontinuedProducts DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify suppliers with products that have never been discontinued.",
        "output": "SELECT DISTINCT s.SupplierID, s.CompanyName FROM suppliers s WHERE s.SupplierID NOT IN (SELECT SupplierID FROM products WHERE Discontinued = 1);",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed each month last year?",
        "output": "SELECT EXTRACT(MONTH FROM OrderDate) AS Month, COUNT(OrderID) AS OrderCount FROM orders WHERE EXTRACT(YEAR FROM OrderDate) = EXTRACT(YEAR FROM CURRENT_DATE) - 1 GROUP BY Month ORDER BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which city has the highest shipped order volume?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS ShippedOrderVolume FROM orders WHERE ShippedDate IS NOT NULL GROUP BY ShipCity ORDER BY ShippedOrderVolume DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which country has the highest number of orders?",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCountry ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were fulfilled on time in 2023?",
        "output": "SELECT COUNT(OrderID) AS on_time_orders FROM orders WHERE ShippedDate <= RequiredDate AND YEAR(OrderDate) = 2023",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which product has the highest total sales quantity?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantity DESC FETCH FIRST 1 ROW ONLY;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders are delayed past the required date each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS DelayedOrders FROM orders WHERE ShippedDate > RequiredDate GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many suppliers have not delivered in the last quarter?",
        "output": "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN products ON suppliers.SupplierID = products.SupplierID LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID LEFT JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderID IS NULL OR orders.ShippedDate IS NULL OR orders.ShippedDate <= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY suppliers.SupplierID, suppliers.CompanyName HAVING COUNT(orders.OrderID) = 0;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What percentage of total sales is contributed by employees living in each region?",
        "output": "SELECT e.Region, 100 * (SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / (\nSELECT SUM(od2.UnitPrice * od2.Quantity * (1 - od2.Discount)) FROM [Order Details] od2 JOIN orders o2 ON od2.OrderID = o2.OrderID)) AS RegionSalesPercentage FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.Region;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the customer with the longest average time between orders.",
        "output": "SELECT c.CustomerID, AVG(o2.OrderDate - o1.OrderDate) AS AvgTimeBetweenOrders FROM customers c JOIN orders o1 ON c.CustomerID = o1.CustomerID JOIN orders o2 ON c.CustomerID = o2.CustomerID AND o2.OrderDate > o1.OrderDate GROUP BY c.CustomerID ORDER BY AvgTimeBetweenOrders DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total value of orders for each country?",
        "output": "SELECT ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS CountryTotal FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total discount given in each region?",
        "output": "SELECT c.Region, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.Region;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total monthly sales revenue for the year 2023?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(OrderDate) = 2023 GROUP BY month",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue loss due to discounts last month?",
        "output": "SELECT SUM(od.Quantity * od.UnitPrice * od.Discount) AS RevenueLoss FROM [Order Details] od WHERE od.OrderID IN (SELECT OrderID FROM orders WHERE orderDate BETWEEN '2023-09-01' AND '2023-09-30');",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How does the inventory turnover ratio vary by product category?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName",
        "difficulty": "advanced"
    }
]