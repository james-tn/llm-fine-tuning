[
    {
        "scenario": "Order Analysis",
        "input": "What is the average order value in February 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-02-01' AND '2023-02-28';",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average unit price of products provided by each supplier?",
        "output": "SELECT suppliers.CompanyName, AVG(products.UnitPrice) AS AverageUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which city received the highest number of shipped orders?",
        "output": "SELECT ShipCity, COUNT(*) AS ShippedOrders FROM orders GROUP BY ShipCity ORDER BY ShippedOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What are the top 5 cities with the highest number of orders?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS 'Number of Orders' FROM orders GROUP BY ShipCity ORDER BY COUNT(OrderID) DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide products, and what are the names of these products?",
        "output": "SELECT p.ProductName, s.SupplierName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which discontinued products had the highest sales before they were discontinued?",
        "output": "SELECT ProductID, ProductName, SUM(UnitPrice * Quantity) as TotalSalesBeforeDiscontinued FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE Discontinued = 1 GROUP BY ProductID, ProductName ORDER BY TotalSalesBeforeDiscontinued DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the orders that received more than 20% discount.",
        "output": "SELECT OrderID, Discount FROM [Order Details] WHERE Discount > 0.20;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the total freight cost for orders shipped to 'USA'.",
        "output": "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCountry = 'USA';",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales revenue for the past month?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were shipped to 'USA' in June 2023?",
        "output": "SELECT COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2023-06-01' AND '2023-06-30' AND o.ShipCountry = 'USA';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product has the highest total sales revenue?",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total number of discontinued products in each category?",
        "output": "SELECT CategoryID, COUNT(ProductID) as NumberOfDiscontinuedProducts FROM products WHERE Discontinued = 1 GROUP BY CategoryID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer placed the highest number of orders in March 2023?",
        "output": "SELECT o.CustomerID, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY o.CustomerID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated by each customer?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have a unit price greater than the average unit price of all products?",
        "output": "SELECT ProductName FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have inventory levels below the reorder level?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How long does it take on average to ship an order once it is placed?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders WHERE ShippedDate IS NOT NULL;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total freight cost for orders shipped to Canada?",
        "output": "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE ShipCountry = 'Canada';",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for the month of June, 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average value of an order placed in February 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS Average_Order_Value FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-02';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Who are the top 5 customers by total sales revenue?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY total_sales DESC LIMIT 5",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What was the total sales generated by each employee in March 2023?",
        "output": "SELECT o.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY o.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which supplier has the shortest average lead time in delivering products in 2023?",
        "output": "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS avg_lead_time FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY p.SupplierID ORDER BY avg_lead_time ASC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest sales quantity in the last month?",
        "output": "SELECT ProductID, SUM(Quantity) as SalesQuantityLastMonth FROM [Order Details] WHERE OrderDate >= DATEADD(MONTH, -1, GETDATE()) GROUP BY ProductID ORDER BY SalesQuantityLastMonth DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which city had the highest number of orders shipped last month?",
        "output": "SELECT ShipCity, COUNT(*) AS 'Number of Orders' FROM orders WHERE OrderDate >= DATEADD(MONTH, -1, GETDATE()) GROUP BY ShipCity ORDER BY COUNT(*) DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed each month in the last year?",
        "output": "SELECT MONTH(OrderDate) AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names and unit prices of all products that are currently discontinued?",
        "output": "SELECT ProductName, UnitPrice FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What are the top 3 cities with the highest total sales revenue in 2023?",
        "output": "SELECT o.ShipCity, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY o.ShipCity ORDER BY total_sales DESC LIMIT 3",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time for the previous quarter?",
        "output": "SELECT AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS 'Average Order Fulfillment Time' FROM orders WHERE OrderDate >= DATEADD(QUARTER, -1, GETDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the performance of each product, grouped by month?",
        "output": "SELECT P.ProductID, P.ProductName, SUM(OD.Quantity) AS TotalQuantity, DATE_FORMAT(O.OrderDate, '%Y-%m') AS Month FROM products P JOIN [Order Details] OD ON P.ProductID = OD.ProductID JOIN orders O ON OD.OrderID = O.OrderID GROUP BY P.ProductID, DATE_FORMAT(O.OrderDate, '%Y-%m');",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customers have placed more than 10 orders?",
        "output": "SELECT c.CustomerID, COUNT(*) AS OrderCount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID HAVING OrderCount > 10",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Determine the total freight cost handled by each employee.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total number of orders shipped to each region in 2023?",
        "output": "SELECT r.RegionDescription, COUNT(o.OrderID) AS total_orders FROM orders o JOIN territories t ON o.ShipRegion = t.TerritoryDescription JOIN region r ON t.RegionID = r.RegionID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY r.RegionDescription",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were placed by each employee?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the customer retention rate for the year 2023?",
        "output": "SELECT (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which shipping method was used the most in the year 2023?",
        "output": "SELECT o.ShipVia, COUNT(o.OrderID) AS UsageCount FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY o.ShipVia ORDER BY UsageCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average discount applied across all ordered products?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average discount given on products sold by each employee?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].Discount) AS AvgDiscount FROM [Order Details] INNER JOIN orders ON [Order Details].OrderID = orders.OrderID INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the total freight cost for orders shipped in September 2023.",
        "output": "SELECT SUM(o.Freight) AS TotalFreightCost FROM orders o WHERE o.OrderDate BETWEEN '2023-09-01' AND '2023-09-30';",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total freight cost for each order?",
        "output": "SELECT OrderID, Freight FROM orders;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average unit price of products, grouped by category?",
        "output": "SELECT products.CategoryID, AVG(products.UnitPrice) AS AvgUnitPrice FROM products GROUP BY products.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify products where UnitsOnOrder is greater than UnitsInStock.",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder > UnitsInStock;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total number of orders shipped by each employee in 2022?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrdersShippedIn2022 FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY employees.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average lead time of each supplier?",
        "output": "SELECT suppliers.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgLeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN orders ON products.ProductID = [Order Details].ProductID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY suppliers.SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average discount applied to orders in 2023?",
        "output": "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31');",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order fulfillment time in August 2023?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS Average_Fulfillment_Time FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-08';",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the top 5 employees with the highest salaries.",
        "output": "SELECT EmployeeID, FirstName, LastName, Salary FROM employees ORDER BY Salary DESC LIMIT 5",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the total revenue for each supplier.",
        "output": "SELECT p.SupplierID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee handled the most orders in the month of January 2023?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products are generating the highest profit margins?",
        "output": "SELECT ProductID, (SUM([Order Details].UnitPrice * Quantity) - SUM([Order Details].Quantity * products.UnitPrice)) / SUM([Order Details].Quantity * products.UnitPrice) AS ProfitMargin FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductID ORDER BY ProfitMargin DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average number of orders handled per month by each employee?",
        "output": "SELECT employees.EmployeeID, AVG(COUNT(orders.OrderID)) OVER(PARTITION BY YEAR(orders.OrderDate), MONTH(orders.OrderDate)) AS AvgMonthlyOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID, YEAR(orders.OrderDate), MONTH(orders.OrderDate)",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total number of orders placed in the current year?",
        "output": "SELECT COUNT(OrderID) as OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE());",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee handled the order with the highest total value?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS OrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID, e.EmployeeID ORDER BY OrderValue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders were handled by each employee in the last year?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM orders INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY employees.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the total revenue generated by each customer.",
        "output": "SELECT CustomerID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalRevenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average unit price of products supplied by 'SupplierX'?",
        "output": "SELECT AVG(products.UnitPrice) AS AveragePrice FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE suppliers.CompanyName = 'SupplierX';",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated by each shipping method in December 2023?",
        "output": "SELECT orders.ShipVia, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Sales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-12' GROUP BY orders.ShipVia;",
        "difficulty": "hard"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the top 5 products by total sales revenue?",
        "output": "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employees whose performance has improved significantly month-over-month.",
        "output": "SELECT e.EmployeeID, (SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.EmployeeID = e.EmployeeID AND DATE_FORMAT(o.OrderDate, '%Y-%m') = DATE_FORMAT(DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH), '%Y-%m')) AS LastMonthSales, (SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.EmployeeID = e.EmployeeID AND DATE_FORMAT(o.OrderDate, '%Y-%m') = DATE_FORMAT(CURRENT_DATE, '%Y-%m')) AS CurrentMonthSales FROM employees e HAVING CurrentMonthSales > 1.2 * LastMonthSales",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products have a unit price greater than $50?",
        "output": "SELECT ProductName, UnitPrice FROM products WHERE UnitPrice > 50;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the performance of discontinued products compared to active products?",
        "output": "SELECT p.Discontinued, SUM(od.Quantity) AS product_performance FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.Discontinued",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the total quantity ordered for each product.",
        "output": "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantityOrdered FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated by each product?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total freight cost incurred for each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(O.Freight) AS TotalFreight FROM orders O GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the revenue generated for each supplier?",
        "output": "SELECT s.SupplierID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM suppliers s LEFT JOIN products p ON s.SupplierID = p.SupplierID LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average discount applied to orders?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the month with the highest total orders in 2022.",
        "output": "SELECT YEAR(OrderDate) AS OrderYear, MONTH(OrderDate) AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY OrderYear, OrderMonth ORDER BY TotalOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the monthly trend of average order value in 2023.",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which city has the highest number of customers?",
        "output": "SELECT City, COUNT(CustomerID) AS CustomerCount FROM customers GROUP BY City ORDER BY CustomerCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the customer retention rate from January 2023 to March 2023.",
        "output": "WITH CustomersInPeriod AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31'), TotalCustomers AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate < '2023-01-01') SELECT COUNT(CustomersInPeriod.CustomerID) / COUNT(TotalCustomers.CustomerID) AS CustomerRetentionRate FROM CustomersInPeriod, TotalCustomers;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What products need to be reordered (stock level below reorder level) and have no units on order?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel AND UnitsOnOrder = 0;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "List products that have been ordered but have no units in stock.",
        "output": "SELECT p.ProductID, p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE p.UnitsInStock = 0;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers provide the most products?",
        "output": "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many distinct customers placed orders in 2023?",
        "output": "SELECT COUNT(DISTINCT CustomerID) AS DistinctCustomers FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Identify the top 5 cities with the highest freight costs.",
        "output": "SELECT ShipCity, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipCity ORDER BY TotalFreightCost DESC LIMIT 5",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units of each product are currently in stock?",
        "output": "SELECT ProductName, UnitsInStock FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total number of orders and total freight cost by shipping method?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS OrderCount, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipVia;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which region has the most suppliers?",
        "output": "SELECT Region, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY Region ORDER BY SupplierCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What percentage of orders were shipped within 3 days of the order date?",
        "output": "SELECT (COUNT(OrderID) FILTER (WHERE DATEDIFF(day, OrderDate, ShippedDate) <= 3)) * 100.0 / COUNT(OrderID) AS PercentageShippedWithin3Days FROM orders",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Determine the percentage increase or decrease in sales by each employee compared to the previous month.",
        "output": "WITH current_month AS (SELECT EmployeeID, SUM(UnitPrice * Quantity * (1 - Discount)) AS CurrentMonthSales FROM [Order Details] d JOIN orders o ON d.OrderID = o.OrderID WHERE MONTH(o.OrderDate) = MONTH(CURDATE()) GROUP BY EmployeeID), previous_month AS (SELECT EmployeeID, SUM(UnitPrice * Quantity * (1 - Discount)) AS PreviousMonthSales FROM [Order Details] d JOIN orders o ON d.OrderID = o.OrderID WHERE MONTH(o.OrderDate) = MONTH(CURDATE()) - 1 GROUP BY EmployeeID) SELECT cm.EmployeeID, (cm.CurrentMonthSales - pm.PreviousMonthSales) / pm.PreviousMonthSales * 100 AS SalesChange FROM current_month cm JOIN previous_month pm ON cm.EmployeeID = pm.EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the regions with the highest sales and the employees contributing to it.",
        "output": "SELECT e.Region, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales, e.EmployeeID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.Region, e.EmployeeID HAVING TotalSales > 1000",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the month-to-month sales growth for each product?",
        "output": "SELECT P.ProductID, P.ProductName, (SUM(OD.Quantity) - LAG(SUM(OD.Quantity)) OVER (PARTITION BY P.ProductID ORDER BY O.OrderDate)) AS SalesGrowth FROM products P JOIN [Order Details] OD ON P.ProductID = OD.ProductID JOIN orders O ON OD.OrderID = O.OrderID GROUP BY P.ProductID, O.OrderDate;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employees have the highest sales figures for each quarter of 2023?",
        "output": "SELECT o.EmployeeID, QUARTER(o.OrderDate) AS quarter, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY o.EmployeeID, quarter ORDER BY quarter, total_sales DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee contributed to the highest revenue in Q3 2022?",
        "output": "SELECT employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2022-07-01' AND '2022-09-30' GROUP BY employees.EmployeeID ORDER BY total_revenue DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product had the highest sales volume in the last quarter of 2023?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity) AS sales_volume FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31' GROUP BY products.ProductID ORDER BY sales_volume DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping method is most frequently used?",
        "output": "SELECT ShipVia, COUNT(*) AS UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total freight cost of orders shipped to 'USA'?",
        "output": "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShipCountry = 'USA';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales generated in 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the customer who has generated the highest revenue.",
        "output": "SELECT customers.CustomerID, customers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the average units in stock for each product category.",
        "output": "SELECT c.CategoryName, AVG(p.UnitsInStock) AS AverageUnitsInStock FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average unit price of the products supplied by each supplier?",
        "output": "SELECT SupplierID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY SupplierID",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What are the average monthly sales of the top 5 products by revenue in 2023?",
        "output": "SELECT p.ProductID, p.ProductName, AVG(MONTH(o.OrderDate)) AS avg_monthly_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY p.ProductID ORDER BY SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) DESC LIMIT 5",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average unit price of all products?",
        "output": "SELECT AVG(UnitPrice) AS AveragePrice FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest number of orders?",
        "output": "SELECT ProductID, COUNT(OrderID) as NumberOfOrders FROM [Order Details] GROUP BY ProductID ORDER BY NumberOfOrders DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped after the required date?",
        "output": "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the categories with their respective total sales value and average unit price.",
        "output": "SELECT c.CategoryID, c.CategoryName, SUM(od.Quantity * od.UnitPrice) AS TotalSalesValue, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p JOIN categories c ON p.CategoryID = c.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID, c.CategoryName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many orders were placed by each customer?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the average lead time per supplier.",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN orders ON products.ProductID = orders.ProductID GROUP BY suppliers.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many unique customers placed orders in 2022?",
        "output": "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE YEAR(OrderDate) = 2022;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the average discount applied to products in the last month.",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details] WHERE OrderDate >= DATEADD(month, -1, GETDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average sales amount per order handled by each employee?",
        "output": "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AvgSalesPerOrder FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average unit price of products supplied by each supplier?",
        "output": "SELECT SupplierID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the retention rate of customers over the last year?",
        "output": "SELECT COUNT(DISTINCT CASE WHEN orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() THEN orders.CustomerID END) / COUNT(DISTINCT CASE WHEN orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR) THEN orders.CustomerID END) AS RetentionRate FROM orders",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the most popular product in terms of quantity sold within each category?",
        "output": "SELECT categories.CategoryName, products.ProductName, SUM([Order Details].Quantity) AS total_quantity_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryName, products.ProductName ORDER BY total_quantity_sold DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier has the highest total freight costs?",
        "output": "SELECT suppliers.CompanyName, SUM(orders.Freight) AS TotalFreight FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName ORDER BY TotalFreight DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping time for orders with a freight cost over $100?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShippingTime FROM orders WHERE Freight > 100;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average salary of the employees grouped by their title?",
        "output": "SELECT Title, AVG(Salary) AS AverageSalary FROM employees GROUP BY Title;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales revenue generated by each product category?",
        "output": "SELECT products.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employee who handled the greatest number of distinct products.",
        "output": "SELECT employees.EmployeeID, COUNT(DISTINCT [Order Details].ProductID) AS DistinctProducts FROM [Order Details] INNER JOIN orders ON [Order Details].OrderID = orders.OrderID INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID ORDER BY DistinctProducts DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many distinct customers did each employee handle?",
        "output": "SELECT e.EmployeeID, COUNT(DISTINCT o.CustomerID) AS DistinctCustomerCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value each month for the past year?",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS avg_order_value FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) AND CURRENT_DATE() GROUP BY month",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Find the average shipping cost per country.",
        "output": "SELECT ShipCountry, AVG(Freight) AS AverageShippingCost FROM orders GROUP BY ShipCountry",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average freight cost per shipping method?",
        "output": "SELECT ShipVia, AVG(Freight) AS AvgFreight FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the top 5 products by sales quantity.",
        "output": "SELECT TOP 5 p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalQuantity DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the contact details of suppliers in 'Germany'?",
        "output": "SELECT ContactName, ContactTitle, Phone FROM suppliers WHERE Country = 'Germany';",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "List all products along with the suppliers that have discontinued their products.",
        "output": "SELECT p.ProductName, s.SupplierName FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID WHERE p.Discontinued = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which country has the highest shipping cost?",
        "output": "SELECT ShipCountry, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCountry ORDER BY TotalFreight DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Who are the top 5 customers by total amount spent?",
        "output": "SELECT O.CustomerID, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSpent FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID GROUP BY O.CustomerID ORDER BY TotalSpent DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time for the last quarter?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS 'Average Fulfillment Time' FROM orders WHERE QUARTER(OrderDate) = QUARTER(CURDATE())-1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the percentage of orders delivered on or before the required date each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN O.ShippedDate <= O.RequiredDate THEN 1 END) / COUNT(O.OrderID) AS OnTimeDeliveryRate FROM orders O GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee handled the order with the highest total value (considering quantity and unit price)?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY TotalOrderValue DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find all orders where the shipped date is after the required date.",
        "output": "SELECT * FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the top 5 best-selling products?",
        "output": "SELECT P.ProductID, P.ProductName, SUM(OD.Quantity) AS TotalQuantity FROM products P JOIN [Order Details] OD ON P.ProductID = OD.ProductID GROUP BY P.ProductID ORDER BY TotalQuantity DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have delivered products in less than 7 days on average?",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS LeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN orders ON products.ProductID = orders.ProductID GROUP BY suppliers.SupplierID HAVING LeadTime < 7;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which cities have the highest number of suppliers?",
        "output": "SELECT City, COUNT(*) AS NumberOfSuppliers FROM suppliers GROUP BY City ORDER BY NumberOfSuppliers DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the distribution of order fulfillment times in April 2023?",
        "output": "SELECT DATEDIFF(ShippedDate, OrderDate) AS Fulfillment_Time, COUNT(*) AS Order_Count FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-04' GROUP BY Fulfillment_Time;",
        "difficulty": "hard"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide products that are about to reach their reorder level?",
        "output": "SELECT DISTINCT SupplierID FROM products WHERE UnitsInStock <= ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "List the discontinued products and their remaining stock.",
        "output": "SELECT ProductName, UnitsInStock FROM products WHERE Discontinued = 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Show the number of products each supplier has in stock.",
        "output": "SELECT s.SupplierID, SUM(UnitsInStock) AS TotalUnitsInStock FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the products that have been ordered more than 100 times.",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName HAVING OrderCount > 100;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the employees who manage other employees.",
        "output": "SELECT e1.EmployeeID, e1.FirstName, e1.LastName FROM employees e1 JOIN employees e2 ON e1.EmployeeID = e2.ReportsTo;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average discount given in orders for each employee?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(d.Discount) AS AverageDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] d ON o.OrderID = d.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customers have not placed any orders in the last year?",
        "output": "SELECT c.CustomerID FROM customers c LEFT JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderID IS NULL OR o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR)",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipment took the longest time from order to shipment?",
        "output": "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS 'Fulfillment Time' FROM orders ORDER BY DATEDIFF(ShippedDate, OrderDate) DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated by each supplier?",
        "output": "SELECT SupplierID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order fulfillment time in 2023?",
        "output": "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the inventory turnover ratio for each month in 2023?",
        "output": "SELECT MONTH(o.OrderDate) AS month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY MONTH(o.OrderDate)",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product generated the highest total sales revenue?",
        "output": "SELECT OD.ProductID, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM [Order Details] OD GROUP BY OD.ProductID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the products with the highest unit prices.",
        "output": "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which customers have placed the most orders in the last year?",
        "output": "SELECT c.CustomerID, COUNT(o.OrderID) AS total_orders FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE o.OrderDate BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) AND CURRENT_DATE() GROUP BY c.CustomerID ORDER BY total_orders DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping company was used most frequently?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipVia ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Compare the on-time delivery rate between different shipping methods.",
        "output": "SELECT ShipVia, (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate)) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY ShipVia",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total number of units ordered for each product?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalUnitsOrdered FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find employees who have a birthdate in January.",
        "output": "SELECT EmployeeID, CONCAT(FirstName, ' ', LastName) AS FullName FROM employees WHERE MONTH(BirthDate) = 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the top 5 best-selling products by quantity?",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantitySold FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalQuantitySold DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed by each customer in March 2023?",
        "output": "SELECT orders.CustomerID, COUNT(orders.OrderID) AS Order_Count FROM orders WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-03' GROUP BY orders.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the contact name and title for each supplier.",
        "output": "SELECT CompanyName, ContactName, ContactTitle FROM suppliers;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Retrieve the total number of orders placed by each customer.",
        "output": "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were shipped after the required date?",
        "output": "SELECT COUNT(OrderID) as LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many products have a reorder level below their current stock?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total number of orders placed each month?",
        "output": "SELECT YEAR(OrderDate) AS 'Year', MONTH(OrderDate) AS 'Month', COUNT(OrderID) AS 'Number of Orders' FROM orders GROUP BY YEAR(OrderDate), MONTH(OrderDate);",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the average unit price of products ordered in the last month",
        "output": "SELECT AVG(UnitPrice) as AvgUnitPrice FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE());",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many new customers were acquired in each month of 2023?",
        "output": "SELECT MONTH(o.OrderDate) AS month, COUNT(DISTINCT o.CustomerID) AS new_customers FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total sales quantity for each product?",
        "output": "SELECT ProductID, SUM(Quantity) as TotalSalesQuantity FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "easy"
    }
]