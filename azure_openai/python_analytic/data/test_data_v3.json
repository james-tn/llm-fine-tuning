[
    {
        "scenario": "Order Analysis",
        "input": "What was the average order value in Q1 of 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AvgOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the lowest units in stock?",
        "output": "SELECT ProductID, ProductName, UnitsInStock FROM products ORDER BY UnitsInStock ASC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customers placed the highest number of orders last year?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) - 1 GROUP BY CustomerID ORDER BY OrderCount DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the total revenue generated by each product.",
        "output": "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customers are from the United States?",
        "output": "SELECT CustomerID FROM orders WHERE ShipCountry = 'USA'",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "List the products that are being sold at a discount (UnitPrice in orders < UnitPrice in products).",
        "output": "SELECT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.UnitPrice < p.UnitPrice;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employees generated the highest sales revenue in April 2023?",
        "output": "SELECT employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY employees.EmployeeID ORDER BY total_sales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average order value handled by each employee?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the total revenue generated by each product.",
        "output": "SELECT ProductID, SUM(Quantity * UnitPrice) AS TotalRevenue FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the inventory turnover ratio for each month.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) as InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the performance of products based on sales and inventory levels for each month in 2022?",
        "output": "SELECT products.ProductID, MONTH(orders.OrderDate) AS order_month, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID, order_month",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated by each customer?",
        "output": "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID ORDER BY TotalSales DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has processed the most orders for customers in the USA?",
        "output": "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.ShipCountry = 'USA' GROUP BY employees.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which product had the highest sales quantity in the last month?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY p.ProductID, p.ProductName ORDER BY TotalQuantity DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "For each employee, what is the average number of orders handled per month in 2023?",
        "output": "SELECT employees.EmployeeID, AVG(order_count) AS avg_orders_per_month FROM (SELECT employees.EmployeeID, COUNT(orders.OrderID) AS order_count, MONTH(orders.OrderDate) AS order_month FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID, MONTH(orders.OrderDate)) AS temp GROUP BY employees.EmployeeID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many discontinued products are still in stock?",
        "output": "SELECT COUNT(*) AS DiscontinuedInStock FROM products WHERE Discontinued = 1 AND UnitsInStock > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Determine the most frequently used shipping method.",
        "output": "SELECT ShipVia, COUNT(OrderID) AS UseCount FROM orders GROUP BY ShipVia ORDER BY UseCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have not been ordered in the last three months?",
        "output": "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)));",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average Inventory Turnover Ratio for each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the top 5 employees with the highest salaries.",
        "output": "SELECT EmployeeID, FirstName, LastName, Salary FROM employees ORDER BY Salary DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What's the average discount applied to products?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the total sales revenue generated each month.",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What percentage of orders were shipped after the required date each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(CASE WHEN ShippedDate > RequiredDate THEN 1 END) / COUNT(OrderID) AS LateDeliveryRate FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m')",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which shipping method was used most frequently?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the customer retention rate from January 2022 to January 2023?",
        "output": "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2023-01-01') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2022-01-01') AS customer_retention_rate",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order value for the year 2021?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2021;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the top 3 products with the most number of orders.",
        "output": "SELECT p.ProductID, p.ProductName, COUNT(od.OrderID) AS NumberOfOrders FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY NumberOfOrders DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What are the average monthly sales generated by each region?",
        "output": "SELECT territories.RegionID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT DATE_TRUNC('month', orders.OrderDate)) AS avg_monthly_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID GROUP BY territories.RegionID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the order with the highest discount applied.",
        "output": "SELECT od.OrderID, MAX(od.Discount) FROM [Order Details] od;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the monthly total sales revenue over the last year.",
        "output": "SELECT MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY MONTH(o.OrderDate) ORDER BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units are currently in stock for each product?",
        "output": "SELECT ProductName, UnitsInStock FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List employees who have birthdays in the current month.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e WHERE MONTH(e.BirthDate) = MONTH(CURRENT_DATE);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total sales revenue for each product?",
        "output": "SELECT P.ProductID, SUM(OD.Quantity * OD.UnitPrice) AS TotalSalesRevenue FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID GROUP BY P.ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Who is the highest paid employee and what is their total sales?",
        "output": "SELECT e.EmployeeID, e.Salary, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY e.Salary DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average discount given for each supplier's products?",
        "output": "SELECT p.SupplierID, AVG(od.Discount) AS AvgDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the total sales revenue generated in the last month.",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales per employee for each month?",
        "output": "SELECT e.EmployeeID, strftime('%Y-%m', o.OrderDate) as OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, OrderMonth;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "How does the total number of units sold compare between discontinued and active products?",
        "output": "SELECT products.Discontinued, SUM([Order Details].Quantity) AS TotalUnitsSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.Discontinued",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Count the total number of orders placed by each customer.",
        "output": "SELECT CustomerID, COUNT(*) AS total_orders FROM orders GROUP BY CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the product categories with the lowest total sales revenue.",
        "output": "SELECT CategoryID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.CategoryID ORDER BY TotalRevenue ASC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the product categories with the highest average unit price.",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY CategoryID ORDER BY AverageUnitPrice DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders included products with a discount of more than 10%?",
        "output": "SELECT COUNT(*) FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.Discount > 0.1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the performance ranking of products based on sales quantity?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalQuantity DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "List the orders grouped by required dates and their total freight costs.",
        "output": "SELECT RequiredDate, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY RequiredDate;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the month-over-month growth rate of total sales for December 2023.",
        "output": "SELECT (SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) - LAG(SUM(od.UnitPrice * od.Quantity * (1 - od.Discount))) OVER (ORDER BY DATE_FORMAT(o.OrderDate, '%Y-%m'))) / LAG(SUM(od.UnitPrice * od.Quantity * (1 - od.Discount))) OVER (ORDER BY DATE_FORMAT(o.OrderDate, '%Y-%m') ) AS MoM_GrowthRate FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') IN ('2023-11', '2023-12');",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "How does the average unit price of products vary across categories?",
        "output": "SELECT products.CategoryID, AVG(products.UnitPrice) AS AverageUnitPrice FROM products GROUP BY products.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the most common shipping city for the current year?",
        "output": "SELECT ShipCity, COUNT(*) AS OrderCount FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products have a reorder level of zero?",
        "output": "SELECT COUNT(*) AS ZeroReorderProducts FROM products WHERE ReorderLevel = 0",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total revenue generated by each product?",
        "output": "SELECT p.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the total quantity sold for each product, excluding discontinued products.",
        "output": "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalQuantitySold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE products.Discontinued = 0 GROUP BY products.ProductID, products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Determine the average discount applied across all products.",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were placed each month in the last year?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY Month ORDER BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the count of products in each category, supplied by supplier.",
        "output": "SELECT s.SupplierID, s.CompanyName, p.CategoryID, COUNT(p.ProductID) AS ProductCount FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.CompanyName, p.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order fulfillment time for March 2023?",
        "output": "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageFulfillmentTime FROM orders o WHERE o.OrderDate BETWEEN '2023-03-01' AND '2023-03-31';",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the top 3 suppliers based on the total sales value of their products.",
        "output": "SELECT SupplierID, SUM([Order Details].UnitPrice * Quantity) AS TotalSalesValue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY SupplierID ORDER BY TotalSalesValue DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "List all products that need reordering.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order fulfillment time by month for 2023?",
        "output": "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have less than 10 units in stock?",
        "output": "SELECT ProductName, UnitsInStock FROM products WHERE UnitsInStock < 10;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee processed the most orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY EmployeeID ORDER BY TotalOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the customer with the most late shipments.",
        "output": "SELECT c.CustomerID, COUNT(o.OrderID) AS LateOrderCount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.RequiredDate < o.ShippedDate GROUP BY c.CustomerID ORDER BY LateOrderCount DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the orders placed in the last 30 days and their total freight cost.",
        "output": "SELECT o.OrderID, o.OrderDate, o.ShippedDate, o.Freight FROM orders o WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Determine the number of discontinued products.",
        "output": "SELECT COUNT(*) AS DiscontinuedProducts FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per order per month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find out how many orders each employee managed in a specific date range.",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate BETWEEN 'start date' AND 'end date' GROUP BY e.EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have been discontinued?",
        "output": "SELECT ProductName FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the monthly inventory turnover ratio?",
        "output": "SELECT DATEPART(month, OrderDate) AS Month, SUM(OD.Quantity * OD.UnitPrice) / AVG(P.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] OD JOIN products P ON OD.ProductID = P.ProductID GROUP BY DATEPART(month, OrderDate);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products are associated with the highest total order quantities?",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalOrderedQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalOrderedQuantity DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names of products that are currently discontinued?",
        "output": "SELECT ProductName FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total freight cost for all orders made in the year 2022?",
        "output": "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-12-31';",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated in each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the CustomerID and the total number of orders for each customer who has ordered more than 10 times.",
        "output": "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID HAVING COUNT(orders.OrderID) > 10",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were shipped over a week late in August 2023?",
        "output": "SELECT COUNT(OrderID) AS LateOrders FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 7 AND OrderDate BETWEEN '2023-08-01' AND '2023-08-31';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employee achieved the highest sales in 2022?",
        "output": "SELECT o.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY o.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the top 5 best-selling products?",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have a discount applied in more than 10 orders?",
        "output": "SELECT p.ProductName, COUNT(*) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount > 0.0 GROUP BY p.ProductName HAVING OrderCount > 10;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for June 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-06-01' AND '2023-06-30'",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average value of orders placed in January 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List the customers along with their total spent amounts, ordered by highest to lowest total spent.",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSpent FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalSpent DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for Q1 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "List orders where the shipping cost was above average.",
        "output": "SELECT * FROM orders WHERE Freight > (SELECT AVG(Freight) FROM orders);",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average freight cost for orders shipped to Europe?",
        "output": "SELECT AVG(Freight) AS AverageFreightCost FROM orders WHERE ShipCountry IN ('Austria', 'Belgium', 'Denmark', 'Finland', 'France', 'Germany', 'Greece', 'Ireland', 'Italy', 'Netherlands', 'Norway', 'Poland', 'Portugal', 'Spain', 'Sweden', 'Switzerland', 'United Kingdom');",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average salary of employees by title?",
        "output": "SELECT Title, AVG(Salary) AS AvgSalary FROM employees GROUP BY Title;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total number of orders for each product?",
        "output": "SELECT p.ProductName, COUNT(od.OrderID) AS OrderCount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the top 5 products with the highest unit price.",
        "output": "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Calculate the total freight cost for each shipping company in 2023.",
        "output": "SELECT shippers.CompanyName, SUM(orders.Freight) AS total_freight_cost FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY shippers.CompanyName",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the percentage of orders that were shipped within 3 days of being placed?",
        "output": "SELECT COUNT(CASE WHEN DATEDIFF(ShippedDate, OrderDate) <= 3 THEN 1 END) / COUNT(*) * 100 AS WithinThreeDays FROM orders;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have been ordered with a discount?",
        "output": "SELECT DISTINCT p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total number of orders shipped via each shipping method per month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, ShipVia, COUNT(OrderID) AS OrdersShipped FROM orders GROUP BY Month, ShipVia;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the total number of products supplied by each supplier.",
        "output": "SELECT SupplierID, COUNT(ProductID) AS TotalProducts FROM products GROUP BY SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products need to be reordered?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have the highest total sales volume in quantity?",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSalesQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY TotalSalesQuantity DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were placed and fulfilled in each month of 2023?",
        "output": "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, COUNT(orders.OrderID) AS orders_placed, COUNT(CASE WHEN orders.ShippedDate IS NOT NULL THEN 1 END) AS orders_fulfilled FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month ORDER BY month",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What was the total sales revenue generated in the year 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier supplies the highest number of different products?",
        "output": "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order for 2023?",
        "output": "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total value of orders shipped in the first quarter of 2023?",
        "output": "SELECT QUARTER(o.OrderDate) AS OrderQuarter, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = 2023 GROUP BY OrderQuarter;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the Customer Retention Rate for the last 6 months?",
        "output": "SELECT (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND CURDATE()) / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 6 MONTH)) AS CustomerRetentionRate;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the most common job title among the employees?",
        "output": "SELECT Title, COUNT(*) AS TitleCount FROM employees GROUP BY Title ORDER BY TitleCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the difference in days between the hire date and the birthdate of employees.",
        "output": "SELECT EmployeeID, JULIANDAY(HireDate) - JULIANDAY(BirthDate) AS DaysDifference FROM employees;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many products are discontinued?",
        "output": "SELECT COUNT(*) AS discontinued_products FROM products WHERE products.Discontinued = 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "List all orders that took more than 10 days to fulfill in 2021.",
        "output": "SELECT OrderID FROM orders WHERE YEAR(OrderDate) = 2021 AND DATEDIFF(ShippedDate, OrderDate) > 10;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What was the total sales revenue generated each month in the year 2022?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What was the total sales revenue for the month of January 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-01';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for orders placed between January 1, 2023, and December 31, 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which city has received the highest number of orders?",
        "output": "SELECT ShipCity, COUNT(OrderID) as TotalOrders FROM orders GROUP BY ShipCity ORDER BY TotalOrders DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product category has the highest total sales in 2023?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName ORDER BY total_sales DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average reorder level across all products?",
        "output": "SELECT AVG(ReorderLevel) AS AverageReorderLevel FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total inventory value of products currently in stock?",
        "output": "SELECT SUM(UnitsInStock * UnitPrice) AS TotalInventoryValue FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the average quantity of products ordered per order.",
        "output": "SELECT AVG(Quantity) AS AverageQuantity FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the percentage of orders shipped within the same country as the customer?",
        "output": "SELECT (COUNT(*) / (SELECT COUNT(*) from orders) * 100) as percent_same_country FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE o.ShipCountry = c.Country;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "List all employees who were hired this year.",
        "output": "SELECT * FROM employees WHERE YEAR(HireDate) = YEAR(CURDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated each year?",
        "output": "SELECT EXTRACT(YEAR FROM OrderDate) AS Year, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS YearlyRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Year ORDER BY Year;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the total quantity ordered for each product.",
        "output": "SELECT ProductID, SUM(Quantity) AS total_quantity FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders have been placed by customers in Germany in the year 2023?",
        "output": "SELECT COUNT(o.OrderID) FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE c.Country = 'Germany' AND o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the average age of employees.",
        "output": "SELECT AVG((CURRENT_DATE - BirthDate) / 365.25) AS AvgAge FROM employees;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total discount given on orders placed in 2022?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS total_discount FROM orders INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2022",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer region had the highest average order fulfillment time in the past month?",
        "output": "SELECT ShipRegion, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 1 MONTH GROUP BY ShipRegion ORDER BY AvgFulfillmentTime DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average price per unit of all products?",
        "output": "SELECT AVG(UnitPrice) AS AveragePrice FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the average order value for each customer.",
        "output": "SELECT c.CustomerID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) as average_order_value FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the on-time delivery rate for the month of April 2023?",
        "output": "SELECT COUNT(orders.OrderID) FILTER (WHERE orders.ShippedDate <= orders.RequiredDate) / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30'",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the on-time delivery rate for each month in 2023?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE NULL END) * 1.0 / COUNT(*) AS on_time_delivery_rate FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY month;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total number of units on order for each product in 2022?",
        "output": "SELECT products.ProductID, SUM(products.UnitsOnOrder) AS units_on_order FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names and prices of products that have less than 20 units in stock?",
        "output": "SELECT ProductName, UnitPrice FROM products WHERE UnitsInStock < 20;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the total quantity of products sold per product category.",
        "output": "SELECT CategoryID, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY CategoryID",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List all orders that were shipped to Germany.",
        "output": "SELECT * FROM orders WHERE ShipCountry = 'Germany';",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Who are the top 3 employees based on total sales generated?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the total sales for each product?",
        "output": "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the orders that have not been shipped within the required date.",
        "output": "SELECT orders.OrderID, orders.RequiredDate, orders.ShippedDate FROM orders WHERE orders.ShippedDate IS NULL OR orders.ShippedDate > orders.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many products have been discontinued?",
        "output": "SELECT COUNT(*) AS discontinued_count FROM products WHERE products.Discontinued = 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the total units ordered for each supplier?",
        "output": "SELECT s.SupplierID, SUM(od.Quantity) AS TotalUnitsOrdered FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the orders that were placed but never shipped in 2022.",
        "output": "SELECT OrderID FROM orders WHERE ShippedDate IS NULL AND DATE_FORMAT(OrderDate, '%Y') = '2022'",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated by each customer?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated in the month of January 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total quantity of each product sold?",
        "output": "SELECT products.ProductID, SUM([Order Details].Quantity) AS TotalQuantity FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What are the top 5 customers by order value?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY TotalOrderValue DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products are in each category?",
        "output": "SELECT CategoryID, COUNT(ProductID) AS ProductCount FROM products GROUP BY CategoryID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the employees who report to each manager.",
        "output": "SELECT Manager.LastName AS ManagerLastName, Manager.FirstName AS ManagerFirstName, Subordinate.LastName AS EmployeeLastName, Subordinate.FirstName AS EmployeeFirstName FROM employees AS Subordinate JOIN employees AS Manager ON Subordinate.ReportsTo = Manager.EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee generated the most sales in the last year?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products need to be reordered soon?",
        "output": "SELECT products.ProductName FROM products WHERE products.UnitsInStock <= products.ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders did each employee handle in the first quarter of this year?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales for each product category this year?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY categories.CategoryName",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the total freight cost for all orders shipped via each shipping method in 2022.",
        "output": "SELECT ShipVia, SUM(Freight) AS TotalFreight FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the five cities with the highest total sales?",
        "output": "SELECT ShipCity, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCity ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the total number of units ordered for each product category.",
        "output": "SELECT c.CategoryID, SUM(od.Quantity) AS TotalUnitsOrdered FROM [Order Details] od INNER JOIN products p ON od.ProductID = p.ProductID INNER JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the monthly trend of order placements for the current year?",
        "output": "SELECT MONTH(OrderDate) AS Month, COUNT(*) AS NumberOfOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY MONTH(OrderDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How long has each employee been working at the company?",
        "output": "SELECT employees.EmployeeID, DATEDIFF(CURDATE(), employees.HireDate) AS DaysWorked FROM employees;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products need reordering?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products have a reorder level higher than 20?",
        "output": "SELECT COUNT(*) AS HighReorderProducts FROM products WHERE ReorderLevel > 20;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Find the customers who have not placed any orders in the current year.",
        "output": "SELECT CustomerID FROM customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR));",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Identify the top 5 customers who have incurred the highest total freight costs.",
        "output": "SELECT CustomerID, SUM(Freight) AS TotalFreight FROM orders GROUP BY CustomerID ORDER BY TotalFreight DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many units of each product were sold in the first quarter of 2023?",
        "output": "SELECT products.ProductID, SUM([Order Details].Quantity) AS units_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were shipped via each shipping method in 2023?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ShipVia",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed each month in the current year?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY OrderMonth ORDER BY OrderMonth;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product had the highest average discount?",
        "output": "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY AvgDiscount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What percentage of total stock does each product contribute?",
        "output": "SELECT p.ProductID, ROUND(p.UnitsInStock / (SELECT SUM(UnitsInStock) FROM products) * 100, 2) AS StockPercentage FROM products p;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee processed the highest number of orders last month?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) AND MONTH(o.OrderDate) = MONTH(CURDATE()) - 1 GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the month with the highest total sales.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as order_month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) as total_sales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY order_month ORDER BY total_sales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify the top 5 suppliers based on the total sales revenue.",
        "output": "SELECT p.SupplierID, s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.SupplierID, s.CompanyName ORDER BY TotalRevenue DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer generated the highest lifetime value?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS CustomerLifetimeValue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY CustomerLifetimeValue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many employees live in each country?",
        "output": "SELECT Country, COUNT(EmployeeID) AS EmployeeCount FROM employees GROUP BY Country;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue for the month of January 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(OrderDate) = 1 AND YEAR(OrderDate) = 2023;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Find the top 5 cities with the highest average shipping cost.",
        "output": "SELECT ShipCity, AVG(Freight) AS AverageFreight FROM orders GROUP BY ShipCity ORDER BY AverageFreight DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products need to be reordered (units in stock less than reorder level)?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What are the top 5 products by sales revenue?",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] GROUP BY ProductID ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the correlation between employee hire date and performance?",
        "output": "SELECT employees.EmployeeID, employees.HireDate, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY employees.HireDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many new customers were acquired in May 2023?",
        "output": "SELECT COUNT(DISTINCT customers.CustomerID) AS new_customers FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide products that are currently in stock?",
        "output": "SELECT DISTINCT SupplierID FROM products WHERE UnitsInStock > 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many employees are there in each country?",
        "output": "SELECT Country, COUNT(*) AS NumEmployees FROM employees GROUP BY Country;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average fulfillment time for orders by month?",
        "output": "SELECT EXTRACT(MONTH FROM OrderDate) AS Month, AVG(DATEDIFF(DAY, OrderDate, ShippedDate)) AS AvgFulfillmentTime FROM orders GROUP BY EXTRACT(MONTH FROM OrderDate)",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many days on average does it take to fulfill an order?",
        "output": "SELECT AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AvgFulfillmentTime FROM orders",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average discount applied per product?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers have supplied the most products?",
        "output": "SELECT s.SupplierID, COUNT(p.ProductID) AS TotalProductsSupplied FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID ORDER BY TotalProductsSupplied DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which regions have the highest on-time delivery rates?",
        "output": "SELECT ShipRegion, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) * 100.0 / COUNT(OrderID)) AS OnTimeDeliveryRate FROM orders GROUP BY ShipRegion ORDER BY OnTimeDeliveryRate DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders were handled by employees who were hired in the year 2020?",
        "output": "SELECT COUNT(orders.OrderID) AS TotalOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE YEAR(HireDate) = 2020;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average discount applied to products per month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS month, AVG(Discount) AS AverageDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average time between order date and required date?",
        "output": "SELECT AVG(DATEDIFF(RequiredDate, OrderDate)) AS AverageLeadTime FROM orders;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many products have a stock level below their reorder level?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which orders were delayed more than five days past the required date?",
        "output": "SELECT OrderID FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average time taken to fulfill an order?",
        "output": "SELECT AVG(DATE_PART('day', ShippedDate::timestamp - OrderDate::timestamp)) AS AverageFulfillmentTime FROM orders;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the total value of current inventory (UnitPrice * UnitsInStock) for all products.",
        "output": "SELECT SUM(UnitPrice * UnitsInStock) AS TotalInventoryValue FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average lead time for each supplier?",
        "output": "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY products.SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List all orders including the details of the employee who handled them.",
        "output": "SELECT orders.OrderID, orders.CustomerID, orders.OrderDate, employees.LastName, employees.FirstName FROM orders JOIN employees ON orders.EmployeeID = employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total quantity of products ordered from each employee?",
        "output": "SELECT e.EmployeeID, SUM(od.Quantity) AS TotalQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were shipped late in the last month?",
        "output": "SELECT COUNT(orders.OrderID) AS Late_Orders FROM orders WHERE orders.RequiredDate < orders.ShippedDate AND MONTH(orders.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH);",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were shipped late (i.e., shipped after the required date)?",
        "output": "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the most orders shipped on time?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OnTimeOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate <= o.RequiredDate GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the most frequently ordered product?",
        "output": "SELECT p.ProductName, COUNT(od.ProductID) AS OrderCount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have a unit price greater than 50?",
        "output": "SELECT ProductName FROM products WHERE UnitPrice > 50;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units of each product were ordered last month?",
        "output": "SELECT products.ProductID, SUM([Order Details].Quantity) AS UnitsOrderedLastMonth FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderDate >= DATEADD(month, -1, GETDATE()) GROUP BY products.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which shipping company has the highest on-time delivery rate?",
        "output": "SELECT shippers.CompanyName, COUNT(orders.OrderID) WHERE orders.ShippedDate <= orders.RequiredDate / COUNT(orders.OrderID) AS on_time_delivery_rate FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY on_time_delivery_rate DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total discount amount given for each product?",
        "output": "SELECT p.ProductName, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the total number of products sold by each employee.",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].Quantity) AS TotalProductsSold FROM employees INNER JOIN orders ON employees.EmployeeID = orders.EmployeeID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List customers who have not placed any orders in the last year.",
        "output": "SELECT c.CustomerID, c.CompanyName FROM customers c LEFT JOIN orders o ON c.CustomerID = o.CustomerID WHERE o.OrderID IS NULL OR o.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify products with a unit price greater than the average unit price across all products.",
        "output": "SELECT p.ProductID, p.ProductName FROM products p WHERE p.UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the most frequently ordered product in 2023?",
        "output": "SELECT products.ProductID, products.ProductName, COUNT([Order Details].OrderID) AS order_count FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY order_count DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names and IDs of all products that are currently out of stock?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock = 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many products were low on stock (below reorder level) in August 2023?",
        "output": "SELECT products.ProductID FROM products WHERE products.UnitsInStock < products.ReorderLevel AND MONTH(products.RecordDate) = 8 AND YEAR(products.RecordDate) = 2023",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total number of products available in the inventory?",
        "output": "SELECT COUNT(*) FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping company has the highest on-time delivery rate?",
        "output": "SELECT ShipVia, SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(*) AS OnTimeDeliveryRate FROM orders GROUP BY ShipVia ORDER BY OnTimeDeliveryRate DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the top 5 products in terms of total units sold?",
        "output": "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalUnitsSold FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalUnitsSold DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the monthly average shipping cost?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee has the highest sales in Q1 2023?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total revenue generated from each product sold in 2022?",
        "output": "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the most ordered product in terms of quantity?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalQuantityOrdered FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalQuantityOrdered DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many products have less than 10 units in stock?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < 10;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the top 5 products with the highest total sales revenue.",
        "output": "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest and lowest inventory turnover ratio?",
        "output": "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY InventoryTurnoverRatio DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify employees with the highest and lowest order counts.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1 UNION SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount ASC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which employee handled the most orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the average lead time for each supplier in delivered products.",
        "output": "SELECT suppliers.SupplierID, CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.SupplierID, CompanyName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average discount given in orders for the year 2023?",
        "output": "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time by month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgOrderFulfillmentTime FROM orders GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total revenue generated by each employee?",
        "output": "SELECT EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Find the total freight cost incurred in the year 2023.",
        "output": "SELECT SUM(Freight) AS TotalFreightCost2023 FROM orders WHERE YEAR(OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify which month has the highest number of orders historically.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the average number of products per order.",
        "output": "SELECT AVG(od.Quantity) AS AverageProductsPerOrder FROM [Order Details] od;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product has the highest total sales in 2022?",
        "output": "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID ORDER BY total_sales DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were placed in each quarter of 2022?",
        "output": "SELECT QUARTER(orders.OrderDate) AS order_quarter, COUNT(orders.OrderID) AS total_orders FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY order_quarter",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many unique customers placed orders in the last quarter?",
        "output": "SELECT COUNT(DISTINCT CustomerID) FROM orders WHERE OrderDate >= DATEADD(MONTH, -3, GETDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the top three products that generate the most sales revenue?",
        "output": "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od GROUP BY od.ProductID ORDER BY TotalRevenue DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the names of products that have been discontinued?",
        "output": "SELECT ProductName FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which supplier has supplied the most quantity of products?",
        "output": "SELECT SupplierID, SUM(UnitsOnOrder) AS TotalQuantitySupplied FROM products GROUP BY SupplierID ORDER BY TotalQuantitySupplied DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Determine the average discount given by each employee.",
        "output": "SELECT e.EmployeeID, AVG(od.Discount) AS AvgDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which month had the highest number of orders placed?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS OrderCount FROM orders GROUP BY DATE_FORMAT(OrderDate, '%Y-%m') ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Retrieve the contact information for all suppliers located in a specific region.",
        "output": "SELECT SupplierID, CompanyName, ContactName, Phone, City, Region FROM suppliers WHERE Region = 'specified_region';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the discount amount for each order in January 2023.",
        "output": "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS DiscountAmount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31' GROUP BY o.OrderID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the total sales by month?",
        "output": "SELECT YEAR(o.OrderDate) AS Year, MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY YEAR(o.OrderDate), MONTH(o.OrderDate) ORDER BY Year, Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which category has the highest number of products?",
        "output": "SELECT CategoryID, COUNT(ProductID) AS NumberOfProducts FROM products GROUP BY CategoryID ORDER BY NumberOfProducts DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products received the highest total discount?",
        "output": "SELECT products.ProductName, SUM([Order Details].Discount) AS TotalDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalDiscount DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which regions have the highest average order value?",
        "output": "SELECT ShipRegion, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipRegion ORDER BY AverageOrderValue DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the top 3 customers by revenue in the last quarter.",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as Revenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate > DATE_SUB(NOW(), INTERVAL 3 MONTH) GROUP BY customers.CustomerID ORDER BY Revenue DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What percentage of orders were delivered before the required date in 2022?",
        "output": "SELECT SUM(CASE WHEN YEAR(OrderDate) = 2022 AND ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 1.0 / COUNT(OrderID) AS BeforeRequiredDateRate FROM orders WHERE YEAR(OrderDate) = 2022",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which supplier has the shortest average lead time in April 2023?",
        "output": "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY products.SupplierID ORDER BY supplier_lead_time ASC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Who are the employees reporting to each manager?",
        "output": "SELECT m.EmployeeID AS ManagerID, m.LastName AS ManagerLastName, m.FirstName AS ManagerFirstName, e.EmployeeID AS EmployeeID, e.LastName AS EmployeeLastName, e.FirstName AS EmployeeFirstName FROM employees e JOIN employees m ON e.ReportsTo = m.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the average discount applied to orders in January 2023.",
        "output": "SELECT AVG(od.Discount) AS AvgDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the total sales for employees located in a specific region.",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE e.Region = 'specific region' GROUP BY e.EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the names of all suppliers who are located in Germany?",
        "output": "SELECT CompanyName FROM suppliers WHERE Country = 'Germany';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What was the average order value in June 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE DATE_FORMAT(o.OrderDate, '%Y-%m') = '2023-06';",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Calculate the average freight cost for each customer.",
        "output": "SELECT CustomerID, AVG(Freight) AS AvgFreight FROM orders GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed on weekends in the last three months?",
        "output": "SELECT COUNT(OrderID) AS WeekendOrders FROM orders WHERE DAYOFWEEK(OrderDate) IN (1, 7) AND OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales revenue generated in the year 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many products have been ordered but not yet shipped?",
        "output": "SELECT orders.OrderID FROM orders WHERE orders.ShippedDate IS NULL;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products are low in stock and need reordering?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel AND Discontinued = 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped but not yet delivered by the required date?",
        "output": "SELECT COUNT(*) FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Determine the average number of products per order.",
        "output": "SELECT AVG(ProductCount) AS AverageProductsPerOrder FROM (SELECT OrderID, COUNT(ProductID) AS ProductCount FROM [Order Details] GROUP BY OrderID) AS ProductCounts;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide products that are currently discontinued?",
        "output": "SELECT DISTINCT suppliers.SupplierID, suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the most commonly ordered product quantities?",
        "output": "SELECT products.ProductID, SUM([Order Details].Quantity) AS MostCommonQuantities FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID ORDER BY MostCommonQuantities DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the most expensive product by unit price.",
        "output": "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the top 5 highest priced products.",
        "output": "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List customers with their respective regions and count of orders placed.",
        "output": "SELECT customers.CustomerID, customers.Region, COUNT(orders.OrderID) AS total_orders FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID, customers.Region;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Find the top 5 cities with the highest number of orders.",
        "output": "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total quantity of each product sold?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the total sales and the number of orders for each customer in March 2023.",
        "output": "SELECT O.CustomerID, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales, COUNT(O.OrderID) AS OrderCount FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE DATE_FORMAT(O.OrderDate, '%Y-%m') = '2023-03' GROUP BY O.CustomerID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units have been sold for each product, grouped by supplier?",
        "output": "SELECT s.SupplierName, p.ProductName, SUM(od.Quantity) AS TotalQuantitySold FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierName, p.ProductName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Calculate the percentage of orders shipped within 5 days of the order date.",
        "output": "SELECT COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders) AS PercentageWithin5Days FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) <= 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total quantity ordered across all products by month?",
        "output": "SELECT MONTH(OrderDate) AS OrderMonth, YEAR(OrderDate) AS OrderYear, SUM(Quantity) AS TotalQuantityOrdered FROM [Order Details] GROUP BY OrderMonth, OrderYear;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product has generated the highest revenue?",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS Revenue FROM [Order Details] GROUP BY ProductID ORDER BY Revenue DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the average order value for each customer.",
        "output": "SELECT c.CustomerID, AVG((od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(o.OrderID)) AS AverageOrderValue FROM customers c INNER JOIN orders o ON c.CustomerID = o.CustomerID INNER JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average lead time for orders delivered by each supplier?",
        "output": "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers provide products that are currently out of stock?",
        "output": "SELECT s.SupplierName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.UnitsInStock = 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units on order are there for each product?",
        "output": "SELECT p.ProductName, p.UnitsOnOrder FROM products p",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units of each product are currently in stock?",
        "output": "SELECT ProductID, ProductName, UnitsInStock FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product has the highest unit price but lowest sales quantity?",
        "output": "SELECT products.ProductID, products.ProductName FROM products WHERE products.UnitPrice = (SELECT MAX(products.UnitPrice) FROM products) AND products.ProductID NOT IN (SELECT [Order Details].ProductID FROM [Order Details] WHERE [Order Details].Quantity > 0)",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product had the highest sales in terms of quantity in March 2023?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity) AS total_quantity FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY products.ProductName ORDER BY total_quantity DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales generated by each employee for the past year?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY e.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Find the average number of days between order placement and order shipping by customer.",
        "output": "SELECT CustomerID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageDaysToShip FROM orders GROUP BY CustomerID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated by each product category in the last year?",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] JOIN orders ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= CURDATE() - INTERVAL 1 YEAR GROUP BY ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify suppliers that have not supplied any products in the last year.",
        "output": "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN (SELECT products.SupplierID, COUNT(*) AS ProductCount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY products.SupplierID) AS recent_products ON suppliers.SupplierID = recent_products.SupplierID WHERE recent_products.ProductCount IS NULL;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have stock levels below their reorder level?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units of each product are currently on order?",
        "output": "SELECT ProductName, UnitsOnOrder FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the monthly sales trend for each product over the last year?",
        "output": "SELECT products.ProductID, FORMAT([Order Details].OrderDate, 'yyyy-MM') AS Month, SUM([Order Details].Quantity) AS MonthlySales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderDate >= DATEADD(year, -1, GETDATE()) GROUP BY products.ProductID, FORMAT([Order Details].OrderDate, 'yyyy-MM');",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the average discount provided per order.",
        "output": "SELECT AVG([Order Details].Discount) AS AvgDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average quantity per unit for products supplied by each supplier?",
        "output": "SELECT s.SupplierID, s.SupplierName, AVG(CAST(p.QuantityPerUnit AS DECIMAL)) AS AverageQuantityPerUnit FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.SupplierName;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order for the current year?",
        "output": "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE YEAR(orders.OrderDate) = YEAR(CURDATE())",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the top 3 regions by total sales revenue.",
        "output": "SELECT customers.Region, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesRevenue FROM customers INNER JOIN orders ON customers.CustomerID = orders.CustomerID INNER JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.Region ORDER BY TotalSalesRevenue DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders were placed each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which product has the highest cumulative discount in terms of dollar value?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Discount * od.UnitPrice * od.Quantity) AS TotalDiscount FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalDiscount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many different suppliers are there?",
        "output": "SELECT COUNT(DISTINCT SupplierID) FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the correlation between freight cost and fulfillment time?",
        "output": "SELECT Freight, DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee made the highest sales on a specific date?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate = 'YYYY-MM-DD' GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average unit price of products in each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product had the highest sales revenue in 2022?",
        "output": "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS product_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY products.ProductID ORDER BY product_sales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders have been placed by each customer?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee generated the most sales in Q4 2023?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-10-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the maximum, minimum, and average salary of the employees?",
        "output": "SELECT MAX(Salary) AS MaxSalary, MIN(Salary) AS MinSalary, AVG(Salary) AS AvgSalary FROM employees;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average discount given per order in the last week?",
        "output": "SELECT AVG([Order Details].Discount) AS Average_Discount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for the year 2022?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed by each customer in the last quarter of 2022?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate BETWEEN '2022-10-01' AND '2022-12-31' GROUP BY CustomerID",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total quantity of products ordered in each month of the current year?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.Quantity) AS TotalQuantityOrdered FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many orders included products with more than a 10% discount?",
        "output": "SELECT COUNT(DISTINCT od.OrderID) as NumberOfOrders FROM [Order Details] od WHERE od.Discount > 0.10",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the inventory turnover ratio for the past month?",
        "output": "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE EXTRACT(MONTH FROM o.OrderDate) = EXTRACT(MONTH FROM CURRENT_DATE - INTERVAL '1 MONTH');",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the top 3 cities with the most orders placed.",
        "output": "SELECT ShipCity, COUNT(*) AS total_orders FROM orders GROUP BY ShipCity ORDER BY total_orders DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per order for orders shipped to 'Canada'?",
        "output": "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipCountry = 'Canada';",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the retention rate of customers comparing the first half of 2023 to the previous year?",
        "output": "(SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-06-30') / (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate < '2023-01-01') AS customer_retention_rate",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many distinct products have been ordered?",
        "output": "SELECT COUNT(DISTINCT ProductID) AS DistinctProducts FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed each month by each customer?",
        "output": "SELECT c.CustomerID, DATE_FORMAT(o.OrderDate, '%Y-%m') AS OrderMonth, COUNT(o.OrderID) AS OrderCount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID GROUP BY c.CustomerID, OrderMonth;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the hire date of the oldest employee?",
        "output": "SELECT e.FirstName, e.LastName, e.HireDate FROM employees e ORDER BY e.HireDate ASC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many order details entries have a discount greater than 10%?",
        "output": "SELECT COUNT(*) FROM [Order Details] WHERE Discount > 0.1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier has the highest average lead time?",
        "output": "SELECT s.CompanyName, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageLeadTime FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY s.CompanyName ORDER BY AverageLeadTime DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify employees whose orders had the highest average discount applied.",
        "output": "SELECT e.EmployeeID, AVG(od.Discount) AS AvgDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AvgDiscount DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average unit price of products within each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY CategoryID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees who have never made a sale.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL OR o.OrderID IS NULL",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were shipped but not yet delivered?",
        "output": "SELECT OrderID FROM orders WHERE ShippedDate IS NOT NULL AND RequiredDate IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which orders have the highest discounts applied?",
        "output": "SELECT orders.OrderID, MAX([Order Details].Discount) AS MaxDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID ORDER BY MaxDiscount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average time taken to ship an order?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) as AverageShippingTime FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "List the top 5 products by sales for Q2 2023.",
        "output": "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-06-30' GROUP BY products.ProductID ORDER BY total_sales DESC LIMIT 5",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products from each supplier have not been discontinued?",
        "output": "SELECT suppliers.CompanyName, products.ProductName FROM suppliers INNER JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total number of orders where the quantity ordered exceeded 50 units in 2023?",
        "output": "SELECT COUNT(orders.OrderID) AS large_orders FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].Quantity > 50 AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average quantity of products ordered per order?",
        "output": "SELECT AVG([Order Details].Quantity) AS AverageQuantity FROM [Order Details]",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the performance of each product based on sales quantities in Q1 2023?",
        "output": "SELECT products.ProductID, SUM([Order Details].Quantity) AS product_performance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY products.ProductID",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the top 5 customers by the number of orders placed.",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping time for orders shipped to a specific country in the current month?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShippingTime FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m') AND ShipCountry = 'specified_country';",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which customers have purchased more than 5 different products?",
        "output": "SELECT customers.CustomerID, customers.CompanyName FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID, customers.CompanyName HAVING COUNT(DISTINCT [Order Details].ProductID) > 5",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which region has the highest on-time delivery rate?",
        "output": "SELECT ShipRegion, (SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) / COUNT(*)) * 100 AS on_time_rate FROM orders GROUP BY ShipRegion ORDER BY on_time_rate DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed in the current year?",
        "output": "SELECT COUNT(*) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = YEAR(CURRENT_DATE);",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the total discount given on all orders in the last month.",
        "output": "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice * [Order Details].Discount) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_ADD(CURDATE(), INTERVAL -1 MONTH);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have a stock level below their reorder level?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which month had the highest number of orders placed?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY Month ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Determine the employee with the largest average order size.",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderSize FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AvgOrderSize DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many distinct customers placed orders each month?",
        "output": "SELECT DATE_TRUNC('month', o.OrderDate) AS Month, COUNT(DISTINCT o.CustomerID) AS UniqueCustomers FROM orders o GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the average discounts applied per order?",
        "output": "SELECT OrderID, AVG(Discount) AS AverageDiscount FROM [Order Details] GROUP BY OrderID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order fulfillment time for orders made in February 2023?",
        "output": "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgFulfillmentTime FROM orders o WHERE MONTH(o.OrderDate) = 2 AND YEAR(o.OrderDate) = 2023;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Get a list of employees and the number of orders they have handled.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the inventory turnover ratio for the product 'Chai' in May 2023?",
        "output": "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE products.ProductName = 'Chai' AND orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31'",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping method has the shortest average order fulfillment time?",
        "output": "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia ORDER BY AverageFulfillmentTime ASC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the number of products sold with discounts?",
        "output": "SELECT COUNT(DISTINCT ProductID) AS ProductsWithDiscount FROM [Order Details] WHERE Discount > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time per employee?",
        "output": "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageFulfillmentTime FROM orders GROUP BY EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average number of units ordered per order?",
        "output": "SELECT AVG(Quantity) AS AvgQuantityPerOrder FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the total revenue generated from orders shipped to Germany.",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.ShipCountry = 'Germany';",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Determine the freights cost totals for each month in 2023.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Freight) AS TotalFreight FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which categories have an average unit price above $20?",
        "output": "SELECT CategoryName FROM categories c JOIN products p ON c.CategoryID = p.CategoryID GROUP BY c.CategoryName HAVING AVG(p.UnitPrice) > 20;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Who are the suppliers for orders placed in the first quarter of this year?",
        "output": "SELECT DISTINCT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total sales quantity for each product?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalSales FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which city has the highest number of orders?",
        "output": "SELECT ShipCity, COUNT(OrderID) as NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time for each shipping method?",
        "output": "SELECT ShipVia, AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which customers have placed orders in the last month?",
        "output": "SELECT CustomerID FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List customers who have placed orders within the last 30 days.",
        "output": "SELECT * FROM orders WHERE OrderDate >= DATE_SUB(CURRENT_DATE, INTERVAL 30 DAY);",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names and unit prices of all products?",
        "output": "SELECT ProductName, UnitPrice FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the monthly sales performance for each product.",
        "output": "SELECT p.ProductID, p.ProductName, EXTRACT(MONTH FROM o.OrderDate) AS Month, SUM(od.Quantity) AS MonthlySales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY p.ProductID, p.ProductName, EXTRACT(MONTH FROM o.OrderDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated last month?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Sales_Revenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = MONTH(CURRENT_DATE - INTERVAL 1 MONTH) AND YEAR(orders.OrderDate) = YEAR(CURRENT_DATE - INTERVAL 1 MONTH);",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employees have handled the most orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrdersHandled FROM orders GROUP BY EmployeeID ORDER BY OrdersHandled DESC;",
        "difficulty": "medium"
    }
]