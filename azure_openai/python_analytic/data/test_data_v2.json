[
    {
        "scenario": "Supplier Analysis",
        "input": "Determine the average number of units in stock per supplier.",
        "output": "SELECT products.SupplierID, AVG(UnitsInStock) AS Average_Units_In_Stock FROM products GROUP BY products.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Find customers who have purchased products from more than one supplier and detail the interaction.",
        "output": "SELECT c.CustomerID, COUNT(DISTINCT p.SupplierID) AS SupplierCount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID JOIN customers c ON o.CustomerID = c.CustomerID GROUP BY c.CustomerID HAVING SupplierCount > 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average time taken from order date to shipped date?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShippingTime FROM orders WHERE ShippedDate IS NOT NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated by each product?",
        "output": "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the Customer Lifetime Value for each customer who placed orders in 2023?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID WHERE YEAR(orders.OrderDate) = 2023 GROUP BY customers.CustomerID",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How does employee sales correlate with their years of service?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Sales, (DATEDIFF(CURRENT_DATE, HireDate) / 365) AS YearsOfService FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total quantity of a specific product sold this year?",
        "output": "SELECT SUM([Order Details].Quantity) AS TotalSold FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE [Order Details].ProductID = 'specific_product_id' AND YEAR(orders.OrderDate) = YEAR(CURDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the top 3 shipping methods based on total freight cost.",
        "output": "SELECT o.ShipVia, SUM(o.Freight) AS TotalFreight FROM orders o GROUP BY o.ShipVia ORDER BY TotalFreight DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders have been placed by each customer?",
        "output": "SELECT customers.CustomerID, COUNT(orders.OrderID) AS OrderCount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List customers who haven't ordered in the past year.",
        "output": "SELECT customers.CustomerID FROM customers WHERE customers.CustomerID NOT IN (SELECT DISTINCT CustomerID FROM orders WHERE orders.OrderDate >= CURRENT_DATE - INTERVAL '1 year');",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total sales revenue for each product in the last month?",
        "output": "SELECT p.ProductID, SUM(o.Quantity * o.UnitPrice * (1 - o.Discount)) AS TotalSales FROM products p JOIN [Order Details] o ON p.ProductID = o.ProductID WHERE o.OrderDate BETWEEN CURDATE() - INTERVAL 1 MONTH AND CURDATE() GROUP BY p.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the monthly total sales per country?",
        "output": "SELECT orders.ShipCountry, MONTH(orders.OrderDate) AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY orders.ShipCountry, MONTH(orders.OrderDate)",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products are below their reorder level?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "How does the total value of stocks for active products compare to that for discontinued products?",
        "output": "SELECT SUM(UnitPrice * UnitsInStock) AS ActiveProductValue FROM products WHERE Discontinued = 0 UNION SELECT SUM(UnitPrice * UnitsInStock) AS DiscontinuedProductValue FROM products WHERE Discontinued = 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names and unit prices of all discontinued products?",
        "output": "SELECT ProductName, UnitPrice FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names and prices of all discontinued products?",
        "output": "SELECT ProductName, UnitPrice FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales generated by each employee in the past month?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate > DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY e.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the most common shipping method used by customers with high lifetime value?",
        "output": "SELECT shippers.CompanyName, COUNT(orders.OrderID) AS order_count FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN (SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID) AS customer_lifetime ON orders.CustomerID = customer_lifetime.CustomerID JOIN shippers ON orders.ShipVia = shippers.ShipperID WHERE customer_lifetime.lifetime_value > SOME_THRESHOLD GROUP BY shippers.CompanyName ORDER BY order_count DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated by all products in each category?",
        "output": "SELECT CategoryID, SUM([Order Details].UnitPrice * Quantity) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the top 5 employees with the highest number of orders.",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS NumberOfOrders FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY NumberOfOrders DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the monthly sales trend over the past year?",
        "output": "SELECT YEAR(o.OrderDate) AS Year, MONTH(o.OrderDate) AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY YEAR(o.OrderDate), MONTH(o.OrderDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Who are the employees with more than 50 orders completed this year?",
        "output": "SELECT e.EmployeeID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID HAVING COUNT(o.OrderID) > 50;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What percentage of orders included a discount greater than 10%?",
        "output": "SELECT (COUNT(CASE WHEN [Order Details].Discount > 0.1 THEN 1 END) / COUNT([Order Details].OrderID)) * 100 AS DiscountRate FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Who are the top three suppliers in terms of total sales revenue?",
        "output": "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName ORDER BY TotalSales DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time for the first quarter of 2023?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31';",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the most frequent shipping country?",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCountry ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which employee has handled the most orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS HandledOrders FROM orders GROUP BY EmployeeID ORDER BY HandledOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify the top-performing product in terms of total sales value.",
        "output": "SELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSalesValue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY TotalSalesValue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How did the average shipping cost change over the last year?",
        "output": "SELECT EXTRACT(YEAR FROM OrderDate) AS Year, EXTRACT(MONTH FROM OrderDate) AS Month, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY Year, Month ORDER BY Year, Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer has placed the most orders?",
        "output": "SELECT customers.CustomerID, COUNT(OrderID) AS OrderCount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average freight cost per shipping method?",
        "output": "SELECT ShipVia, AVG(Freight) AS AvgFreightCost FROM orders GROUP BY ShipVia;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "List the products that have never been ordered.",
        "output": "SELECT ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].ProductID IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "List the top 5 countries by total number of orders shipped.",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipCountry ORDER BY TotalOrders DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total quantity of each product sold?",
        "output": "SELECT ProductID, SUM(Quantity) as TotalQuantity FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order value for each customer this month?",
        "output": "SELECT o.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = MONTH(CURRENT_DATE) AND YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY o.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How do shipping costs vary by country?",
        "output": "SELECT ShipCountry, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products are currently out of stock?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock = 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the most common shipping city for orders made by customers.",
        "output": "SELECT orders.ShipCity, COUNT(orders.OrderID) AS OrderCount FROM orders GROUP BY orders.ShipCity ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the products that require a reorder.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel AND Discontinued = 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the retention rate for customers over the last year.",
        "output": "SELECT COUNT(DISTINCT CASE WHEN OrderDate BETWEEN DATEADD(year, -1, CURRENT_DATE) AND CURRENT_DATE THEN CustomerID END) / NULLIF(COUNT(DISTINCT CustomerID), 0) AS RetentionRate FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Determine which month had the highest total sales historically.",
        "output": "SELECT MONTH(OrderDate) AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY OrderMonth ORDER BY MonthlySales DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed by customer ID 'C123' in 2021?",
        "output": "SELECT COUNT(o.OrderID) FROM orders o WHERE o.CustomerID = 'C123' AND o.OrderDate BETWEEN '2021-01-01' AND '2021-12-31';",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total number of units sold in the current month?",
        "output": "Corrected SQL: SELECT SUM(Quantity) AS TotalUnitsSold FROM [Order Details] WHERE MONTH('order_date' column) = MONTH(CURRENT_TIMESTAMP);",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders had a shipping cost greater than $100?",
        "output": "SELECT COUNT(OrderID) FROM orders WHERE Freight > 100;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product generated the highest total sales this quarter?",
        "output": "SELECT ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS ProductSales FROM orders JOIN `Order Details` ON orders.OrderID = `Order Details`.OrderID WHERE QUARTER(OrderDate) = QUARTER(CURDATE()) AND YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY ProductID ORDER BY ProductSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "List the top 3 employees who managed the most orders last month.",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS ManagedOrders FROM orders WHERE MONTH(OrderDate) = MONTH(CURDATE()) - 1 GROUP BY EmployeeID ORDER BY ManagedOrders DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which products have the highest discount applied?",
        "output": "SELECT od.ProductID, MAX(od.Discount) AS MaxDiscount FROM [Order Details] od GROUP BY od.ProductID ORDER BY MaxDiscount DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Determine the total freight cost handled by each employee.",
        "output": "SELECT EmployeeID, SUM(Freight) AS TotalFreight FROM orders GROUP BY EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders have been shipped to each country?",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCountry;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify customers with more than 5 orders.",
        "output": "SELECT CustomerID FROM orders GROUP BY CustomerID HAVING COUNT(OrderID) > 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many unique products were ordered in February 2023?",
        "output": "SELECT COUNT(DISTINCT od.ProductID) FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE MONTH(o.OrderDate) = 2 AND YEAR(o.OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products have the highest inventory turnover ratio?",
        "output": "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / NULLIF(AVG(products.UnitsInStock), 0) AS inventory_turnover FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID HAVING inventory_turnover IS NOT NULL ORDER BY inventory_turnover DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped via the least used shipping method?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipVia ORDER BY OrderCount ASC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order fulfillment time for orders placed in December 2022?",
        "output": "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) FROM orders o WHERE MONTH(o.OrderDate) = 12 AND YEAR(o.OrderDate) = 2022;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify products with stock levels below the reorder level.",
        "output": "SELECT ProductID FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the trend of monthly total sales from January to June 2023?",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-06-30' GROUP BY Month ORDER BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List all orders considered 'urgent' based on required dates within the next week.",
        "output": "SELECT OrderID FROM orders WHERE RequiredDate <= DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND ShippedDate IS NULL;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Analyze the impact of product discontinuation on sales, focusing on categories with the highest sales drop.",
        "output": "SELECT cat.CategoryName, p.ProductName, SUM(od.Quantity) AS total_quantity FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID JOIN categories cat ON p.CategoryID = cat.CategoryID WHERE p.Discontinued = 1 GROUP BY cat.CategoryName, p.ProductName ORDER BY total_quantity DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the average discount on all orders.",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average lead time for each supplier to deliver products?",
        "output": "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgLeadTime FROM products p JOIN orders o ON p.ProductID = o.ProductID GROUP BY p.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average order value per customer?",
        "output": "SELECT customers.CustomerID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average order value across all customers?",
        "output": "SELECT AVG(TotalOrderValue) AS AverageOrderValue FROM (SELECT orders.OrderID, SUM([Order Details].UnitPrice * [Order Details].Quantity) AS TotalOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.OrderID) AS OrderValues;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find all customers who have not placed any orders in the last year.",
        "output": "SELECT CustomerID FROM customers WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate >= DATEADD(year, -1, CURRENT_DATE));",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customers have placed the most orders?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the total discount given across all orders.",
        "output": "SELECT SUM([Order Details].Discount) FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify customers with orders shipped after the required date.",
        "output": "SELECT CustomerID FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which order took the longest time to fulfill?",
        "output": "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime FROM orders ORDER BY FulfillmentTime DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average freight cost per order in March 2023?",
        "output": "SELECT AVG(o.Freight) FROM orders o WHERE MONTH(o.OrderDate) = 3 AND YEAR(o.OrderDate) = 2023;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "For each supplier, what is the average expected lead time for pending orders?",
        "output": "SELECT products.SupplierID, AVG(DATEDIFF(orders.RequiredDate, orders.OrderDate)) AS AvgExpectedLeadTime FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.ShippedDate IS NULL GROUP BY products.SupplierID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue for each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What percentage of orders were shipped on time by each employee?",
        "output": "SELECT e.EmployeeID, (COUNT(CASE WHEN o.ShippedDate <= o.RequiredDate THEN 1 END) / COUNT(o.OrderID) * 100) AS OnTimePercentage FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the Inventory Turnover Ratio monthly.",
        "output": "SELECT YEAR(OrderDate) AS Year, MONTH(OrderDate) AS Month, (SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock)) AS InventoryTurnover FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY YEAR(OrderDate), MONTH(OrderDate);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which orders took the longest to fulfill?",
        "output": "SELECT o.OrderID, DATEDIFF(o.ShippedDate, o.OrderDate) AS FulfillmentTime FROM orders o ORDER BY FulfillmentTime DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the order with the most items purchased.",
        "output": "SELECT o.OrderID, SUM(od.Quantity) AS TotalItems FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID ORDER BY TotalItems DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which regions have the highest order fulfillment time?",
        "output": "SELECT ShipRegion, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY ShipRegion ORDER BY AvgFulfillmentTime DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which orders have a shipping cost greater than the average shipping cost?",
        "output": "SELECT OrderID FROM orders WHERE Freight > (SELECT AVG(Freight) FROM orders);",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How do seasonal trends affect total sales and average order value?",
        "output": "SELECT MONTH(orders.OrderDate) AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY MONTH(orders.OrderDate)",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales contribution of employees reporting to a specific manager?",
        "output": "SELECT employees.ReportsTo, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.ReportsTo;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the most common shipping city among all orders?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY ShipCity ORDER BY OrdersCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total revenue generated by each shipping method?",
        "output": "SELECT ShipVia, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN `Order Details` ON orders.OrderID = `Order Details`.OrderID GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product generated the highest sales revenue in March 2023?",
        "output": "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = 3 AND YEAR(o.OrderDate) = 2023 GROUP BY od.ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Determine the inventory turnover ratio per product category.",
        "output": "SELECT c.CategoryID, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnover FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the total revenue for each product.",
        "output": "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were shipped to each country?",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales revenue generated by each supplier for products shipped in 2023?",
        "output": "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.ShippedDate) = 2023 GROUP BY suppliers.CompanyName",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which shipping method was used most frequently in March 2023?",
        "output": "SELECT o.ShipVia, COUNT(o.OrderID) AS Frequency FROM orders o WHERE MONTH(o.OrderDate) = 3 AND YEAR(o.OrderDate) = 2023 GROUP BY o.ShipVia ORDER BY Frequency DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the total freight for orders shipped during the holiday season (November - December) in 2023.",
        "output": "SELECT SUM(orders.Freight) AS TotalFreight FROM orders WHERE MONTH(orders.OrderDate) IN (11, 12) AND YEAR(orders.OrderDate) = 2023;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide more than one product?",
        "output": "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductCount FROM products GROUP BY SupplierID HAVING ProductCount > 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier provides the largest variety of products?",
        "output": "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductVariety FROM products GROUP BY SupplierID ORDER BY ProductVariety DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee generated the highest sales and what products did they sell the most?",
        "output": "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales, products.ProductName FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY employees.EmployeeID, products.ProductName ORDER BY employee_sales DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the top 5 employees by sales volume.",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the expected reorder level for products with the highest sales volume?",
        "output": "SELECT products.ProductID, products.ProductName, products.ReorderLevel FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID ORDER BY SUM([Order Details].Quantity) DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Determine the top 5 products by sales revenue.",
        "output": "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) AS Revenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY Revenue DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the cumulative freight cost for each region.",
        "output": "SELECT customers.Region, SUM(orders.Freight) AS TotalFreight FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.Region;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated from sales of each product?",
        "output": "SELECT ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS Revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify employees with the highest quantity of products sold.",
        "output": "SELECT e.EmployeeID, SUM(od.Quantity) AS TotalQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalQuantity DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify products that should be considered for discontinuation due to low sales.",
        "output": "SELECT p.ProductID, SUM(od.Quantity) FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID HAVING SUM(od.Quantity) < 10;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Determine the most frequently ordered product.",
        "output": "SELECT ProductID, COUNT(*) AS OrderCount FROM [Order Details] GROUP BY ProductID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "List products ordered more than the reorder level.",
        "output": "SELECT ProductName FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName HAVING SUM([Order Details].Quantity) > products.ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which employee processed the most orders?",
        "output": "SELECT EmployeeID, COUNT(*) AS OrdersProcessed FROM orders GROUP BY EmployeeID ORDER BY OrdersProcessed DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify the top suppliers based on the total value of products ordered.",
        "output": "SELECT SupplierID, SUM([Order Details].UnitPrice * [Order Details].Quantity) as TotalOrderValue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY SupplierID ORDER BY TotalOrderValue DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What are the top 3 regions in terms of total orders?",
        "output": "SELECT ShipRegion, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipRegion ORDER BY OrderCount DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the average unit price of products by category.",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AvgUnitPrice FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which city has the highest number of active customers?",
        "output": "SELECT City, COUNT(DISTINCT CustomerID) AS NumberOfCustomers FROM customers GROUP BY City ORDER BY NumberOfCustomers DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average time between order and shipment?",
        "output": "SELECT AVG(DATE_PART('day', ShippedDate) - DATE_PART('day', OrderDate)) AS AvgShippingTime FROM orders WHERE ShippedDate IS NOT NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "For each category, what is the average unit price of products?",
        "output": "SELECT p.CategoryID, AVG(p.UnitPrice) AS AverageUnitPrice FROM products p GROUP BY p.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How much revenue did each employee generate monthly?",
        "output": "SELECT employees.EmployeeID, MONTH(orders.OrderDate) AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS revenue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID, MONTH(orders.OrderDate)",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the percentage of orders with a discount applied?",
        "output": "SELECT (COUNT(CASE WHEN Discount > 0 THEN 1 END) / COUNT(*)) * 100 AS DiscountedOrdersPercentage FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the top 5 products by sales revenue.",
        "output": "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS SalesRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY SalesRevenue DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee earned the most commissions based on sales?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) * 0.1 AS Commissions FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY Commissions DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total number of orders shipped but not yet delivered?",
        "output": "SELECT COUNT(OrderID) FROM orders WHERE ShippedDate IS NOT NULL AND ShippedDate > CURDATE()",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers provide products that are currently discontinued?",
        "output": "SELECT DISTINCT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders did each employee handle in the current year?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees LEFT JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY employees.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List the top 10 customers by total revenue generated.",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalRevenue DESC LIMIT 10;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated by orders with a shipping method of 2?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.ShipVia = 2;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have delivered products after the required date?",
        "output": "SELECT suppliers.SupplierID, CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.ShippedDate > orders.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per order for the last month?",
        "output": "SELECT AVG(Freight) FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the top 5 countries by sales revenue generated by employees?",
        "output": "SELECT o.ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipCountry ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total discount given on orders in March 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * od.Discount) FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE MONTH(o.OrderDate) = 3 AND YEAR(o.OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many unique customers placed orders this month?",
        "output": "SELECT COUNT(DISTINCT CustomerID) FROM orders WHERE MONTH(OrderDate) = MONTH(CURDATE()) AND YEAR(OrderDate) = YEAR(CURDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the total number of products supplied by each supplier.",
        "output": "SELECT s.CompanyName, COUNT(p.ProductID) AS Number_Of_Products FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee handled the most orders last month?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrdersHandled FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = DATE_FORMAT(CURDATE() - INTERVAL 1 MONTH, '%Y-%m') GROUP BY EmployeeID ORDER BY OrdersHandled DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find out which products have never been ordered.",
        "output": "SELECT ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].ProductID IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders have each employee processed in the last year?",
        "output": "SELECT orders.EmployeeID, COUNT(DISTINCT orders.OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY orders.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "For each product, what is the total revenue generated?",
        "output": "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What are the top 3 cities with the highest number of orders shipped?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS NumOrders FROM orders GROUP BY ShipCity ORDER BY NumOrders DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the Customer Retention Rate for the first quarter of 2023.",
        "output": "SELECT COUNT(DISTINCT CASE WHEN OrderDate BETWEEN '2023-01-01' AND '2023-03-31' THEN CustomerID END) / NULLIF(COUNT(DISTINCT CASE WHEN OrderDate < '2023-01-01' THEN CustomerID END), 0) AS RetentionRate FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the on-time delivery rate for March 2023?",
        "output": "SELECT COUNT(o.OrderID WHERE o.ShippedDate <= o.RequiredDate) / COUNT(o.OrderID) FROM orders o WHERE MONTH(o.OrderDate) = 3 AND YEAR(o.OrderDate) = 2023;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the top 5 suppliers by total sales revenue.",
        "output": "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Total_Sales FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.SupplierID ORDER BY Total_Sales DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What percentage of orders were delivered on or before the required date each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, (SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) / COUNT(OrderID)) * 100 AS OnTimeDeliveryRate FROM orders GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Determine the most common order date for 2022.",
        "output": "SELECT o.OrderDate, COUNT(*) FROM orders o WHERE YEAR(o.OrderDate) = 2022 GROUP BY o.OrderDate ORDER BY COUNT(*) DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many products have a stock level below their reorder level?",
        "output": "SELECT ProductID FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping method was used the most in 2022?",
        "output": "SELECT ShipVia, COUNT(ShipVia) AS MethodCount FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY ShipVia ORDER BY MethodCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the month with the lowest product sales performance.",
        "output": "SELECT EXTRACT(MONTH FROM OrderDate) AS OrderMonth, SUM([Order Details].Quantity) AS TotalQuantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY OrderMonth ORDER BY TotalQuantity ASC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which supplier provides the most diverse range of products?",
        "output": "SELECT SupplierID, COUNT(DISTINCT ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which order had the highest freight cost and where was it shipped?",
        "output": "SELECT OrderID, Freight, ShipCountry FROM orders ORDER BY Freight DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many unique products have been purchased by each customer?",
        "output": "SELECT c.CustomerID, COUNT(DISTINCT od.ProductID) AS UniqueProducts FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were received from each region?",
        "output": "SELECT ShipRegion, COUNT(OrderID) AS OrdersCount FROM orders GROUP BY ShipRegion;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the country with the highest total revenue.",
        "output": "SELECT ShipCountry, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipCountry ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average salary for employees in each city?",
        "output": "SELECT City, AVG(Salary) AS AvgSalary FROM employees GROUP BY City",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products are only available in limited quantities per unit?",
        "output": "SELECT ProductName FROM products WHERE CAST(REPLACE(QuantityPerUnit, ' ', '') AS UNSIGNED) < 2;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify products with the highest inventory turnover ratio.",
        "output": "SELECT p.ProductName, (SUM(od.Quantity * od.UnitPrice) / NULLIF(AVG(p.UnitsInStock), 0)) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY InventoryTurnoverRatio DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the month with the highest average order value.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') as Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) as AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY Month ORDER BY AvgOrderValue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average time taken to ship orders for each employee?",
        "output": "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgShipTime FROM orders GROUP BY EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the overall percentage of orders shipped on time?",
        "output": "SELECT SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) * 100.0 / COUNT(OrderID) AS OverallOnTimeRate FROM orders;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which product has the highest unit price?",
        "output": "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "How does each employee's performance compare with their manager?",
        "output": "SELECT e1.EmployeeID, e1.FirstName, e1.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS EmployeeSales, e2.EmployeeID AS ManagerID, e2.FirstName AS ManagerFirstName, e2.LastName AS ManagerLastName, (SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) FROM employees AS e3 JOIN orders AS o3 ON e3.EmployeeID = o3.EmployeeID JOIN [Order Details] AS od3 ON o3.OrderID = od3.OrderID WHERE e3.EmployeeID = e1.ReportsTo) AS ManagerSales FROM employees e1 LEFT JOIN employees e2 ON e1.ReportsTo = e2.EmployeeID JOIN orders ON e1.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY e1.EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total revenue generated for each product?",
        "output": "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od GROUP BY od.ProductID ORDER BY TotalRevenue DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales for each product sold by employees?",
        "output": "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY od.ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which shipping method is used most frequently by each employee?",
        "output": "SELECT EmployeeID, ShipVia, COUNT(OrderID) AS ShippingMethodCount FROM orders GROUP BY EmployeeID, ShipVia ORDER BY ShippingMethodCount DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average freight cost per order by each shipping method?",
        "output": "SELECT ShipVia, AVG(Freight) AS AvgFreightCost FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify countries with the highest customer retention rate between 2022-01-01 and 2022-12-31.",
        "output": "SELECT Country, (COUNT(DISTINCT o.CustomerID) FILTER (WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31'))::decimal / NULLIF(COUNT(DISTINCT o.CustomerID FILTER (WHERE o.OrderDate < '2022-01-01')), 0) AS RetentionRate FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID GROUP BY Country;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify the top 3 countries with the most suppliers.",
        "output": "SELECT Country, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY Country ORDER BY SupplierCount DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which products have been ordered the most by each employee?",
        "output": "SELECT e.EmployeeID, od.ProductID, SUM(od.Quantity) AS TotalQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, od.ProductID ORDER BY TotalQuantity DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the total revenue generated by each product, considering discounts.",
        "output": "SELECT products.ProductName, SUM(([Order Details].UnitPrice * [Order Details].Quantity) * (1 - [Order Details].Discount)) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the percentage of discontinued products in stock.",
        "output": "SELECT (SUM(CASE WHEN Discontinued = 1 THEN UnitsInStock ELSE 0 END) / SUM(UnitsInStock)) * 100 AS DiscontinuedInStockPercentage FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the most common shipping city?",
        "output": "SELECT ShipCity, COUNT(OrderID) FROM orders GROUP BY ShipCity ORDER BY COUNT(OrderID) DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which orders have been shipped late?",
        "output": "SELECT o.OrderID FROM orders o WHERE o.ShippedDate > o.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the top 3 shipping countries based on order volume for 2021.",
        "output": "SELECT o.ShipCountry, COUNT(*) FROM orders o WHERE YEAR(o.OrderDate) = 2021 GROUP BY o.ShipCountry ORDER BY COUNT(*) DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many different cities are represented by our suppliers?",
        "output": "SELECT COUNT(DISTINCT City) FROM suppliers;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the most frequently ordered products in 2022.",
        "output": "SELECT ProductName, COUNT([Order Details].ProductID) AS OrderCount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY ProductName ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which region has the most suppliers, and what are their contact details?",
        "output": "SELECT suppliers.Region, COUNT(suppliers.SupplierID) AS SupplierCount, GROUP_CONCAT(suppliers.ContactName) AS Contacts FROM suppliers GROUP BY suppliers.Region ORDER BY SupplierCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were fulfilled in less than a week?",
        "output": "SELECT OrderID FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) < 7;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have the highest stock level that exceeds their reorder point?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock > ReorderLevel ORDER BY UnitsInStock DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the contact names and titles for suppliers in the USA.",
        "output": "SELECT ContactName, ContactTitle FROM suppliers WHERE Country = 'USA';",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the top 5 employees by sales, including their regions.",
        "output": "SELECT e.EmployeeID, e.Region, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, e.Region ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total freight cost for all orders shipped last month?",
        "output": "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShippedDate BETWEEN DATE_FORMAT(CURDATE() - INTERVAL 1 MONTH, '%Y-%m-01') AND DATE_FORMAT(CURDATE(), '%Y-%m-01');",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest total sales quantity this month?",
        "output": "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE MONTH(od.OrderDate) = MONTH(CURDATE()) AND YEAR(od.OrderDate) = YEAR(CURDATE()) GROUP BY p.ProductID ORDER BY TotalQuantity DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employee with the shortest delivery time for their orders.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, MIN(DATEDIFF(o.ShippedDate, o.OrderDate)) AS ShortestDeliveryTime FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL GROUP BY e.EmployeeID ORDER BY ShortestDeliveryTime LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest total sales value in the last year?",
        "output": "SELECT EmployeeID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY EmployeeID ORDER BY TotalSales DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Determine the average order fulfillment time for orders with a discount.",
        "output": "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.OrderID IN (SELECT DISTINCT OrderID FROM [Order Details] WHERE Discount > 0)",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales value generated by each employee every month?",
        "output": "SELECT EmployeeID, EXTRACT(YEAR FROM OrderDate) AS Year, EXTRACT(MONTH FROM OrderDate) AS Month, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY EmployeeID, Year, Month",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which product has the highest unit price?",
        "output": "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names and prices of all products currently in stock?",
        "output": "SELECT ProductName, UnitPrice FROM products WHERE UnitsInStock > 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify all suppliers located in a specific region.",
        "output": "SELECT * FROM suppliers WHERE Region = 'specific region';",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide discontinued products?",
        "output": "SELECT s.SupplierName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average unit price of discontinued products?",
        "output": "SELECT AVG(UnitPrice) AS AvgDiscontinuedPrice FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest total sales?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the percentage of orders that were shipped on time for each employee?",
        "output": "SELECT EmployeeID, (SUM(CASE WHEN ShippedDate <= RequiredDate THEN 1 ELSE 0 END) / COUNT(OrderID)) * 100 AS OnTimeRate FROM orders GROUP BY EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the largest average order size in terms of quantity?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].Quantity) AS AverageOrderSize FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AverageOrderSize DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which city received the most shipments in the first half of 2023?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS Shipments FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-06-30' GROUP BY ShipCity ORDER BY Shipments DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average unit price of products supplied by each supplier?",
        "output": "SELECT SupplierID, AVG(UnitPrice) AS AvgUnitPrice FROM products GROUP BY SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the total number of units in stock for each supplier.",
        "output": "SELECT SupplierID, SUM(UnitsInStock) FROM products GROUP BY SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were fulfilled within the same day?",
        "output": "SELECT COUNT(OrderID) AS SameDayFulfillment FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) = 0;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the overall discount given across all orders?",
        "output": "SELECT SUM(Quantity * UnitPrice * Discount) AS TotalDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which shipping method was used most frequently in the last quarter?",
        "output": "SELECT orders.ShipVia, COUNT(orders.OrderID) AS Frequency FROM orders WHERE QUARTER(orders.OrderDate) = QUARTER(CURRENT_DATE) - 1 GROUP BY orders.ShipVia ORDER BY Frequency DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total number of units sold for each product?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalUnitsSold FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products belong to each category?",
        "output": "SELECT CategoryID, COUNT(*) AS ProductCount FROM products GROUP BY CategoryID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders did each employee process?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrdersProcessed FROM orders GROUP BY EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the reorder level for products with the highest stock?",
        "output": "SELECT ProductID, ReorderLevel FROM products ORDER BY UnitsInStock DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest average discount on their orders?",
        "output": "SELECT e.EmployeeID, AVG(od.Discount) AS AverageDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY AverageDiscount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products need to be reordered?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total freight cost for each shipping method?",
        "output": "SELECT ShipVia, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products have a unit price above $50?",
        "output": "SELECT ProductName FROM products WHERE UnitPrice > 50;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total revenue from orders shipped in the past month?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE ShippedDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many units are currently in stock for each product, and what is the total value of this stock?",
        "output": "SELECT ProductName, UnitsInStock, UnitsInStock * UnitPrice AS StockValue FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many products have been discontinued in the last year and what was their sales contribution?",
        "output": "SELECT products.ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE products.Discontinued = 1 AND orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY products.ProductID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the highest freight cost incurred for an order and which customer did it involve?",
        "output": "SELECT OrderID, CustomerID, Freight FROM orders ORDER BY Freight DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the highest discount given across all orders?",
        "output": "SELECT MAX(Discount) AS HighestDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total discount applied in all orders?",
        "output": "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice * Discount) AS TotalDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping method is used most frequently?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS UsageCount FROM orders GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the month with the highest average discount on orders.",
        "output": "SELECT EXTRACT(MONTH FROM OrderDate) AS OrderMonth, AVG([Order Details].Discount) AS AvgDiscount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY OrderMonth ORDER BY AvgDiscount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which city has the highest total sales from our employees?",
        "output": "SELECT o.ShipCity, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.ShipCity ORDER BY TotalSales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average order size (in dollar amount) for each customer?",
        "output": "SELECT CustomerID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderSize FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the total discount given on all products.",
        "output": "SELECT SUM(od.Quantity * od.Discount) AS TotalDiscount FROM [Order Details] od;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products are both on order and discontinued?",
        "output": "SELECT ProductName FROM products WHERE UnitsOnOrder > 0 AND Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the city with the highest number of suppliers.",
        "output": "SELECT City, COUNT(*) AS Number_of_Suppliers FROM suppliers GROUP BY City ORDER BY Number_of_Suppliers DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How does the average shipping cost vary by month?",
        "output": "SELECT MONTH(orders.OrderDate) AS month, AVG(orders.Freight) AS avg_shipping_cost FROM orders GROUP BY month",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which product has the highest number of units on order?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder = (SELECT MAX(UnitsOnOrder) FROM products);",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Get the average unit price of products ordered more than 1000 times.",
        "output": "SELECT AVG(UnitPrice) FROM [Order Details] GROUP BY ProductID HAVING SUM([Order Details].Quantity) > 1000;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products have the highest turnover ratio?",
        "output": "SELECT products.ProductID, SUM([Order Details].Quantity * [Order Details].UnitPrice) / NULLIF(AVG(products.UnitsInStock), 0) AS turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID ORDER BY turnover_ratio DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What was the total freight cost for all orders shipped in January 2023?",
        "output": "SELECT SUM(Freight) FROM orders WHERE ShippedDate BETWEEN '2023-01-01' AND '2023-01-31';",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders are shipped to each country?",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCountry;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales revenue generated by each product category in the last year?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS category_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) - 1 GROUP BY categories.CategoryName",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which orders have been delayed by more than a week?",
        "output": "SELECT OrderID, DATEDIFF(ShippedDate, RequiredDate) AS DelayDays FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 7;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the distribution of employee titles and their average sales?",
        "output": "SELECT e.Title, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.Title;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average shipping cost for orders handled by each employee?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(o.Freight) AS AvgShippingCost FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were handled by each shipping method?",
        "output": "SELECT ShipVia, COUNT(OrderID) FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products received the highest discount on average?",
        "output": "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY AvgDiscount DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many orders have been placed for each product?",
        "output": "SELECT ProductID, COUNT(DISTINCT OrderID) AS OrderCount FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer has placed the most orders?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID ORDER BY TotalOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the month with the highest number of orders.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY Month ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "List products where the order quantity is greater than units in stock.",
        "output": "SELECT p.ProductID, p.ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Quantity > p.UnitsInStock;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average units per order for each product category?",
        "output": "SELECT CategoryID, AVG(Quantity) FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many units of discontinued products are still in stock?",
        "output": "SELECT ProductName, UnitsInStock FROM products WHERE Discontinued = 1 AND UnitsInStock > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the top 3 best-selling products over the last quarter?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] WHERE OrderDate BETWEEN '2023-07-01' AND '2023-09-30' GROUP BY ProductID ORDER BY TotalQuantity DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier supplies the most diverse range of products?",
        "output": "SELECT SupplierID, COUNT(DISTINCT CategoryID) AS ProductDiversity FROM products GROUP BY SupplierID ORDER BY ProductDiversity DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders did each employee process?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated by each customer?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed by each customer in the year 2022?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many orders have a freight cost over $100?",
        "output": "SELECT COUNT(*) FROM orders WHERE Freight > 100;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Identify the order with the highest freight cost in March 2023.",
        "output": "SELECT OrderID FROM orders WHERE Freight = (SELECT MAX(Freight) FROM orders WHERE OrderDate BETWEEN '2023-03-01' AND '2023-03-31');",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the most frequently ordered product.",
        "output": "SELECT od.ProductID, COUNT(*) AS Order_Frequency FROM [Order Details] od GROUP BY od.ProductID ORDER BY Order_Frequency DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "List all products that have never been ordered.",
        "output": "SELECT ProductID FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many employees have achieved sales exceeding $100,000?",
        "output": "SELECT employees.EmployeeID FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID HAVING SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) > 100000;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Determine the total sales revenue generated by each shipping recipient name.",
        "output": "SELECT orders.ShipName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Revenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.ShipName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average discount applied on each product?",
        "output": "SELECT ProductID, AVG(Discount) AS AvgDiscount FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many orders were shipped late?",
        "output": "SELECT COUNT(*) FROM orders WHERE RequiredDate < ShippedDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were fulfilled within one week of the order date?",
        "output": "SELECT COUNT(orders.OrderID) AS quick_fulfilled_orders FROM orders WHERE DATEDIFF(orders.ShippedDate, orders.OrderDate) <= 7 AND orders.ShippedDate IS NOT NULL",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the top product sold in terms of quantity each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY Month, ProductID ORDER BY Month, TotalQuantity DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Determine the products that have received the highest discount.",
        "output": "SELECT products.ProductName, MAX([Order Details].Discount) FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName ORDER BY MAX([Order Details].Discount) DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the longest tenure in the company?",
        "output": "SELECT EmployeeID FROM employees ORDER BY DATEDIFF(CURRENT_DATE, HireDate) DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the trend of total sales over the last three years by product category?",
        "output": "SELECT categories.CategoryName, YEAR(orders.OrderDate), SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) BETWEEN (YEAR(CURDATE()) - 2) AND YEAR(CURDATE()) GROUP BY categories.CategoryName, YEAR(orders.OrderDate) ORDER BY YEAR(orders.OrderDate)",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify orders with zero discounts.",
        "output": "SELECT OrderID FROM [Order Details] WHERE Discount = 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many distinct products have been ordered in March 2023?",
        "output": "SELECT COUNT(DISTINCT ProductID) AS DistinctProductCount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE MONTH(OrderDate) = 3 AND YEAR(OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units of each product are currently in stock?",
        "output": "SELECT ProductName, UnitsInStock FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total number of distinct products ordered in the last year?",
        "output": "SELECT COUNT(DISTINCT ProductID) FROM [Order Details] WHERE OrderDate >= DATEADD(year, -1, GETDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products are supplied by each supplier?",
        "output": "SELECT SupplierID, COUNT(*) AS ProductCount FROM products GROUP BY SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which shipping method is used most frequently?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipVia ORDER BY TotalOrders DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have been ordered but not yet shipped and are below reorder level?",
        "output": "SELECT ProductName FROM products WHERE UnitsOnOrder > 0 AND UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders has each employee processed?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average order size handled by each employee?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderSize FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order fulfillment time for different shipping methods?",
        "output": "SELECT orders.ShipVia, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.ShippedDate IS NOT NULL GROUP BY orders.ShipVia",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average order quantity for each product?",
        "output": "SELECT od.ProductID, AVG(od.Quantity) AS AvgQuantity FROM [Order Details] od GROUP BY od.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Determine the number of suppliers located in each country.",
        "output": "SELECT s.Country, COUNT(s.SupplierID) AS NumberOfSuppliers FROM suppliers s GROUP BY s.Country;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify products that are both below reorder level and discontinued.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel AND Discontinued = 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the most popular ship country?",
        "output": "SELECT orders.ShipCountry, COUNT(orders.OrderID) AS NumberOfOrders FROM orders GROUP BY orders.ShipCountry ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "List the top 5 countries with the most orders shipped in 2022.",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS TotalOrders FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY ShipCountry ORDER BY TotalOrders DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products have never been purchased by customers?",
        "output": "SELECT ProductID FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which city had the highest order count this year?",
        "output": "SELECT o.ShipCity, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE YEAR(o.OrderDate) = YEAR(CURRENT_DATE) GROUP BY o.ShipCity ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the number of orders placed by each customer.",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List employees who have managed orders to more than three different countries.",
        "output": "SELECT employees.EmployeeID, COUNT(DISTINCT ShipCountry) AS CountryCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID HAVING CountryCount > 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the total value of current inventory.",
        "output": "SELECT SUM(UnitPrice * UnitsInStock) AS TotalInventoryValue FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units of each product are on order currently?",
        "output": "SELECT ProductName, UnitsOnOrder FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the current stock level for each product?",
        "output": "SELECT ProductName, UnitsInStock FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Determine the earliest shipped date for any order placed in 2023.",
        "output": "SELECT MIN(ShippedDate) FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the relationship between freight cost and total sales revenue?",
        "output": "SELECT Freight, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Freight ORDER BY TotalSales DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Determine which suppliers provide the most discounted products.",
        "output": "SELECT SupplierID, COUNT(DISTINCT [Order Details].ProductID) FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE Discount > 0 GROUP BY SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total number of orders shipped using each shipping method?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY ShipVia;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the fastest order fulfillment time recorded this year?",
        "output": "SELECT MIN(DATEDIFF(ShippedDate, OrderDate)) AS FastestTime FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE());",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the monthly inventory turnover ratio.",
        "output": "SELECT YEAR(o.OrderDate) AS Year, MONTH(o.OrderDate) AS Month, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnover FROM [Order Details] JOIN orders o ON [Order Details].OrderID = o.OrderID JOIN products p ON [Order Details].ProductID = p.ProductID GROUP BY YEAR(o.OrderDate), MONTH(o.OrderDate);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employee with the highest sales revenue for the past month.",
        "output": "SELECT employees.EmployeeID, employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(OrderDate) = MONTH(CURDATE()) - 1 AND YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the average salary of employees by city.",
        "output": "SELECT City, AVG(Salary) AS AvgSalary FROM employees GROUP BY City;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which city has the highest total freight cost?",
        "output": "SELECT ShipCity, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCity ORDER BY TotalFreight DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the growth rate of total orders month over month.",
        "output": "SELECT A.Month, ((B.TotalOrders - A.TotalOrders) / A.TotalOrders * 100) AS GrowthRate FROM (SELECT EXTRACT(YEAR_MONTH FROM OrderDate) AS Month, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY Month) A JOIN (SELECT EXTRACT(YEAR_MONTH FROM OrderDate) AS Month, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY Month) B ON B.Month = A.Month + 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total discount given on all orders?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS TotalDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which suppliers consistently deliver on time and maintain high product quality?",
        "output": "SELECT suppliers.CompanyName, AVG(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 ELSE 0 END) AS on_time_rate, COUNT(DISTINCT products.ProductID) AS product_quality FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY suppliers.CompanyName",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify products with the highest discount applied on sales.",
        "output": "SELECT p.ProductID, MAX(od.Discount) AS MaxDiscount FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY MaxDiscount DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee has processed the most orders this year?",
        "output": "SELECT EmployeeID, COUNT(OrderID) FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY EmployeeID ORDER BY COUNT(OrderID) DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost breakdown by country?",
        "output": "SELECT ShipCountry, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest unit price and are still in stock?",
        "output": "SELECT ProductID, UnitPrice FROM products WHERE UnitsInStock > 0 ORDER BY UnitPrice DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier provides the most discounted products?",
        "output": "SELECT suppliers.SupplierID, COUNT(DISTINCT products.ProductID) AS DiscountedProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].Discount > 0 GROUP BY suppliers.SupplierID ORDER BY DiscountedProducts DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Compare monthly sales performance for products over the last year.",
        "output": "SELECT MONTH(OrderDate) as OrderMonth, ProductID, SUM(Quantity) as TotalQuantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY OrderMonth, ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer placed the highest number of orders in 2022?",
        "output": "SELECT o.CustomerID, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY o.CustomerID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide products that are currently out of stock?",
        "output": "SELECT DISTINCT SupplierID FROM products WHERE UnitsInStock = 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed by each customer in the last year?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify orders with a shipping delay greater than 7 days.",
        "output": "SELECT OrderID FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 7;",
        "difficulty": "advanced"
    }
]