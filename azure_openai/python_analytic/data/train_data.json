[
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales revenue from orders placed by customers in the 'Retail' segment in 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_revenue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN customers c ON o.CustomerID = c.CustomerID JOIN customerCustomerDemo cd ON c.CustomerID = cd.CustomerID JOIN customerDemographics dd ON cd.CustomerTypeID = dd.CustomerTypeID WHERE dd.CustomerDesc = 'Retail' AND o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders have a discount applied?",
        "output": "SELECT COUNT(DISTINCT OrderID) AS OrdersWithDiscount FROM [Order Details] WHERE Discount > 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the Customer Retention Rate for the last month.",
        "output": "WITH PreviousOrders AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate < DATEADD(MONTH, -1, CURDATE())), CurrentOrders AS (SELECT DISTINCT CustomerID FROM orders WHERE OrderDate BETWEEN DATEADD(MONTH, -1, CURDATE()) AND CURDATE()) SELECT (SELECT COUNT(*) FROM CurrentOrders WHERE CustomerID IN (SELECT CustomerID FROM PreviousOrders)) / (SELECT COUNT(*) FROM PreviousOrders) AS CustomerRetentionRate;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the inventory turnover ratio for each product for the past month.",
        "output": "SELECT p.ProductID, p.ProductName, (SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock)) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATEADD(month, -1, GETDATE()) GROUP BY p.ProductID, p.ProductName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which suppliers have the shortest lead times?",
        "output": "SELECT p.SupplierID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS avg_lead_time FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID JOIN products p ON od.ProductID = p.ProductID GROUP BY p.SupplierID ORDER BY avg_lead_time ASC",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the average order value for each customer.",
        "output": "SELECT customers.CustomerID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as AvgOrderValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the on-time delivery rate for each month in the past year?",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS month, COUNT(CASE WHEN o.ShippedDate <= o.RequiredDate THEN 1 ELSE NULL END) / COUNT(o.OrderID) AS on_time_delivery_rate FROM orders o GROUP BY month",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total freight cost incurred for orders shipped last month?",
        "output": "SELECT SUM(orders.Freight) AS TotalFreight FROM orders WHERE YEAR(orders.ShippedDate) = YEAR(CURDATE()) AND MONTH(orders.ShippedDate) = MONTH(CURDATE()) - 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the most frequently ordered product?",
        "output": "SELECT ProductID, ProductName, COUNT([Order Details].OrderID) AS OrderFrequency FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductID ORDER BY OrderFrequency DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the top 5 customers by total sales revenue in 2023?",
        "output": "SELECT CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY CustomerID ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the highest unit price among products supplied by each supplier?",
        "output": "SELECT suppliers.SupplierID, MAX(products.UnitPrice) AS MaxUnitPrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many days on average does it take for employees to ship an order from the order date?",
        "output": "SELECT employees.EmployeeID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgShippingTime FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.ShippedDate IS NOT NULL GROUP BY employees.EmployeeID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Determine the products with the highest and lowest unit prices.",
        "output": "SELECT (SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1) UNION ALL (SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice ASC LIMIT 1)",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which product category has the most units in stock?",
        "output": "SELECT CategoryID, SUM(UnitsInStock) AS TotalStock FROM products GROUP BY CategoryID ORDER BY TotalStock DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest reorder level?",
        "output": "SELECT ProductID, ProductName, ReorderLevel FROM products ORDER BY ReorderLevel DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were shipped after the required date in June 2023?",
        "output": "SELECT COUNT(*) AS Late_Orders FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-06' AND ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the top 3 suppliers by the total number of units supplied.",
        "output": "SELECT s.SupplierName, SUM(UnitsOnOrder) AS TotalUnits FROM products p JOIN suppliers s ON p.SupplierID = s.SupplierID GROUP BY s.SupplierName ORDER BY TotalUnits DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "List all orders placed by CustomerID 'C123' in 2023.",
        "output": "SELECT * FROM orders WHERE CustomerID = 'C123' AND OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What are the names of all products that are currently stocked in inventory?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock > 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee had the highest sales in the last year?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest total discount applied?",
        "output": "SELECT products.ProductName, SUM([Order Details].Discount * [Order Details].Quantity * [Order Details].UnitPrice) AS TotalDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY TotalDiscount DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average unit price of all products in the inventory?",
        "output": "SELECT AVG(UnitPrice) AS AveragePrice FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total number of orders placed in November 2023?",
        "output": "SELECT COUNT(o.OrderID) AS TotalOrders FROM orders o WHERE o.OrderDate BETWEEN '2023-11-01' AND '2023-11-30';",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which regions have the most suppliers?",
        "output": "SELECT Region, COUNT(DISTINCT SupplierID) AS SupplierCount FROM suppliers GROUP BY Region ORDER BY SupplierCount DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average quantity per unit for products supplied by a specific supplier?",
        "output": "SELECT SupplierID, AVG(LEFT(QuantityPerUnit, CHARINDEX(' ', QuantityPerUnit + ' ') - 1)) as AverageQuantityPerUnit FROM products GROUP BY SupplierID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have more than 100 units in stock?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock > 100",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the average reorder level for each product category.",
        "output": "SELECT CategoryID, AVG(ReorderLevel) AS AverageReorderLevel FROM products GROUP BY CategoryID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employees who have a total sales amount above the average total sales amount of all employees.",
        "output": "SELECT e.EmployeeID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID HAVING SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) > (SELECT AVG(TotalSales) FROM (SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.EmployeeID) AS AvgTotalSales);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales value for each product?",
        "output": "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total number of orders shipped in the first half of the year?",
        "output": "SELECT COUNT(*) AS 'Number of Orders Shipped' FROM orders WHERE ShippedDate BETWEEN DATEADD(YEAR, YEAR(GETDATE()), 'YYYY-01-01') AND DATEADD(YEAR, YEAR(GETDATE()), 'YYYY-06-30');",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employee with the most orders in the current year.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(*) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost for orders shipped via each shipping method?",
        "output": "SELECT ShipVia, AVG(Freight) AS 'Average Shipping Cost' FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the customers who have not placed any orders in the last year.",
        "output": "SELECT customers.CustomerID, customers.CompanyName FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderID IS NULL OR orders.OrderDate < DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide the most products?",
        "output": "SELECT SupplierID, COUNT(ProductID) FROM products GROUP BY SupplierID ORDER BY COUNT(ProductID) DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many times each product was ordered in the first half of 2023?",
        "output": "SELECT od.ProductID, SUM(od.Quantity) AS quantity_ordered FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-06-30' GROUP BY od.ProductID",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average fulfillment time for orders placed in January 2023?",
        "output": "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS avg_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the percentage of discontinued products?",
        "output": "SELECT COUNT(ProductID) * 100.0 / (SELECT COUNT(*) FROM products) AS PercentageOfDiscontinuedProducts FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total freight cost incurred for orders handled by each employee?",
        "output": "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the total sales generated in each country.",
        "output": "SELECT e.Country, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.Country",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping company has the highest on-time delivery rate?",
        "output": "SELECT ShipVia, (COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders WHERE ShipVia=o.ShipVia)) AS 'On-time Delivery Rate' FROM orders o WHERE ShippedDate <= RequiredDate GROUP BY ShipVia;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many discontinued products are in the inventory?",
        "output": "SELECT COUNT(ProductID) FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the average order value for January 2023.",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS AverageOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = 1 AND YEAR(orders.OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales generated by each product category?",
        "output": "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have the highest and lowest average order values?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AvgOrderValue DESC LIMIT 1 UNION ALL SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY AvgOrderValue ASC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average price of products in each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many different categories of products does the inventory have?",
        "output": "SELECT COUNT(DISTINCT CategoryID) AS CategoryCount FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated in the last quarter?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE()",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer had the highest lifetime value?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS CustomerLifetimeValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY CustomerLifetimeValue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the most frequent shipping method used?",
        "output": "SELECT shippers.CompanyName, COUNT(orders.OrderID) AS order_count FROM orders JOIN shippers ON orders.ShipVia = shippers.ShipperID GROUP BY shippers.CompanyName ORDER BY order_count DESC",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products have the highest inventory turnover ratio?",
        "output": "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID ORDER BY inventory_turnover_ratio DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the total number of unique customers who have placed orders.",
        "output": "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the total revenue from orders that included a discount.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalRevenueWithDiscount FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID WHERE OD.Discount > 0 GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average freight cost for orders shipped via shipping method 1?",
        "output": "SELECT AVG(Freight) AS AvgFreightCost FROM orders WHERE ShipVia = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have a birthday this month?",
        "output": "SELECT * FROM employees WHERE MONTH(BirthDate) = MONTH(CURDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost for orders shipped to 'USA'?",
        "output": "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE ShipCountry = 'USA'",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What was the total sales revenue generated in Q1 of 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What are the names and contact titles of all customers in Germany?",
        "output": "SELECT ContactName, ContactTitle FROM customers WHERE Country = 'Germany';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What was the total lifetime value of each customer as of Q2 2023?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the total sales and average sales per order for each employee.",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageSalesPerOrder FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average discount applied on orders by each employee?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].Discount) AS AvgDiscount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the total discount given across all orders in the last quarter.",
        "output": "SELECT SUM([Order Details].Discount) AS TotalDiscount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE QUARTER(orders.OrderDate) = QUARTER(CURDATE()) - 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders had a freight cost greater than $100 in November 2023?",
        "output": "SELECT COUNT(*) AS Order_Count FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-11' AND Freight > 100;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products are low in stock and need reordering?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock <= ReorderLevel",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the total freight cost managed by each employee.",
        "output": "SELECT employees.EmployeeID, SUM(orders.Freight) AS TotalFreight FROM orders INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product had the highest total sales revenue in April 2023?",
        "output": "SELECT [Order Details].ProductID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Sales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-04' GROUP BY [Order Details].ProductID ORDER BY Total_Sales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders have been shipped but not yet delivered by each employee?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(*) AS UndeliveredOrders FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.ShippedDate IS NOT NULL AND o.RequiredDate >= CURDATE() GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List all suppliers based in the 'USA'.",
        "output": "SELECT * FROM suppliers WHERE Country = 'USA';",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the orders that were shipped late (ShippedDate > RequiredDate).",
        "output": "SELECT o.OrderID, o.RequiredDate, o.ShippedDate FROM orders o WHERE o.ShippedDate > o.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales amount generated by each employee?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify the products that have never been ordered.",
        "output": "SELECT products.ProductID, products.ProductName FROM products LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IS NULL;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the most common shipping country?",
        "output": "SELECT ShipCountry, COUNT(*) AS Count FROM orders GROUP BY ShipCountry ORDER BY Count DESC LIMIT 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total discount applied to each product?",
        "output": "SELECT ProductID, SUM(Discount) AS TotalDiscount FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many distinct customers placed orders this month?",
        "output": "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders WHERE MONTH(OrderDate) = MONTH(CURDATE()) AND YEAR(OrderDate) = YEAR(CURDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products contribute to 80% of total sales?",
        "output": "SELECT p.ProductName FROM (SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalSales, RANK() OVER (ORDER BY SUM(od.Quantity * od.UnitPrice) DESC) AS SalesRank FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName) WHERE SalesRank <= 80;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average order value?",
        "output": "SELECT AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AverageOrderValue FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Determine the inventory turnover ratio for each month.",
        "output": "SELECT DATE_FORMAT(od.OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have fewer units in stock than their reorder level?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total quantity of products ordered in the last month?",
        "output": "SELECT SUM(Quantity) FROM [Order Details] WHERE OrderDate >= DATEADD(MONTH, -1, GETDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average discount applied to all order details?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales generated by each employee?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales generated by employees grouped by their title?",
        "output": "SELECT employees.Title, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.Title",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List all suppliers based in Germany.",
        "output": "SELECT CompanyName, City FROM suppliers WHERE Country = 'Germany';",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the most popular product based on the number of orders?",
        "output": "SELECT ProductName, COUNT([Order Details].OrderID) AS OrderCount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductName ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the average quantity per unit for products that are currently in stock.",
        "output": "SELECT AVG(CAST(SUBSTRING_INDEX(QuantityPerUnit, ' ', 1) AS UNSIGNED)) AS AverageQuantityPerUnit FROM products WHERE UnitsInStock > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Who is the supplier with the most number of products?",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, COUNT(products.ProductID) AS ProductCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY ProductCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which Employee has managed the highest number of orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) as OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the top 5 most expensive products supplied?",
        "output": "SELECT ProductName FROM products ORDER BY UnitPrice DESC LIMIT 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders did each employee process in the last year?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderDate > DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) GROUP BY e.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have shipped orders in less time than the required date?",
        "output": "SELECT suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.ShippedDate < orders.RequiredDate GROUP BY suppliers.CompanyName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Analyze the monthly trend of units on order.",
        "output": "SELECT DATE_FORMAT(O.OrderDate, '%Y-%m') AS Month, SUM(od.Quantity) AS UnitsOnOrder FROM orders O JOIN [Order Details] od ON O.OrderID = od.OrderID GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average time taken to ship an order by each employee?",
        "output": "SELECT e.EmployeeID, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageShipTime FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total quantity of products sold to each country?",
        "output": "SELECT ShipCountry, SUM([Order Details].Quantity) AS TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product category generated the most revenue in 2023?",
        "output": "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_revenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID WHERE od.OrderID IN (SELECT o.OrderID FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') GROUP BY c.CategoryName ORDER BY total_revenue DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales revenue generated in the month of August, 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-08-01' AND '2023-08-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "List the products along with their total sales value and units in stock.",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalSalesValue, p.UnitsInStock FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName, p.UnitsInStock;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employees generated the most sales in 2023?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY employee_sales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total revenue generated from each customer over their lifetime?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders exceeded their required date in the past year?",
        "output": "SELECT COUNT(*) AS 'Number of Late Orders' FROM orders WHERE ShippedDate > RequiredDate AND OrderDate >= DATEADD(YEAR, -1, GETDATE());",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What percentage of orders were delivered on or before the required date in April 2023?",
        "output": "SELECT COUNT(o.OrderID) * 1.0 / (SELECT COUNT(*) FROM orders WHERE OrderDate BETWEEN '2023-04-01' AND '2023-04-30') AS OnTimeDeliveryRate FROM orders o WHERE o.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' AND o.ShippedDate <= o.RequiredDate;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employee handled the most orders in May 2023?",
        "output": "SELECT orders.EmployeeID, COUNT(orders.OrderID) AS Orders_Handled FROM orders WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-05' GROUP BY orders.EmployeeID ORDER BY Orders_Handled DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the average number of orders placed per month in 2022.",
        "output": "SELECT YEAR(OrderDate) AS OrderYear, MONTH(OrderDate) AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY OrderYear, OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which customer has placed the most orders?",
        "output": "SELECT CustomerID, COUNT(*) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per shipping method?",
        "output": "SELECT ShipVia, AVG(Freight) AS 'Average Freight Cost' FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which supplier provides the most products?",
        "output": "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees who have not received any discounts on their orders.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.Discount = 0 GROUP BY e.EmployeeID, e.FirstName, e.LastName",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the performance of each product based on the total quantity sold per month?",
        "output": "SELECT products.ProductName, EXTRACT(MONTH FROM [Order Details].OrderDate) AS OrderMonth, SUM([Order Details].Quantity) AS TotalQuantitySold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName, EXTRACT(YEAR FROM [Order Details].OrderDate), OrderMonth ORDER BY OrderMonth;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Calculate the average order fulfillment time for each shipping method.",
        "output": "SELECT ShipVia, AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer has placed the highest number of orders?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales revenue for each category?",
        "output": "SELECT c.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS total_sales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryName",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which products were ordered the most?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalQuantityOrdered FROM [Order Details] GROUP BY ProductID ORDER BY TotalQuantityOrdered DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total freight cost per employee?",
        "output": "SELECT e.EmployeeID, SUM(o.Freight) AS TotalFreight FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the total discount given on all orders.",
        "output": "SELECT SUM(UnitPrice * Quantity * Discount) AS TotalDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which customer generated the highest lifetime value?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS customer_lifetime_value FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN customers c ON o.CustomerID = c.CustomerID GROUP BY c.CustomerID ORDER BY customer_lifetime_value DESC LIMIT 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the names and prices of all discontinued products?",
        "output": "SELECT ProductName, UnitPrice FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have been ordered the most in the last month?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS UnitsSoldLastMonth FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate >= DATEADD(month, -1, GETDATE()) GROUP BY p.ProductID, p.ProductName ORDER BY UnitsSoldLastMonth DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the total sales for each month in the year 2022?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE YEAR(OrderDate) = 2022 GROUP BY YEAR(OrderDate), MONTH(OrderDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which supplier has the lowest average lead time in the last year?",
        "output": "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS average_lead_time FROM orders JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR) GROUP BY suppliers.SupplierID ORDER BY average_lead_time ASC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total quantity of products on order for each supplier?",
        "output": "SELECT SupplierID, SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products GROUP BY SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier has the lowest average discount rate on their products?",
        "output": "SELECT suppliers.CompanyName, AVG([Order Details].Discount) AS AverageDiscount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName ORDER BY AverageDiscount ASC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many distinct customers placed orders in the year 2023?",
        "output": "SELECT COUNT(DISTINCT orders.CustomerID) AS distinct_customers_2023 FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average discount given per product?",
        "output": "SELECT ProductName, AVG([Order Details].Discount) AS AverageDiscount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the inventory turnover ratio for each month.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the count of orders shipped to each country by employee?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount, o.ShipCountry FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, o.ShipCountry ORDER BY OrderCount DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier delivers the fastest on average?",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AverageLeadTime FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID ORDER BY AverageLeadTime ASC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total number of orders placed per month in the last year?",
        "output": "SELECT MONTH(OrderDate) AS Month, COUNT(*) AS TotalOrders FROM orders WHERE OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() GROUP BY Month",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the monthly sales growth rate for each product.",
        "output": "SELECT p.ProductName, ((SUM(od.Quantity * od.UnitPrice) - LAG(SUM(od.Quantity * od.UnitPrice), 1) OVER (PARTITION BY p.ProductID ORDER BY DATE_FORMAT(O.OrderDate, '%Y-%m'))) / LAG(SUM(od.Quantity * od.UnitPrice), 1) OVER (PARTITION BY p.ProductID ORDER BY DATE_FORMAT(O.OrderDate, '%Y-%m'))) * 100 AS SalesGrowthRate FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID JOIN orders O ON od.OrderID = O.OrderID GROUP BY p.ProductID, DATE_FORMAT(O.OrderDate, '%Y-%m');",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the product performance metric for the last month.",
        "output": "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate BETWEEN '2023-09-01' AND '2023-09-30' GROUP BY p.ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products are currently discontinued?",
        "output": "SELECT * FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average unit price of products supplied by each supplier?",
        "output": "SELECT SupplierID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the average salary of employees who have generated sales above $100,000.",
        "output": "SELECT AVG(e.Salary) AS AvgSalary FROM employees e JOIN (SELECT EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY EmployeeID HAVING TotalSales > 100000) sales_employees ON e.EmployeeID = sales_employees.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the month with the highest total sales revenue.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID GROUP BY Month ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were placed and fulfilled within the same month?",
        "output": "SELECT COUNT(o.OrderID) AS orders_within_same_month FROM orders o WHERE MONTH(o.OrderDate) = MONTH(o.ShippedDate) AND YEAR(o.OrderDate) = YEAR(o.ShippedDate)",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What are the top 5 customers based on the total revenue generated?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY TotalRevenue DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the percentage of orders shipped to different regions?",
        "output": "SELECT ShipRegion, COUNT(*) * 100.0 / (SELECT COUNT(*) FROM orders) AS RegionOrderPercentage FROM orders GROUP BY ShipRegion;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which customers have the highest lifetime value?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS customer_lifetime_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN customers ON orders.CustomerID = customers.CustomerID GROUP BY customers.CustomerID ORDER BY customer_lifetime_value DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which categories have the highest total sales value?",
        "output": "SELECT products.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity) as TotalSalesValue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.CategoryID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products had the highest sales in April 2023?",
        "output": "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30' GROUP BY products.ProductName ORDER BY sales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total discount given to each customer?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which suppliers had the shortest lead time in 2023?",
        "output": "SELECT products.SupplierID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS supplier_lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.SupplierID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total revenue generated from orders placed in the year 2022?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2022;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Retrieve the details of the most expensive order placed in terms of freight cost.",
        "output": "SELECT TOP 1 OrderID, Freight, OrderDate FROM orders ORDER BY Freight DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the average discount given per product.",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average discount applied across all orders?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee managed the most number of customers?",
        "output": "SELECT employees.EmployeeID, COUNT(DISTINCT orders.CustomerID) AS CustomerCount FROM orders INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID ORDER BY CustomerCount DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees who joined the company in the last year.",
        "output": "SELECT * FROM employees WHERE HireDate >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders are currently overdue?",
        "output": "SELECT COUNT(OrderID) AS overdue_orders FROM orders WHERE RequiredDate < CURRENT_DATE() AND ShippedDate IS NULL",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per order in the last month?",
        "output": "SELECT AVG(Freight) AS AverageShippingCost FROM orders WHERE OrderDate >= DATEADD(month, -1, GETDATE())",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products have been sold with a discount applied?",
        "output": "SELECT COUNT(DISTINCT ProductID) AS DiscountedProductsCount FROM [Order Details] WHERE Discount > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the correlation between freight cost and delivery time?",
        "output": "SELECT CORR(Freight, DATEDIFF(ShippedDate, OrderDate)) AS 'Correlation' FROM orders WHERE Freight IS NOT NULL AND ShippedDate IS NOT NULL;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total number of units ordered for each product?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the inventory turnover ratio for each product.",
        "output": "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the top 5 customers by lifetime value.",
        "output": "SELECT CustomerID, SUM(UnitPrice * Quantity * (1 - Discount)) AS CustomerLifetimeValue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY CustomerID ORDER BY CustomerLifetimeValue DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product generated the highest total revenue in 2023?",
        "output": "SELECT p.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID JOIN products p ON p.ProductID = od.ProductID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY p.ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How does the order fulfillment time vary across shipping regions?",
        "output": "SELECT o.ShipRegion, AVG( DATEDIFF(o.ShippedDate, o.OrderDate)) AS fulfillment_time FROM orders o GROUP BY o.ShipRegion",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have processed orders for a specific product within a date range?",
        "output": "SELECT e.EmployeeID, o.OrderID FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.ProductID = 42 AND o.OrderDate BETWEEN '2021-01-01' AND '2021-12-31'",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest unit price but are not discontinued?",
        "output": "SELECT ProductID, ProductName, UnitPrice FROM products WHERE Discontinued = 0 ORDER BY UnitPrice DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average discount received per product?",
        "output": "SELECT ProductID, AVG(Discount) AS AverageDiscount FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders did not get a discount in 2023?",
        "output": "SELECT COUNT(*) AS NoDiscountOrders FROM [Order Details] WHERE Discount = 0 AND OrderID IN (SELECT OrderID FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31');",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers provide the lowest-priced products?",
        "output": "SELECT S.SupplierID, MIN(P.UnitPrice) AS LowestPriceProvided FROM suppliers S JOIN products P ON S.SupplierID = P.SupplierID GROUP BY S.SupplierID ORDER BY LowestPriceProvided ASC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products are currently out of stock?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock = 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customers have placed orders more than 5 times?",
        "output": "SELECT customers.CustomerID, COUNT(orders.OrderID) as order_count FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID HAVING COUNT(orders.OrderID) > 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the total stock value (UnitsInStock * UnitPrice) for each product category.",
        "output": "SELECT c.CategoryID, SUM(p.UnitsInStock * p.UnitPrice) AS TotalStockValue FROM products p JOIN categories c ON p.CategoryID = c.CategoryID GROUP BY c.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee has the highest customer satisfaction rating?",
        "output": "SELECT employees.FirstName, employees.LastName, (SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(orders.OrderID)) AS avg_customer_satisfaction FROM orders JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID ORDER BY avg_customer_satisfaction DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the employees who have handled over 100 orders.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, e.FirstName, e.LastName HAVING OrderCount > 100;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost per month for this year?",
        "output": "SELECT DATEPART(month, ShippedDate) AS Month, SUM(Freight) AS 'Total Freight Cost' FROM orders WHERE OrderDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY DATEPART(month, ShippedDate);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the on-time delivery rate for the last quarter?",
        "output": "SELECT (COUNT(OrderID) WHERE ShippedDate <= RequiredDate) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders WHERE OrderDate >= DATEADD(quarter, -1, GETDATE())",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total unit price for all orders of each product?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalUnitPrice FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have the highest unit price but are not discontinued?",
        "output": "SELECT ProductID, ProductName, UnitPrice FROM products WHERE UnitPrice = (SELECT MAX(UnitPrice) FROM products WHERE Discontinued = 0);",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What was the total freight cost for each month in 2022?",
        "output": "SELECT MONTH(OrderDate) AS Month, SUM(Freight) AS TotalFreight FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY MONTH(OrderDate);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many units of each product have been sold in the last month?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalUnitsSold FROM [Order Details] WHERE OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which product categories have the highest total sales?",
        "output": "SELECT categories.CategoryID, categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID ORDER BY TotalSales DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many unique products has each customer ordered?",
        "output": "SELECT customers.CustomerID, COUNT(DISTINCT ProductID) AS UniqueProducts FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total sales value for each product?",
        "output": "SELECT ProductID, ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalSales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductID, ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the top 3 suppliers based on the total number of units in stock for their products.",
        "output": "SELECT s.SupplierID, s.CompanyName, SUM(p.UnitsInStock) AS TotalUnitsInStock FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.CompanyName ORDER BY TotalUnitsInStock DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total number of units in stock for products supplied by each supplier?",
        "output": "SELECT suppliers.CompanyName, SUM(products.UnitsInStock) AS TotalStock FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales revenue for each month?",
        "output": "SELECT YEAR(orders.OrderDate) AS Year, MONTH(orders.OrderDate) AS Month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY Year, Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products are currently discontinued?",
        "output": "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the most sold product category?",
        "output": "SELECT c.CategoryID, SUM(od.Quantity) AS TotalSold FROM categories c JOIN products p ON c.CategoryID = p.CategoryID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY c.CategoryID ORDER BY TotalSold DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average lead time for each supplier?",
        "output": "SELECT s.SupplierID, s.CompanyName, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AverageLeadTime FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN orders o ON o.OrderID = p.ProductID GROUP BY s.SupplierID, s.CompanyName;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the details of the top 3 most ordered products?",
        "output": "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS TotalOrdered FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductID, products.ProductName ORDER BY TotalOrdered DESC LIMIT 3;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales for the month of January 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify customers who have placed more than 10 orders.",
        "output": "SELECT CustomerID FROM (SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID) AS customer_orders WHERE TotalOrders > 10;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "List all orders that were shipped late.",
        "output": "SELECT * FROM orders O WHERE O.ShippedDate > O.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped by each shipping method?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS 'Number of Orders' FROM orders GROUP BY ShipVia;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Determine the average unit price for all products ordered in the second quarter of 2023.",
        "output": "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE YEAR(OrderDate) = 2023 AND QUARTER(OrderDate) = 2);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee has handled the most orders?",
        "output": "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the Customer Lifetime Value (CLV) for each customer?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS CustomerLifetimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total inventory value for each product?",
        "output": "SELECT ProductID, (UnitsInStock * UnitPrice) AS InventoryValue FROM products;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the median order fulfillment time for orders shipped to Europe?",
        "output": "SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY DATEDIFF(ShippedDate, OrderDate)) AS MedianFulfillmentTime FROM orders WHERE ShipRegion = 'Europe';",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the most frequently ordered product?",
        "output": "SELECT ProductID, COUNT(OrderID) AS OrderFrequency FROM [Order Details] GROUP BY ProductID ORDER BY OrderFrequency DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products exceed their reorder level by more than 50 units?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock - ReorderLevel > 50;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the average discount applied on products.",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has generated the highest total sales?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have never had a product on backorder?",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName FROM suppliers LEFT JOIN products ON suppliers.SupplierID = products.SupplierID LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].Quantity IS NULL GROUP BY suppliers.SupplierID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "List the top 5 products by the number of units sold.",
        "output": "SELECT ProductID, ProductName, SUM([Order Details].Quantity) AS UnitsSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY ProductID, ProductName ORDER BY UnitsSold DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many products have zero units in stock as of now?",
        "output": "SELECT ProductID, ProductName FROM products p WHERE p.UnitsInStock = 0",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which product categories have the highest units in stock?",
        "output": "SELECT CategoryID, SUM(UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY CategoryID ORDER BY TotalUnitsInStock DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer has the highest average order value?",
        "output": "SELECT c.CustomerID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY AverageOrderValue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the distribution of orders by shipping method?",
        "output": "SELECT ShipVia, COUNT(*) AS MethodCount FROM orders GROUP BY ShipVia",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the monthly trend of shipping costs?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, SUM(Freight) AS TotalShippingCost FROM orders GROUP BY OrderMonth ORDER BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average salary of employees categorized by their country?",
        "output": "SELECT Country, AVG(Salary) AS AvgSalary FROM employees GROUP BY Country",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the employees who have processed the most orders.",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS TotalOrdersProcessed FROM orders GROUP BY EmployeeID ORDER BY TotalOrdersProcessed DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total freight cost for orders shipped to Mexico?",
        "output": "SELECT SUM(Freight) FROM orders WHERE ShipCountry = 'Mexico';",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "List the top 10 best-selling products by quantity.",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID ORDER BY TotalQuantity DESC LIMIT 10",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the total discount given each month.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(OD.Quantity * OD.UnitPrice * OD.Discount) AS TotalDiscount FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average shipping time for orders?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS AverageShippingTime FROM orders",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders are there per region?",
        "output": "SELECT ShipRegion, COUNT(OrderID) AS 'Number of Orders' FROM orders GROUP BY ShipRegion;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Find the products where the discount is greater than 20%.",
        "output": "SELECT ProductName FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.Discount > 0.20",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the number of orders that were shipped in less than 5 days from the order date in 2023?",
        "output": "SELECT COUNT(*) AS OrdersShippedInLessThan5Days FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) < 5 AND OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List the top 5 customers based on the highest number of orders placed.",
        "output": "SELECT customers.CustomerID, COUNT(orders.OrderID) AS OrderCount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID GROUP BY customers.CustomerID ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average unit price of products in each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) as AverageUnitPrice FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average discount given on all products?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the order fulfillment time for orders shipped in the first quarter of 2023?",
        "output": "SELECT AVG(DATEDIFF(ShippedDate, OrderDate)) AS FulfillmentTime FROM orders WHERE YEAR(OrderDate) = 2023 AND QUARTER(OrderDate) = 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for Q1 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which region received the highest number of orders in 2023?",
        "output": "SELECT o.ShipRegion, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY o.ShipRegion ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the monthly sales performance for each product?",
        "output": "SELECT ProductID, DATEPART(MONTH, OrderDate) as Month, SUM(Quantity) as MonthlySalesQuantity FROM [Order Details] GROUP BY ProductID, DATEPART(MONTH, OrderDate);",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were shipped via each shipping method?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS ShipmentCount FROM orders GROUP BY ShipVia;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many orders were shipped but not delivered yet?",
        "output": "SELECT orders.OrderID FROM orders WHERE orders.ShippedDate IS NOT NULL AND orders.RequiredDate IS NULL;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the average time taken to fulfill an order each month.",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, AVG(DATEDIFF(O.ShippedDate, O.OrderDate)) AS AvgFulfillmentTime FROM orders O GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which regions have the highest average order value in 2023?",
        "output": "SELECT regions.RegionDescription, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID JOIN regions ON territories.RegionID = regions.RegionID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY regions.RegionDescription",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the top 5 most expensive products?",
        "output": "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total quantity of products sold in September 2023?",
        "output": "SELECT SUM([Order Details].Quantity) AS Total_Quantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-09';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employee has generated the most sales revenue?",
        "output": "SELECT e.EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS employee_sales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN employees e ON o.EmployeeID = e.EmployeeID GROUP BY e.EmployeeID ORDER BY employee_sales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have reached their reorder level?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock <= ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers are located in the city of Berlin?",
        "output": "SELECT * FROM suppliers WHERE City = 'Berlin';",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products are low in stock (less than 10 units remaining)?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < 10;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product category has the highest sales revenue?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS category_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID GROUP BY categories.CategoryID ORDER BY category_sales DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the products that have never been ordered.",
        "output": "SELECT p.ProductID, p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.ProductID IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average order value handled by each employee?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the Customer Lifetime Value for each customer?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as CustomerLifetimeValue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee has handled the most orders within the last quarter?",
        "output": "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders WHERE OrderDate >= DATEADD(quarter, -1, GETDATE()) GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many products are in each category?",
        "output": "SELECT CategoryID, COUNT(*) AS ProductCount FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the shortest time between order and shipment in 2023?",
        "output": "SELECT MIN(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS shortest_shipment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Find the average freight cost by shipping company.",
        "output": "SELECT ShipVia, AVG(Freight) AS AverageFreightCost FROM orders GROUP BY ShipVia",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the inventory turnover ratio for the last month?",
        "output": "SELECT SUM(od.Quantity * od.UnitPrice) / AVG(p.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID WHERE od.OrderDate BETWEEN '2023-09-01' AND '2023-09-30';",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping company had the highest on-time delivery rate last quarter?",
        "output": "SELECT ShipVia, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*)) * 100 AS 'On-time Delivery Rate' FROM orders WHERE OrderDate >= DATEADD(QUARTER, -1, GETDATE()) GROUP BY ShipVia ORDER BY 'On-time Delivery Rate' DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated from the sales of all products?",
        "output": "SELECT SUM(Quantity * UnitPrice) FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which customer placed the highest number of orders last year?",
        "output": "SELECT CustomerID, COUNT(*) AS 'Number of Orders Placed' FROM orders WHERE OrderDate >= DATEADD(YEAR, -1, GETDATE()) GROUP BY CustomerID ORDER BY COUNT(*) DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify products that need to be reordered (units in stock less than reorder level).",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the products that have a reorder level below 20 units.",
        "output": "SELECT ProductName FROM products WHERE ReorderLevel < 20;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many products does each supplier offer?",
        "output": "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS ProductCount FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employee has processed the highest number of orders?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales generated from each product category in 2023?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS category_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY categories.CategoryName",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total value of orders for each product?",
        "output": "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalValue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the total revenue generated in each city.",
        "output": "SELECT customers.City, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) as TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.City;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which regions have the highest average order value?",
        "output": "SELECT orders.ShipRegion, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgOrderValue FROM [Order Details] INNER JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY orders.ShipRegion ORDER BY AvgOrderValue DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees are managing other employees and how many?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(e2.EmployeeID) AS Managees FROM employees e LEFT JOIN employees e2 ON e.EmployeeID = e2.ReportsTo GROUP BY e.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total number of products supplied by each supplier?",
        "output": "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS TotalProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.CompanyName;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the inventory turnover ratio for each product?",
        "output": "SELECT products.ProductID, (SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock)) as InventoryTurnoverRatio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time per month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which months had the highest and lowest order fulfillment times?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY OrderMonth ORDER BY AvgFulfillmentTime DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees who have been with the company for more than 5 years.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e WHERE DATEDIFF(CURDATE(), e.HireDate) > 365 * 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Determine the product performance for each month.",
        "output": "SELECT DATE_FORMAT(od.OrderDate, '%Y-%m') AS Month, p.ProductID, p.ProductName, SUM(od.Quantity) AS ProductPerformance FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY Month, p.ProductID, p.ProductName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped after the required date this quarter?",
        "output": "SELECT COUNT(*) AS 'Number of Late Orders' FROM orders WHERE ShippedDate > RequiredDate AND OrderDate >= DATEADD(QUARTER, -1, GETDATE());",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the total discount given on all products per month.",
        "output": "SELECT DATE_FORMAT(O.OrderDate, '%Y-%m') AS Month, SUM(od.Discount * od.Quantity * od.UnitPrice) AS TotalDiscount FROM orders O JOIN [Order Details] od ON O.OrderID = od.OrderID GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the top 5 employees by total sales amount in Q4 2022.",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] INNER JOIN orders ON [Order Details].OrderID = orders.OrderID INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2022-10-01' AND '2022-12-31' GROUP BY employees.EmployeeID ORDER BY TotalSales DESC LIMIT 5",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers provide products that are discontinued?",
        "output": "SELECT suppliers.SupplierID, products.ProductName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE products.Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the distribution of orders by shipping region in 2023?",
        "output": "SELECT ShipRegion, COUNT(*) AS NumberOfOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ShipRegion;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average discount applied to orders in December 2022?",
        "output": "SELECT AVG([Order Details].Discount) AS avg_discount FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2022-12-01' AND '2022-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were placed by each customer in the last year?",
        "output": "SELECT CustomerID, COUNT(*) AS OrderCount FROM orders WHERE OrderDate >= DATEADD(year, -1, GETDATE()) GROUP BY CustomerID",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average discount applied on products?",
        "output": "SELECT AVG(Discount) as AverageDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units of each product have been ordered?",
        "output": "SELECT ProductID, SUM(Quantity) AS TotalOrdered FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the supplier details for products that need to be reordered?",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, products.ProductID, products.ProductName, products.ReorderLevel, products.UnitsInStock FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.UnitsInStock < products.ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the longest order fulfillment time recorded?",
        "output": "SELECT MAX(DATEDIFF(ShippedDate, OrderDate)) AS LongestFulfillmentTime FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify the cities with the largest number of suppliers.",
        "output": "SELECT City, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY City ORDER BY SupplierCount DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have not been ordered yet?",
        "output": "SELECT p.ProductID, p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderID IS NULL",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total revenue generated by each product category?",
        "output": "SELECT products.CategoryID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products had the highest discounted sales in 2023?",
        "output": "SELECT products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * [Order Details].Discount) AS discounted_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY products.ProductName ORDER BY discounted_sales DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units of each product are on order?",
        "output": "SELECT ProductID, ProductName, UnitsOnOrder FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for each month in the year 2023?",
        "output": "SELECT MONTH(o.OrderDate) AS month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS avg_order_value FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY MONTH(o.OrderDate)",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many units of each product are currently on order?",
        "output": "SELECT products.ProductName, UnitsOnOrder FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were placed by customers from Europe in 2023?",
        "output": "SELECT COUNT(orders.OrderID) AS european_orders FROM orders JOIN customers ON orders.CustomerID = customers.CustomerID WHERE customers.Country = 'Europe' AND orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Who are the top 10 customers by revenue?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Revenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY Revenue DESC LIMIT 10",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the performance of each product based on sales?",
        "output": "SELECT products.ProductID, products.ProductName, SUM([Order Details].Quantity) AS ProductPerformance FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "List the top 5 products in terms of total revenue generated.",
        "output": "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalRevenue DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders had a shipping time of more than 7 days?",
        "output": "SELECT COUNT(OrderID) AS LongShippingOrders FROM orders WHERE DATEDIFF(ShippedDate, OrderDate) > 7;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the inventory turnover ratio for the month of July, 2023?",
        "output": "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the products that have the highest sales volume.",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductName ORDER BY TotalSold DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employees had the highest average order values in 2023?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID ORDER BY avg_order_value DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order fulfillment time for the month of April, 2023?",
        "output": "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS order_fulfillment_time FROM orders WHERE orders.OrderDate BETWEEN '2023-04-01' AND '2023-04-30'",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many unique products were sold in March 2023?",
        "output": "SELECT COUNT(DISTINCT [Order Details].ProductID) AS Unique_Products FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-03';",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which product had the highest average discount in August 2023?",
        "output": "SELECT [Order Details].ProductID, AVG([Order Details].Discount) AS Average_Discount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-08' GROUP BY [Order Details].ProductID ORDER BY Average_Discount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the total number of products sold by each employee.",
        "output": "SELECT e.EmployeeID, SUM(od.Quantity) AS TotalProductsSold FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the retention rate of customers over the last three years?",
        "output": "SELECT (COUNT(DISTINCT o.CustomerID) WHERE o.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE()) / (COUNT(DISTINCT o.CustomerID) WHERE o.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 YEAR) AND DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AS retention_rate FROM orders o",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the distribution of shipping costs among different countries?",
        "output": "SELECT ShipCountry, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCountry ORDER BY TotalFreight;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total sales value for each product?",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity) as TotalSalesValue FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have never been ordered?",
        "output": "SELECT ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the customer retention rate between Q1 2022 and Q1 2023?",
        "output": "(SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-03-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2022-01-01') AS customer_retention_rate",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total freight cost for orders shipped in January 2023?",
        "output": "SELECT SUM(Freight) AS total_freight FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-01-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Find the number of orders shipped every month in 2023.",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value for each customer region?",
        "output": "SELECT c.Region, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS avg_order_value FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN customers c ON o.CustomerID = c.CustomerID GROUP BY c.Region",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the customer retention rate from 2022 to 2023?",
        "output": "SELECT (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT orders.CustomerID) FROM orders WHERE orders.OrderDate < '2023-01-01') AS customer_retention_rate",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average discount applied to orders in 2023?",
        "output": "SELECT AVG(od.Discount) AS avg_discount FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total quantity of products ordered by 'OrderID' 10248?",
        "output": "SELECT SUM(Quantity) AS TotalQuantity FROM [Order Details] WHERE OrderID = 10248;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales generated from each sales territory in 2022?",
        "output": "SELECT territories.TerritoryDescription, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM orders JOIN employees ON orders.EmployeeID = employees.EmployeeID JOIN employeeTerritories ON employees.EmployeeID = employeeTerritories.EmployeeID JOIN territories ON employeeTerritories.TerritoryID = territories.TerritoryID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY territories.TerritoryID ORDER BY total_sales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average unit price of all products supplied by 'SupplierID' 1?",
        "output": "SELECT AVG(UnitPrice) AS AverageUnitPrice FROM products WHERE SupplierID = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were placed by each customer in 2022?",
        "output": "SELECT customers.CustomerID, COUNT(orders.OrderID) AS order_count FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' GROUP BY customers.CustomerID",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products need to be reordered (i.e., units on hand are below reorder level)?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which region has the highest average order value?",
        "output": "SELECT O.ShipRegion, AVG(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS AvgOrderValue FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID GROUP BY O.ShipRegion ORDER BY AvgOrderValue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total revenue generated by each product in 2022?",
        "output": "SELECT products.ProductID, products.ProductName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_revenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY products.ProductID ORDER BY total_revenue DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the total freight cost for all orders shipped to a given country.",
        "output": "SELECT ShipCountry, SUM(Freight) as TotalFreight FROM orders WHERE ShipCountry = 'specified_country' GROUP BY ShipCountry;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employee's birthdate and calculate their age.",
        "output": "SELECT e.EmployeeID, e.BirthDate, YEAR(CURDATE()) - YEAR(e.BirthDate) - IF(STR_TO_DATE(CONCAT(YEAR(CURDATE()), '-', MONTH(e.BirthDate), '-', DAY(e.BirthDate)), '%Y-%m-%d') > CURDATE(), 1, 0) AS Age FROM employees e;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List all customers residing in 'London'.",
        "output": "SELECT * FROM customers WHERE City = 'London';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "How many orders were delivered on or before the required date in Q2 2023?",
        "output": "SELECT COUNT(orders.OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders WHERE OrderDate BETWEEN '2023-04-01' AND '2023-06-30') AS on_time_delivery_rate FROM orders WHERE ShippedDate <= RequiredDate AND OrderDate BETWEEN '2023-04-01' AND '2023-06-30'",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the order with the longest fulfillment time.",
        "output": "SELECT OrderID, DATEDIFF(ShippedDate, OrderDate) AS FulfillmentTime FROM orders ORDER BY FulfillmentTime DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have stock levels below their reorder level?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees along with the number of orders each has processed and the total sales generated by them.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount, SUM(d.UnitPrice * d.Quantity * (1 - d.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] d ON o.OrderID = d.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What percentage of orders were fulfilled on time in July 2023?",
        "output": "SELECT COUNT(*) * 100.0 / (SELECT COUNT(*) FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-07') AS On_Time_Delivery_Rate FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-07' AND ShippedDate <= RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees and their respective managers.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, m.EmployeeID AS ManagerID, m.FirstName AS ManagerFirstName, m.LastName AS ManagerLastName FROM employees e LEFT JOIN employees m ON e.ReportsTo = m.EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee processed the most orders last month?",
        "output": "SELECT EmployeeID, COUNT(*) AS 'Number of Orders Processed' FROM orders WHERE OrderDate >= DATEADD(MONTH, -1, GETDATE()) GROUP BY EmployeeID ORDER BY COUNT(*) DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which suppliers provide products that are below the reorder level?",
        "output": "SELECT DISTINCT suppliers.SupplierID, suppliers.SupplierName FROM products JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which product category has the highest number of units in stock?",
        "output": "SELECT c.CategoryID, SUM(p.UnitsInStock) AS TotalUnitsInStock FROM categories c JOIN products p ON c.CategoryID = p.CategoryID GROUP BY c.CategoryID ORDER BY TotalUnitsInStock DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Determine the average fulfillment time for orders that were shipped late.",
        "output": "SELECT AVG(DATEDIFF(O.ShippedDate, O.OrderDate)) AS AvgFulfillmentTime FROM orders O WHERE O.ShippedDate > O.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average order value in Q1 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the percentage of orders that cost more than $50 in freight?",
        "output": "SELECT (COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders)) AS 'Percentage of Orders' FROM orders WHERE Freight > 50;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product category had the highest inventory turnover ratio in 2022?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY categories.CategoryName ORDER BY inventory_turnover_ratio DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which orders have the highest and lowest shipping costs?",
        "output": "SELECT MAX(Freight) AS HighestShippingCost, MIN(Freight) AS LowestShippingCost FROM orders",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products are the most frequently ordered?",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS total_quantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName ORDER BY total_quantity DESC",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers delivered products after the required date?",
        "output": "SELECT suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN orders ON products.ProductID = orders.ProductID WHERE orders.ShippedDate > orders.RequiredDate;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average time taken to fulfill an order placed in 2023?",
        "output": "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS avg_fulfillment_time FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have processed more than 50 orders in a month?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID HAVING OrderCount > 50",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product had the highest sales quantity in March 2023?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity) AS total_quantity_sold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-03-01' AND '2023-03-31' GROUP BY products.ProductID ORDER BY total_quantity_sold DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products have stock levels below their reorder level?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the top 3 products by total revenue.",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalRevenue FROM [Order Details] GROUP BY ProductID ORDER BY TotalRevenue DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue generated in January 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Sales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-01';",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average time taken to fulfill an order over the past year?",
        "output": "SELECT AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AverageFulfillmentTime FROM orders WHERE OrderDate >= DATEADD(year, -1, GETDATE())",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped after the required date this year?",
        "output": "SELECT COUNT(OrderID) AS 'Late Orders' FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) AND ShippedDate > RequiredDate;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total sales count for each product?",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSales FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which region places the highest number of orders?",
        "output": "SELECT ShipRegion, COUNT(*) AS OrderCount FROM orders GROUP BY ShipRegion ORDER BY OrderCount DESC",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have not discontinued any of their products?",
        "output": "SELECT suppliers.CompanyName FROM suppliers WHERE SupplierID NOT IN (SELECT SupplierID FROM products WHERE Discontinued = 1);",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many customers placed orders in the current year?",
        "output": "SELECT COUNT(DISTINCT CustomerID) AS CustomersThisYear FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated from each customer?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order in the first quarter of 2023?",
        "output": "SELECT AVG(o.Freight) AS avg_shipping_cost FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have provided discontinued products?",
        "output": "SELECT DISTINCT suppliers.SupplierID, suppliers.CompanyName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the average order value per customer.",
        "output": "SELECT CustomerID, AVG(OrderValue) AS AverageOrderValue FROM (SELECT CustomerID, SUM(UnitPrice * Quantity * (1 - Discount)) AS OrderValue FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY CustomerID, [Order Details].OrderID) AS customer_order_values GROUP BY CustomerID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were required but not shipped on time?",
        "output": "SELECT COUNT(*) AS RequiredNotShippedOnTime FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales amount generated by each employee by month?",
        "output": "SELECT e.EmployeeID, DATE_FORMAT(o.OrderDate, '%Y-%m') AS OrderMonth, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS MonthlySales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID, OrderMonth;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units of each product are currently on order?",
        "output": "SELECT ProductName, UnitsOnOrder FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average freight cost for each order in 2023?",
        "output": "SELECT AVG(o.Freight) AS AvgFreightCost FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify suppliers who have provided products that have never been ordered.",
        "output": "SELECT suppliers.CompanyName FROM suppliers LEFT JOIN products ON suppliers.SupplierID = products.SupplierID LEFT JOIN [Order Details] ON products.ProductID = [Order Details].ProductID WHERE [Order Details].OrderID IS NULL;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employee processed the highest number of orders?",
        "output": "SELECT O.EmployeeID, COUNT(O.OrderID) AS OrderCount FROM orders O GROUP BY O.EmployeeID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping method is most cost-effective?",
        "output": "SELECT ShipVia, AVG(Freight) AS 'Average Cost' FROM orders GROUP BY ShipVia ORDER BY AVG(Freight) LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the cities with the highest concentration of employees.",
        "output": "SELECT City, COUNT(*) AS EmployeeCount FROM employees GROUP BY City ORDER BY EmployeeCount DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total number of products available from each supplier?",
        "output": "SELECT SupplierID, COUNT(ProductID) AS TotalProducts FROM products GROUP BY SupplierID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total number of unique products supplied by each supplier?",
        "output": "SELECT suppliers.SupplierID, COUNT(DISTINCT products.ProductID) AS UniqueProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify the supplier with the highest average product price.",
        "output": "SELECT s.SupplierID, s.CompanyName, AVG(p.UnitPrice) AS AveragePrice FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.CompanyName ORDER BY AveragePrice DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many unique customers placed orders each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM orders GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales for each employee in 2022?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM [Order Details] INNER JOIN orders ON [Order Details].OrderID = orders.OrderID INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping time for orders shipped to the United States?",
        "output": "SELECT AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS 'Average Shipping Time' FROM orders WHERE ShipCountry = 'United States';",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales revenue for each supplier?",
        "output": "SELECT s.CompanyName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalRevenue FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY s.CompanyName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average number of days between the order date and the required date for all orders?",
        "output": "SELECT AVG(DATEDIFF(day, OrderDate, RequiredDate)) AS 'Average Days Between Order and Required Date' FROM orders;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What percentage of the total sales is attributed to each product?",
        "output": "SELECT OD.ProductID, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) / (SELECT SUM(OD2.UnitPrice * OD2.Quantity * (1 - OD2.Discount)) FROM [Order Details] OD2) AS PercentageOfTotal FROM [Order Details] OD GROUP BY OD.ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Identify the top 5 employees by total sales revenue.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(d.UnitPrice * d.Quantity * (1 - d.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] d ON o.OrderID = d.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average order fulfillment time per shipping company?",
        "output": "SELECT ShipVia, AVG(DATEDIFF(ShippedDate, OrderDate)) AS 'Average Fulfillment Time' FROM orders GROUP BY ShipVia;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer generated the most revenue?",
        "output": "SELECT customers.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average order quantity for each employee?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(d.Quantity) AS AverageQuantity FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] d ON o.OrderID = d.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the name of suppliers who have supplied more than 100 units of any product in stock.",
        "output": "SELECT suppliers.CompanyName, products.ProductName FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.UnitsInStock > 100;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per order for the current year?",
        "output": "SELECT AVG(Freight) AS 'Average Shipping Cost' FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the monthly sales for each product.",
        "output": "SELECT p.ProductID, DATE_TRUNC('month', o.OrderDate) AS Month, SUM(od.Quantity) AS MonthlySales FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID JOIN orders o ON od.OrderID = o.OrderID GROUP BY p.ProductID, DATE_TRUNC('month', o.OrderDate)",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total revenue generated by each product?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the customer lifetime value for each customer?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS customer_lifetime_value FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN customers c ON o.CustomerID = c.CustomerID GROUP BY c.CustomerID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the total sales generated by each employee?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(d.UnitPrice * d.Quantity * (1 - d.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] d ON o.OrderID = d.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest unit price?",
        "output": "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total sales generated by employees in each region?",
        "output": "SELECT employees.Region, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.Region",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales by each supplier for the year 2022?",
        "output": "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM orders JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY suppliers.SupplierID ORDER BY total_sales DESC",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Determine the order with the highest freight cost in April 2023.",
        "output": "SELECT OrderID, Freight FROM orders WHERE MONTH(OrderDate) = 4 AND YEAR(OrderDate) = 2023 ORDER BY Freight DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total freight cost spent per shipment method?",
        "output": "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What percentage of orders were delivered on time in 2023?",
        "output": "SELECT COUNT(*) * 100.0 / SUM(CASE WHEN orders.ShippedDate <= orders.RequiredDate THEN 1 ELSE 0 END) AS on_time_delivery_rate FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the names of all products that are discontinued?",
        "output": "SELECT ProductName FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per order each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, AVG(Freight) AS AvgShippingCost FROM orders GROUP BY OrderMonth;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total quantity of units on order across all products?",
        "output": "SELECT SUM(UnitsOnOrder) AS TotalUnitsOnOrder FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest number of orders with a discount applied?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS DiscountedOrdersCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE [Order Details].Discount > 0 GROUP BY employees.EmployeeID ORDER BY DiscountedOrdersCount DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify products that have no units on order but are not discontinued.",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsOnOrder = 0 AND Discontinued = 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have a reorder level below their current stock?",
        "output": "SELECT ProductName FROM products WHERE ReorderLevel < UnitsInStock;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped late in the last six months?",
        "output": "SELECT COUNT(*) AS LateShipments FROM orders WHERE ShippedDate > RequiredDate AND OrderDate >= DATEADD(month, -6, GETDATE())",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order value for each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) / COUNT(DISTINCT O.OrderID) AS AvgOrderValue FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What was the total freight cost for orders shipped in 2023?",
        "output": "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total number of orders placed for each supplier?",
        "output": "SELECT products.SupplierID, COUNT([Order Details].OrderID) AS TotalOrders FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total discount given by each employee?",
        "output": "SELECT e.EmployeeID, SUM(od.Quantity * od.UnitPrice * od.Discount) AS TotalDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the sum of discounts given by each employee?",
        "output": "SELECT e.EmployeeID, SUM(od.Discount) AS TotalDiscount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales for each product in 2022?",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity * (1 - Discount)) AS TotalSales FROM [Order Details] WHERE OrderID IN (SELECT OrderID FROM orders WHERE YEAR(OrderDate) = 2022) GROUP BY ProductID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have the highest number of discontinued products?",
        "output": "SELECT suppliers.CompanyName, COUNT(products.ProductID) AS DiscontinuedProducts FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID WHERE products.Discontinued = 1 GROUP BY suppliers.CompanyName ORDER BY DiscontinuedProducts DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost for each country?",
        "output": "SELECT ShipCountry, SUM(Freight) AS 'Total Freight Cost' FROM orders GROUP BY ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders did each employee handle?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY EmployeeID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which city had the highest number of orders in October 2023?",
        "output": "SELECT orders.ShipCity, COUNT(orders.OrderID) AS Order_Count FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-10' GROUP BY orders.ShipCity ORDER BY Order_Count DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order for each shipping method?",
        "output": "SELECT s.CompanyName, AVG(o.Freight) AS avg_shipping_cost FROM orders o JOIN shippers s ON o.ShipVia = s.ShipperID GROUP BY s.CompanyName",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the total sales for each month in 2023.",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Month;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier has the most different types of products?",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, COUNT(DISTINCT products.CategoryID) AS ProductCategories FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID ORDER BY ProductCategories DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total number of units in stock for each product?",
        "output": "SELECT ProductID, SUM(UnitsInStock) AS TotalUnitsInStock FROM products GROUP BY ProductID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed by each customer?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find the order with the highest revenue.",
        "output": "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS OrderRevenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY o.OrderID ORDER BY OrderRevenue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total discount given on all orders for the year 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * od.Discount) AS TotalDiscount FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31';",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What was the total sales revenue for the year 2022?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.OrderDate) = 2022",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Calculate the average discount given on all products.",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which product has the highest number of units in stock?",
        "output": "SELECT ProductName FROM products ORDER BY UnitsInStock DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers have the highest total sales value?",
        "output": "SELECT suppliers.SupplierID, SUM([Order Details].UnitPrice * [Order Details].Quantity) as TotalSalesValue FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total discount given across all orders?",
        "output": "SELECT SUM([Order Details].Discount * [Order Details].Quantity * [Order Details].UnitPrice) as TotalDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which product has the highest units in stock?",
        "output": "SELECT ProductID, ProductName FROM products ORDER BY UnitsInStock DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "List the employees who were hired in the last 6 months.",
        "output": "SELECT EmployeeID, FirstName, LastName FROM employees WHERE HireDate > DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH)",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have a stock level below their reorder level?",
        "output": "SELECT ProductID, ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total quantity of products ordered for each order?",
        "output": "SELECT OrderID, SUM(Quantity) AS TotalQuantity FROM [Order Details] GROUP BY OrderID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the order that generated the highest revenue in October 2023.",
        "output": "SELECT o.OrderID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS Revenue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-10-01' AND '2023-10-31' GROUP BY o.OrderID ORDER BY Revenue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total number of orders placed by each customer?",
        "output": "SELECT O.CustomerID, COUNT(O.OrderID) AS OrderCount FROM orders O GROUP BY O.CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the number of orders placed by each customer in 2023?",
        "output": "SELECT o.CustomerID, COUNT(o.OrderID) AS order_count FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY o.CustomerID",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average reorder level across all products?",
        "output": "SELECT AVG(ReorderLevel) AS AverageReorderLevel FROM products",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the average order value for each employee.",
        "output": "SELECT e.EmployeeID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have at least one product that is discontinued?",
        "output": "SELECT DISTINCT s.CompanyName FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have been discontinued?",
        "output": "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many unique customers placed orders last year?",
        "output": "SELECT COUNT(DISTINCT CustomerID) AS 'Number of Unique Customers' FROM orders WHERE OrderDate >= DATEADD(YEAR, -1, GETDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the on-time delivery rate for the past month?",
        "output": "SELECT (COUNT(OrderID) * 100.0 / (SELECT COUNT(OrderID) FROM orders WHERE MONTH(OrderDate) = MONTH(CURDATE())-1)) AS 'On-time Delivery Rate (%)' FROM orders WHERE MONTH(OrderDate) = MONTH(CURDATE()) - 1 AND ShippedDate <= RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the total quantity of products ordered by each customer.",
        "output": "SELECT CustomerID, SUM(Quantity) AS TotalQuantity FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID GROUP BY CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have birthdays in the current month?",
        "output": "SELECT EmployeeID, FirstName, LastName FROM employees WHERE MONTH(BirthDate) = MONTH(CURRENT_DATE)",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average order value for each customer?",
        "output": "SELECT c.CustomerID, AVG(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS AverageOrderValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average quantity of products ordered per order?",
        "output": "SELECT AVG(od.Quantity) AS AverageQuantity FROM [Order Details] od",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total discount given on all orders?",
        "output": "SELECT SUM(Quantity * Discount * UnitPrice) FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the on-time delivery rate for February 2023.",
        "output": "SELECT COUNT(orders.OrderID) * 1.0 / (SELECT COUNT(OrderID) FROM orders WHERE MONTH(OrderDate) = 2 AND YEAR(OrderDate) = 2023) * 100 AS OnTimeDeliveryRate FROM orders WHERE ShippedDate <= RequiredDate AND MONTH(OrderDate) = 2 AND YEAR(OrderDate) = 2023;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which orders were delivered on or before the required date in February 2023?",
        "output": "SELECT orders.OrderID FROM orders WHERE orders.ShippedDate <= orders.RequiredDate AND orders.OrderDate BETWEEN '2023-02-01' AND '2023-02-28'",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost for each shipping method?",
        "output": "SELECT ShipVia, SUM(Freight) AS TotalFreightCost FROM orders GROUP BY ShipVia",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have shipped orders to more than 5 countries?",
        "output": "SELECT employees.EmployeeID, COUNT(DISTINCT orders.ShipCountry) AS CountriesShippedTo FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID HAVING CountriesShippedTo > 5",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "How many products have units on order but are not currently in stock?",
        "output": "SELECT COUNT(ProductID) AS TotalProducts FROM products WHERE UnitsOnOrder > 0 AND UnitsInStock = 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average discount given per order in February 2023?",
        "output": "SELECT AVG([Order Details].Discount) AS Average_Discount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-02';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What are the top 5 categories by total sales in Q4 2022?",
        "output": "SELECT categories.CategoryName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN categories ON products.CategoryID = categories.CategoryID WHERE orders.OrderDate BETWEEN '2022-10-01' AND '2022-12-31' GROUP BY categories.CategoryName ORDER BY total_sales DESC LIMIT 5",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which suppliers are providing the most products?",
        "output": "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total number of units sold for each product?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity) AS TotalUnitsSold FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which city has the highest number of orders?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS NumberOfOrders FROM orders GROUP BY ShipCity ORDER BY NumberOfOrders DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the percentage of orders delivered after the required date in December 2023?",
        "output": "SELECT COUNT(o.OrderID) / (SELECT COUNT(OrderID) FROM orders WHERE OrderDate BETWEEN '2023-12-01' AND '2023-12-31') * 100 AS LateDeliveryRate FROM orders o WHERE o.OrderDate BETWEEN '2023-12-01' AND '2023-12-31' AND o.ShippedDate > o.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer has the highest lifetime value?",
        "output": "SELECT c.CustomerID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS LifetimeValue FROM customers c JOIN orders o ON c.CustomerID = o.CustomerID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY c.CustomerID ORDER BY LifetimeValue DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which suppliers have provided the most products that are out of stock?",
        "output": "SELECT p.SupplierID, COUNT(p.ProductID) AS out_of_stock_products FROM products p WHERE p.UnitsInStock = 0 GROUP BY p.SupplierID",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the total number of orders placed in January 2022.",
        "output": "SELECT COUNT(*) FROM orders WHERE OrderDate BETWEEN '2022-01-01' AND '2022-01-31';",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the difference in average fulfillment time between orders shipped via different methods?",
        "output": "SELECT ShipVia, AVG(DATEDIFF(day, OrderDate, ShippedDate)) AS AverageFulfillmentTime FROM orders GROUP BY ShipVia",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "List the top 5 products with the highest sales quantity.",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.Quantity) AS TotalQuantity FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID, p.ProductName ORDER BY TotalQuantity DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average sales per order for each employee?",
        "output": "SELECT employees.EmployeeID, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS AvgSalesPerOrder FROM [Order Details] INNER JOIN orders ON [Order Details].OrderID = orders.OrderID INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "List employees who are also managers.",
        "output": "SELECT DISTINCT e1.EmployeeID, e1.FirstName, e1.LastName FROM employees e1 INNER JOIN employees e2 ON e1.EmployeeID = e2.ReportsTo",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which product has generated the most revenue?",
        "output": "SELECT ProductID, SUM(UnitPrice * Quantity) AS TotalRevenue FROM [Order Details] GROUP BY ProductID ORDER BY TotalRevenue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest inventory levels?",
        "output": "SELECT ProductID, ProductName, UnitsInStock FROM products ORDER BY UnitsInStock DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the CompanyName and ContactName of all suppliers?",
        "output": "SELECT CompanyName, ContactName FROM suppliers;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Determine the total number of orders that include a discount.",
        "output": "SELECT COUNT(DISTINCT OrderID) FROM [Order Details] WHERE Discount > 0;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many customers are there in each region?",
        "output": "SELECT Region, COUNT(CustomerID) AS CustomerCount FROM customers GROUP BY Region;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Calculate the number of orders shipped by each employee in the last month.",
        "output": "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders WHERE OrderDate >= DATEADD(month, -1, GETDATE()) GROUP BY EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which categories have the highest number of products?",
        "output": "SELECT CategoryID, COUNT(*) AS NumberOfProducts FROM products GROUP BY CategoryID ORDER BY NumberOfProducts DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Calculate the total number of orders processed by each employee.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(*) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees work in the 'Sales' region?",
        "output": "SELECT EmployeeID, LastName, FirstName FROM employees WHERE Region = 'Sales'",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which region had the highest average order value in May 2023?",
        "output": "SELECT orders.ShipRegion, AVG([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Average_Order_Value FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-05' GROUP BY orders.ShipRegion ORDER BY Average_Order_Value DESC LIMIT 1;",
        "difficulty": "hard"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total value of units currently in stock for each product?",
        "output": "SELECT ProductName, UnitsInStock * UnitPrice AS TotalValue FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the pending orders along with the required date and the delayed days.",
        "output": "SELECT orders.OrderID, orders.RequiredDate, DATEDIFF(CURDATE(), orders.RequiredDate) AS DaysDelayed FROM orders WHERE orders.ShippedDate IS NULL AND orders.RequiredDate < CURDATE();",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "List all products that are currently on order but not in stock.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock = 0 AND UnitsOnOrder > 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average fulfillment time for orders shipped by different shipping companies?",
        "output": "SELECT s.CompanyName, AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS avg_fulfillment_time FROM orders o JOIN shippers s ON o.ShipVia = s.ShipperID GROUP BY s.CompanyName",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average freight cost per city?",
        "output": "SELECT ShipCity, AVG(Freight) AS 'Average Freight Cost' FROM orders GROUP BY ShipCity;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which supplier has the highest total sales revenue?",
        "output": "SELECT suppliers.CompanyName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSalesRevenue FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName ORDER BY TotalSalesRevenue DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "How many products have a unit price higher than the average unit price?",
        "output": "SELECT COUNT(ProductID) FROM products WHERE UnitPrice > (SELECT AVG(UnitPrice) FROM products);",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which supplier has the shortest average lead time?",
        "output": "SELECT suppliers.CompanyName, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS lead_time FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID ORDER BY lead_time ASC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average discount applied per order?",
        "output": "SELECT AVG(Discount) AS AvgDiscount FROM [Order Details];",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the total freight cost for orders shipped in January 2023?",
        "output": "SELECT SUM(Freight) AS TotalFreightCost FROM orders WHERE MONTH(OrderDate) = 1 AND YEAR(OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which products have the highest total sales in the last month?",
        "output": "SELECT od.ProductID, SUM(od.Quantity) AS TotalSales FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID WHERE o.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE() GROUP BY od.ProductID ORDER BY TotalSales DESC LIMIT 5",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which month had the highest average order value in 2023?",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Month ORDER BY AvgOrderValue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order fulfillment time for April 2023?",
        "output": "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgFulfillmentTime FROM orders o WHERE o.OrderDate BETWEEN '2023-04-01' AND '2023-04-30';",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average unit price of products within each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AverageUnitPrice FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the total number of products sold by each employee?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].Quantity) AS TotalProductsSold FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY employees.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average lead time for orders shipped by 'ShipVia' method 1?",
        "output": "SELECT AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgLeadTime FROM orders WHERE ShipVia = 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the top 3 suppliers by the number of products they supply.",
        "output": "SELECT s.SupplierID, s.CompanyName, COUNT(p.ProductID) AS NumberOfProducts FROM suppliers s JOIN products p ON s.SupplierID = p.SupplierID GROUP BY s.SupplierID, s.CompanyName ORDER BY NumberOfProducts DESC LIMIT 3;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total revenue generated in 2022?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalRevenue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = 2022;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders are still pending shipment?",
        "output": "SELECT COUNT(OrderID) AS PendingOrders FROM orders WHERE ShippedDate IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the top 5 customers in terms of total orders' value.",
        "output": "SELECT CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalOrderValue FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY CustomerID ORDER BY TotalOrderValue DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Determine the total number of unique products ordered by each customer.",
        "output": "SELECT customers.CustomerID, COUNT(DISTINCT [Order Details].ProductID) as UniqueProductsOrdered FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY customers.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped via each shipping method?",
        "output": "SELECT ShipVia, COUNT(*) AS OrderCount FROM orders GROUP BY ShipVia;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated from discounted items?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity) AS TotalRevenue FROM [Order Details] od WHERE od.Discount > 0;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Identify the top 5 suppliers based on the number of orders shipped.",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, COUNT(orders.OrderID) AS OrderCount FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average shipping cost per order?",
        "output": "SELECT AVG(Freight) AS AverageShippingCost FROM orders;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Among orders that were shipped late, what is the average freight cost?",
        "output": "SELECT AVG(Freight) AS AvgFreightCost FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify the products with zero units in stock.",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock = 0",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average inventory turnover ratio per month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(Quantity * UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY DATE_FORMAT(OrderDate, '%Y-%m');",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have never been ordered?",
        "output": "SELECT ProductID, ProductName FROM products WHERE ProductID NOT IN (SELECT DISTINCT ProductID FROM [Order Details]);",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Identify the products with zero sales in the past month.",
        "output": "SELECT p.ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.OrderID IS NULL AND p.Discontinued = 0;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which product has the highest average order value in Q1 of 2023?",
        "output": "SELECT p.ProductID, p.ProductName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS avg_order_value FROM [Order Details] od JOIN orders o ON od.OrderID = o.OrderID JOIN products p ON od.ProductID = p.ProductID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY p.ProductID ORDER BY avg_order_value DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the most frequently ordered product?",
        "output": "SELECT ProductID, COUNT(ProductID) AS OrderCount FROM [Order Details] GROUP BY ProductID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have the highest inventory turnover ratio?",
        "output": "SELECT products.ProductName, SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS InventoryTurnoverRatio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY products.ProductName ORDER BY InventoryTurnoverRatio DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were placed in the last week?",
        "output": "SELECT COUNT(*) AS 'Number of Orders Placed' FROM orders WHERE OrderDate >= DATEADD(WEEK, -1, GETDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which product has the highest average discount?",
        "output": "SELECT ProductID, AVG(Discount) as AvgDiscount FROM [Order Details] GROUP BY ProductID ORDER BY AvgDiscount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total number of units sold across all products each month?",
        "output": "SELECT EXTRACT(MONTH FROM [Order Details].OrderDate) AS OrderMonth, SUM([Order Details].Quantity) AS TotalUnitsSold FROM [Order Details] GROUP BY EXTRACT(YEAR FROM [Order Details].OrderDate), OrderMonth ORDER BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the Customer Retention Rate for the past month.",
        "output": "SELECT (COUNT(DISTINCT orders.CustomerID) FILTER (WHERE orders.OrderDate BETWEEN 'start_date' AND 'end_date'))::FLOAT / COUNT(DISTINCT orders.CustomerID) FILTER (WHERE orders.OrderDate < 'start_date') as RetentionRate FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify products that are discontinued.",
        "output": "SELECT ProductID, ProductName FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Determine the average quantity per unit for all products.",
        "output": "SELECT AVG(QuantityPerUnit) FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer placed the largest order in terms of total value in January 2023?",
        "output": "SELECT orders.CustomerID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Order_Value FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-01' GROUP BY orders.CustomerID ORDER BY Order_Value DESC LIMIT 1;",
        "difficulty": "hard"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List all orders, along with the supplier's name, from the month of January 2023.",
        "output": "SELECT orders.OrderID, suppliers.CompanyName FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-01-31';",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have orders with an average discount above a certain threshold?",
        "output": "SELECT [Order Details].ProductID, products.ProductName, AVG(Discount) AS AverageDiscount FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID GROUP BY [Order Details].ProductID HAVING AVG(Discount) > 0.15;",
        "difficulty": "advanced"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employees contributed to the highest total sales revenue in their respective sales territory?",
        "output": "SELECT terr.TerritoryDescription, emp.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM employees emp JOIN employeeTerritories et ON emp.EmployeeID = et.EmployeeID JOIN territories terr ON et.TerritoryID = terr.TerritoryID JOIN orders ON emp.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY terr.TerritoryID, emp.EmployeeID ORDER BY terr.TerritoryDescription, employee_sales DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee handled the most orders last month?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS 'Number of Orders' FROM orders WHERE MONTH(OrderDate) = MONTH(CURDATE())-1 GROUP BY EmployeeID ORDER BY COUNT(OrderID) DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the customers that have never placed an order.",
        "output": "SELECT customers.CustomerID FROM customers LEFT JOIN orders ON customers.CustomerID = orders.CustomerID WHERE orders.CustomerID IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the average discount applied per order?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details]",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Determine the reorder level status of all products (i.e., whether the stock level is above or below the reorder level).",
        "output": "SELECT ProductID, ProductName, CASE WHEN UnitsInStock < ReorderLevel THEN 'Below Reorder Level' ELSE 'Above Reorder Level' END AS ReorderStatus FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the on-time delivery rate for each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS OrderMonth, (COUNT(CASE WHEN ShippedDate <= RequiredDate THEN 1 END) / COUNT(*)) AS OnTimeDeliveryRate FROM orders GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which employees manage the most territories?",
        "output": "SELECT e.EmployeeID, COUNT(et.TerritoryID) AS territories_managed FROM employees e JOIN employeeTerritories et ON e.EmployeeID = et.EmployeeID GROUP BY e.EmployeeID ORDER BY territories_managed DESC",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the customer retention rate for the year 2023 compared to 2022?",
        "output": "SELECT (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31') / (SELECT COUNT(DISTINCT o.CustomerID) FROM orders o WHERE o.OrderDate < '2023-01-01') AS customer_retention_rate",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the on-time delivery rate for July 2023?",
        "output": "SELECT COUNT(o.OrderID) / (SELECT COUNT(OrderID) FROM orders WHERE OrderDate BETWEEN '2023-07-01' AND '2023-07-31') * 100 AS OnTimeDeliveryRate FROM orders o WHERE o.OrderDate BETWEEN '2023-07-01' AND '2023-07-31' AND o.ShippedDate <= o.RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders were shipped late by each employee?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS LateOrders FROM orders INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.ShippedDate > orders.RequiredDate GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total sales generated by each employee in the year 2023?",
        "output": "SELECT employees.EmployeeID, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS employee_sales FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY employees.EmployeeID",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Calculate the total discount given across all orders.",
        "output": "SELECT SUM(UnitPrice * Quantity * Discount) AS TotalDiscount FROM [Order Details];",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total number of unique customers in the database?",
        "output": "SELECT COUNT(DISTINCT CustomerID) AS UniqueCustomers FROM customers;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the inventory turnover ratio for May 2023?",
        "output": "SELECT SUM([Order Details].Quantity * [Order Details].UnitPrice) / AVG(products.UnitsInStock) AS inventory_turnover_ratio FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID WHERE [Order Details].OrderID IN (SELECT orders.OrderID FROM orders WHERE orders.OrderDate BETWEEN '2023-05-01' AND '2023-05-31')",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the total revenue generated by each product.",
        "output": "SELECT p.ProductName, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which shipping method was used the most in 2023?",
        "output": "SELECT ShipVia, COUNT(*) AS UsageCount FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ShipVia ORDER BY UsageCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Find the number of orders processed by each employee in the last quarter.",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE QUARTER(o.OrderDate) = QUARTER(CURDATE()) AND YEAR(o.OrderDate) = YEAR(CURDATE()) GROUP BY e.EmployeeID, e.FirstName, e.LastName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List the total quantity ordered for each product category.",
        "output": "SELECT categories.CategoryName, SUM([Order Details].Quantity) AS TotalQuantity FROM categories JOIN products ON categories.CategoryID = products.CategoryID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY categories.CategoryName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find products that are sold with a quantity per unit less than '10 units'.",
        "output": "SELECT ProductID, ProductName FROM products WHERE QuantityPerUnit < '10 units';",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total quantity of products ordered for each supplier?",
        "output": "SELECT suppliers.CompanyName, SUM([Order Details].Quantity) AS TotalQuantityOrdered FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY suppliers.CompanyName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Retrieve orders that were shipped more than 5 days after the required date.",
        "output": "SELECT OrderID, OrderDate, RequiredDate, ShippedDate FROM orders WHERE DATEDIFF(ShippedDate, RequiredDate) > 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the most frequent shipping region for orders?",
        "output": "SELECT ShipRegion, COUNT(*) AS 'Number of Orders' FROM orders GROUP BY ShipRegion ORDER BY COUNT(*) DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest average order value?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, AVG(d.UnitPrice * d.Quantity * (1 - d.Discount)) AS AverageOrderValue FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] d ON o.OrderID = d.OrderID GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY AverageOrderValue DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which products have never been ordered?",
        "output": "SELECT ProductName FROM products p LEFT JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE od.ProductID IS NULL;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many orders have each supplier fulfilled in the year 2022?",
        "output": "SELECT suppliers.CompanyName, COUNT(orders.OrderID) AS OrdersFulfilled FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN [Order Details] ON products.ProductID = [Order Details].ProductID JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE YEAR(orders.ShippedDate) = 2022 GROUP BY suppliers.CompanyName;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which customer placed the highest number of orders in the first quarter of 2023?",
        "output": "SELECT CustomerID, COUNT(*) AS NumberOfOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY CustomerID ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many units of the product with the highest stock level are on order?",
        "output": "SELECT ProductID, ProductName, UnitsOnOrder FROM products ORDER BY UnitsInStock DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the products with the highest units on order?",
        "output": "SELECT ProductID, ProductName, UnitsOnOrder FROM products ORDER BY UnitsOnOrder DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average unit price of the products from each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the top 5 cities with the most orders handled by employees?",
        "output": "SELECT o.ShipCity, COUNT(o.OrderID) AS OrderCount FROM orders o GROUP BY o.ShipCity ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the shortest average order processing time?",
        "output": "SELECT employees.EmployeeID, AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) AS AvgProcessingTime FROM orders INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID GROUP BY employees.EmployeeID ORDER BY AvgProcessingTime ASC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue for each product category in 2023?",
        "output": "SELECT pc.CategoryName, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM [Order Details] od JOIN orders o ON o.OrderID = od.OrderID JOIN products p ON p.ProductID = od.ProductID JOIN categories pc ON pc.CategoryID = p.CategoryID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY pc.CategoryName;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee generated the highest sales last month?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName, SUM(d.UnitPrice * d.Quantity * (1 - d.Discount)) AS TotalSales FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] d ON o.OrderID = d.OrderID WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND o.OrderDate < CURDATE() GROUP BY e.EmployeeID, e.FirstName, e.LastName ORDER BY TotalSales DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order for the year 2022?",
        "output": "SELECT AVG(orders.Freight) AS avg_shipping_cost_per_order FROM orders WHERE YEAR(orders.OrderDate) = 2022",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which countries have the highest number of customers?",
        "output": "SELECT Country, COUNT(CustomerID) AS NumberOfCustomers FROM customers GROUP BY Country ORDER BY NumberOfCustomers DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total revenue generated from product sales?",
        "output": "SELECT SUM(OD.Quantity * OD.UnitPrice) AS TotalRevenue FROM products P JOIN [Order Details] OD ON P.ProductID = OD.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the percentage of discontinued products in the inventory.",
        "output": "SELECT (COUNT(ProductID) * 100.0 / (SELECT COUNT(*) FROM products)) AS DiscontinuedPercentage FROM products WHERE Discontinued = 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the average shipping cost per order from January to December 2023?",
        "output": "SELECT AVG(orders.Freight) AS shipping_cost_per_order FROM orders WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31'",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order value for the month of February 2023?",
        "output": "SELECT SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) / COUNT(DISTINCT o.OrderID) AS AvgOrderValue FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-02-01' AND '2023-02-28';",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which countries have the highest number of late deliveries?",
        "output": "SELECT ShipCountry, COUNT(OrderID) AS 'Late Deliveries' FROM orders WHERE ShippedDate > RequiredDate GROUP BY ShipCountry;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average discount percentage applied to each product?",
        "output": "SELECT p.ProductID, AVG(od.Discount * 100) AS AverageDiscountPercentage FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Find the most frequently ordered product.",
        "output": "SELECT products.ProductName, COUNT([Order Details].OrderID) AS OrderCount FROM products JOIN [Order Details] ON products.ProductID = [Order Details].ProductID GROUP BY products.ProductName ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which supplier provides the most products?",
        "output": "SELECT SupplierID, COUNT(ProductID) AS ProductCount FROM products GROUP BY SupplierID ORDER BY ProductCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many orders were placed by each employee in the first quarter of 2023?",
        "output": "SELECT employees.EmployeeID, COUNT(orders.OrderID) AS OrderCount FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-03-31' GROUP BY employees.EmployeeID",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "How many orders were placed each month in the year 2022?",
        "output": "SELECT MONTH(OrderDate) AS OrderMonth, COUNT(OrderID) AS TotalOrders FROM orders WHERE YEAR(OrderDate) = 2022 GROUP BY OrderMonth;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which city has the highest number of shipping recipients?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS ShipmentCount FROM orders GROUP BY ShipCity ORDER BY ShipmentCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total number of units in stock across all products?",
        "output": "SELECT SUM(UnitsInStock) FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total revenue generated from each product?",
        "output": "SELECT p.ProductID, SUM(od.Quantity * od.UnitPrice) AS TotalRevenue FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID GROUP BY p.ProductID",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have not placed any orders?",
        "output": "SELECT e.EmployeeID, e.FirstName, e.LastName FROM employees e LEFT JOIN orders o ON e.EmployeeID = o.EmployeeID WHERE o.OrderID IS NULL",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total inventory value (UnitsInStock * UnitPrice) for each product?",
        "output": "SELECT ProductID, (UnitsInStock * UnitPrice) AS InventoryValue FROM products;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped on time this month?",
        "output": "SELECT COUNT(OrderID) AS OnTimeOrders FROM orders WHERE ShippedDate <= RequiredDate AND MONTH(OrderDate) = MONTH(CURDATE()) AND YEAR(OrderDate) = YEAR(CURDATE());",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify the top 3 regions with the highest total sales.",
        "output": "SELECT ShipRegion, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY ShipRegion ORDER BY TotalSales DESC LIMIT 3;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the average price of products supplied by each supplier?",
        "output": "SELECT suppliers.SupplierID, suppliers.CompanyName, AVG(products.UnitPrice) AS AveragePrice FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID GROUP BY suppliers.SupplierID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "List the top 5 products by sales for May 2023.",
        "output": "SELECT od.ProductID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-05-01' AND '2023-05-31' GROUP BY od.ProductID ORDER BY TotalSales DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which city has the most employees?",
        "output": "SELECT City, COUNT(*) AS EmployeeCount FROM employees GROUP BY City ORDER BY EmployeeCount DESC LIMIT 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Who are the top 5 employees in terms of the number of orders processed?",
        "output": "SELECT EmployeeID, COUNT(*) AS OrderCount FROM orders GROUP BY EmployeeID ORDER BY OrderCount DESC LIMIT 5",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total discount given across all orders?",
        "output": "SELECT SUM(od.Discount * od.Quantity * od.UnitPrice) AS TotalDiscount FROM [Order Details] od;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue for each country in June 2023?",
        "output": "SELECT orders.ShipCountry, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS Total_Sales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE DATE_FORMAT(orders.OrderDate, '%Y-%m') = '2023-06' GROUP BY orders.ShipCountry;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employees processed the most orders in August 2023?",
        "output": "SELECT o.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM orders o WHERE o.OrderDate BETWEEN '2023-08-01' AND '2023-08-31' GROUP BY o.EmployeeID ORDER BY OrderCount DESC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which customer has placed the highest number of orders?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS OrderCount FROM orders GROUP BY CustomerID ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the month with the highest average order value in 2023?",
        "output": "SELECT DATE_FORMAT(orders.OrderDate, '%Y-%m') AS month, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) / COUNT(DISTINCT orders.OrderID) AS avg_order_value FROM [Order Details] JOIN orders ON [Order Details].OrderID = orders.OrderID WHERE orders.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY month ORDER BY avg_order_value DESC LIMIT 1",
        "difficulty": "advanced"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the total discount applied on each product?",
        "output": "SELECT ProductID, SUM(Discount) as TotalDiscount FROM [Order Details] GROUP BY ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the average order fulfillment time for March 2023?",
        "output": "SELECT AVG(DATEDIFF(o.ShippedDate, o.OrderDate)) AS AvgFulfillmentTime FROM orders o WHERE o.OrderDate BETWEEN '2023-03-01' AND '2023-03-31';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What percentage of orders were delivered on or before the required date in Q2 of 2023?",
        "output": "SELECT COUNT(CASE WHEN o.ShippedDate <= o.RequiredDate THEN 1 END) / COUNT(o.OrderID) AS on_time_delivery_rate FROM orders o WHERE o.OrderDate BETWEEN '2023-04-01' AND '2023-06-30'",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have a quantity per unit more than or equal to '10 units'?",
        "output": "SELECT ProductName FROM products WHERE CAST(SUBSTRING(QuantityPerUnit, 1, 2) AS INT) >= 10;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which city received the most orders?",
        "output": "SELECT O.ShipCity, COUNT(O.OrderID) AS OrderCount FROM orders O GROUP BY O.ShipCity ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List the top 5 countries with the highest number of orders.",
        "output": "SELECT ShipCountry, COUNT(OrderID) as OrderCount FROM orders GROUP BY ShipCountry ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How many orders were shipped late?",
        "output": "SELECT COUNT(*) AS LateOrders FROM orders WHERE ShippedDate > RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the distribution of order fulfillment times for the current year?",
        "output": "SELECT (DATEDIFF(ShippedDate, OrderDate)) AS 'Order Fulfillment Time', COUNT(OrderID) AS 'Number of Orders' FROM orders WHERE YEAR(OrderDate) = YEAR(CURDATE()) GROUP BY (DATEDIFF(ShippedDate, OrderDate));",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee handled the largest order (by quantity) this year?",
        "output": "SELECT employees.EmployeeID, MAX([Order Details].Quantity) AS MaxOrderQuantity FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY employees.EmployeeID ORDER BY MaxOrderQuantity DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Identify regions where the average freight cost exceeds a given amount.",
        "output": "SELECT ShipRegion, AVG(Freight) as AvgFreight FROM orders GROUP BY ShipRegion HAVING AVG(Freight) > :specified_amount;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed in the last year?",
        "output": "SELECT COUNT(OrderID) AS OrdersLastYear FROM orders WHERE OrderDate BETWEEN (CURRENT_DATE - INTERVAL '1 year') AND CURRENT_DATE;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which country has the highest overall freight cost?",
        "output": "SELECT ShipCountry, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCountry ORDER BY TotalFreight DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total freight cost incurred in July 2023?",
        "output": "SELECT SUM(Freight) AS Total_Freight_Cost FROM orders WHERE DATE_FORMAT(OrderDate, '%Y-%m') = '2023-07';",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the employee who generated the highest sales in 2022?",
        "output": "SELECT employees.FirstName, employees.LastName, SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS total_sales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE YEAR(orders.OrderDate) = 2022 GROUP BY employees.EmployeeID ORDER BY total_sales DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Identify the product(s) with the highest unit price.",
        "output": "SELECT ProductID, ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Product Analysis",
        "input": "Calculate the monthly product performance based on sales.",
        "output": "SELECT p.ProductID, SUM(od.Quantity) AS TotalQuantity FROM [Order Details] od JOIN products p ON od.ProductID = p.ProductID GROUP BY p.ProductID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest shipping freight cost this year?",
        "output": "SELECT employees.EmployeeID, SUM(orders.Freight) AS TotalFreight FROM orders INNER JOIN employees ON orders.EmployeeID = employees.EmployeeID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) GROUP BY employees.EmployeeID ORDER BY TotalFreight DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which products are most frequently ordered?",
        "output": "SELECT od.ProductID, COUNT(*) AS Frequency FROM [Order Details] od GROUP BY od.ProductID ORDER BY Frequency DESC",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "How many orders were placed by each employee in 2023?",
        "output": "SELECT EmployeeID, COUNT(*) AS NumberOfOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the total revenue generated from orders for each supplier?",
        "output": "SELECT suppliers.SupplierID, suppliers.SupplierName, SUM([Order Details].Quantity * [Order Details].UnitPrice) AS TotalRevenue FROM [Order Details] JOIN products ON [Order Details].ProductID = products.ProductID JOIN suppliers ON products.SupplierID = suppliers.SupplierID GROUP BY suppliers.SupplierID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employees have more than 10 years of service?",
        "output": "SELECT EmployeeID, CONCAT(FirstName, ' ', LastName) AS FullName FROM employees WHERE DATEDIFF(CURDATE(), HireDate) > 365 * 10",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the minimum, maximum, and average salaries of employees in each region?",
        "output": "SELECT Region, MIN(Salary) AS MinSalary, MAX(Salary) AS MaxSalary, AVG(Salary) AS AvgSalary FROM employees GROUP BY Region;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "Which products have not been ordered in the last six months?",
        "output": "SELECT P.ProductID, P.ProductName FROM products P LEFT JOIN [Order Details] OD ON P.ProductID = OD.ProductID WHERE OD.OrderID IS NULL OR DATEDIFF(CURDATE(), (SELECT MAX(O.OrderDate) FROM orders O JOIN [Order Details] OD2 ON O.OrderID = OD2.OrderID WHERE OD2.ProductID = P.ProductID)) > 180;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Find customers and their respective cities who have placed an order in 2023.",
        "output": "SELECT customers.CustomerID, customers.City FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE YEAR(OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What is the average discount given on all products?",
        "output": "SELECT AVG(Discount) AS AverageDiscount FROM [Order Details]",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "What are the names and titles of all employees?",
        "output": "SELECT FirstName, LastName, Title FROM employees;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which shipping method is used the most?",
        "output": "SELECT ShipVia, COUNT(OrderID) AS ShippingMethodCount FROM orders GROUP BY ShipVia ORDER BY ShippingMethodCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "What is the total freight cost incurred for orders shipped via each shipping company in 2023?",
        "output": "SELECT s.CompanyName, SUM(o.Freight) AS total_freight_cost FROM orders o JOIN shippers s ON o.ShipVia = s.ShipperID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY s.CompanyName",
        "difficulty": "advanced"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What are the top 5 most expensive products by unit price?",
        "output": "SELECT ProductName, UnitPrice FROM products ORDER BY UnitPrice DESC LIMIT 5;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which employee has the highest number of on-time shipments?",
        "output": "SELECT EmployeeID, COUNT(OrderID) AS OnTimeShipments FROM orders WHERE ShippedDate <= RequiredDate GROUP BY EmployeeID ORDER BY OnTimeShipments DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total revenue generated from orders in March 2023?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE MONTH(orders.OrderDate) = 3 AND YEAR(orders.OrderDate) = 2023;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the total sales revenue for each month?",
        "output": "SELECT DATE_FORMAT(OrderDate, '%Y-%m') AS Month, SUM(OD.UnitPrice * OD.Quantity * (1 - OD.Discount)) AS TotalSales FROM orders O JOIN [Order Details] OD ON O.OrderID = OD.OrderID GROUP BY Month;",
        "difficulty": "easy"
    },
    {
        "scenario": "Employee Performance",
        "input": "Determine the employee who has handled the most high-value orders.",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS HighValueOrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE od.UnitPrice * od.Quantity > 500 GROUP BY e.EmployeeID",
        "difficulty": "advanced"
    },
    {
        "scenario": "Customer Analysis",
        "input": "Which regions have the highest customer retention rates?",
        "output": "SELECT Region, COUNT(DISTINCT c.CustomerID) / (SELECT COUNT(DISTINCT CustomerID) FROM customers WHERE Region = c.Region) AS RetentionRate FROM orders o JOIN customers c ON o.CustomerID = c.CustomerID WHERE o.OrderDate BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE() GROUP BY c.Region ORDER BY RetentionRate DESC",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest freight cost associated with their orders?",
        "output": "SELECT employees.EmployeeID, SUM(orders.Freight) AS TotalFreightCost FROM employees JOIN orders ON employees.EmployeeID = orders.EmployeeID GROUP BY employees.EmployeeID ORDER BY TotalFreightCost DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "List products that need to be reordered (units in stock lower than reorder level).",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which employees have the highest sales performances in 2023?",
        "output": "SELECT EmployeeID, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY EmployeeID ORDER BY TotalSales DESC;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Inventory Management",
        "input": "What is the average selling price of products in each category?",
        "output": "SELECT CategoryID, AVG(UnitPrice) AS AveragePrice FROM products GROUP BY CategoryID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which country had the highest number of orders in 2023?",
        "output": "SELECT ShipCountry, COUNT(*) AS NumberOfOrders FROM orders WHERE OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY ShipCountry ORDER BY NumberOfOrders DESC LIMIT 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the retention rate of customers from January 2022 to December 2022?",
        "output": "SELECT (COUNT(DISTINCT CASE WHEN orders.OrderDate BETWEEN '2022-01-01' AND '2022-12-31' THEN orders.CustomerID END))::float / (COUNT(DISTINCT orders.CustomerID WHERE orders.OrderDate < '2022-01-01')) AS RetentionRate FROM orders;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Order Analysis",
        "input": "Calculate the number of orders placed each month in 2023.",
        "output": "SELECT YEAR(OrderDate) AS Year, MONTH(OrderDate) AS Month, COUNT(OrderID) AS OrderCount FROM orders WHERE YEAR(OrderDate) = 2023 GROUP BY YEAR(OrderDate), MONTH(OrderDate);",
        "difficulty": "medium"
    },
    {
        "scenario": "Product Analysis",
        "input": "What are the total sales for each product?",
        "output": "SELECT P.ProductID, P.ProductName, SUM(OD.Quantity * OD.UnitPrice) AS TotalSales FROM products P JOIN [Order Details] OD ON P.ProductID = OD.ProductID GROUP BY P.ProductID, P.ProductName;",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Calculate the average units on order for all products.",
        "output": "SELECT AVG(UnitsOnOrder) FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total quantity of products ordered by each customer?",
        "output": "SELECT orders.CustomerID, SUM([Order Details].Quantity) AS TotalQuantity FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY orders.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which products have a stock level below the reorder level?",
        "output": "SELECT ProductName FROM products WHERE UnitsInStock < ReorderLevel;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Identify the month with the highest on-time delivery rate.",
        "output": "SELECT MONTH(OrderDate) AS OrderMonth, (COUNT(OrderID) FILTER (WHERE ShippedDate <= RequiredDate)) * 100.0 / COUNT(OrderID) AS OnTimeDeliveryRate FROM orders GROUP BY MONTH(OrderDate) ORDER BY OnTimeDeliveryRate DESC LIMIT 1",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total number of units of all products currently in stock?",
        "output": "SELECT SUM(UnitsInStock) AS TotalStock FROM products;",
        "difficulty": "easy"
    },
    {
        "scenario": "cross_scenario",
        "input": "Which products have the highest stock levels currently?",
        "output": "SELECT ProductName, UnitsInStock FROM products ORDER BY UnitsInStock DESC",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Find the products with the lowest sales volume in the last month.",
        "output": "SELECT p.ProductName, SUM(od.Quantity) AS TotalSold FROM products p JOIN [Order Details] od ON p.ProductID = od.ProductID WHERE OrderDate >= DATEADD(MONTH, -1, GETDATE()) GROUP BY p.ProductName ORDER BY TotalSold ASC;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What are the top 5 cities by order count?",
        "output": "SELECT ShipCity, COUNT(OrderID) AS OrderCount FROM orders GROUP BY ShipCity ORDER BY OrderCount DESC LIMIT 5;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "How many employees were hired in the last 5 years?",
        "output": "SELECT COUNT(*) AS HiredInLast5Years FROM employees WHERE HireDate >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR)",
        "difficulty": "easy"
    },
    {
        "scenario": "Order Analysis",
        "input": "What is the monthly total sales for the year 2023?",
        "output": "SELECT DATE_FORMAT(o.OrderDate, '%Y-%m') AS Month, SUM(od.UnitPrice * od.Quantity * (1 - od.Discount)) AS TotalSales FROM orders o JOIN [Order Details] od ON o.OrderID = od.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY Month;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Identify the shipper (ShipVia) that handled the most orders.",
        "output": "SELECT O.ShipVia, COUNT(O.OrderID) AS OrderCount FROM orders O GROUP BY O.ShipVia ORDER BY OrderCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "What is the total freight cost for orders shipped to the USA?",
        "output": "SELECT SUM(Freight) AS TotalFreight FROM orders WHERE ShipCountry = 'USA'",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which suppliers have delivered products within a week on average?",
        "output": "SELECT suppliers.SupplierID FROM suppliers JOIN products ON suppliers.SupplierID = products.SupplierID JOIN orders ON products.ProductID = [Order Details].ProductID JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID GROUP BY suppliers.SupplierID HAVING AVG(DATEDIFF(orders.ShippedDate, orders.OrderDate)) <= 7;",
        "difficulty": "medium"
    },
    {
        "scenario": "Employee Performance",
        "input": "What is the average discount given per order by each employee?",
        "output": "SELECT e.EmployeeID, AVG(od.Discount) AS AvgDiscountByOrder FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID JOIN [Order Details] od ON o.OrderID = od.OrderID GROUP BY e.EmployeeID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Order Analysis",
        "input": "Which country has the highest total freight costs?",
        "output": "SELECT ShipCountry, SUM(Freight) AS TotalFreight FROM orders GROUP BY ShipCountry ORDER BY TotalFreight DESC LIMIT 1;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What percentage of orders from the USA were delivered on time?",
        "output": "SELECT COUNT(OrderID) * 100.0 / COUNT(*) AS OnTimeRate FROM orders WHERE ShipCountry = 'USA' AND ShippedDate <= RequiredDate;",
        "difficulty": "medium"
    },
    {
        "scenario": "Customer Analysis",
        "input": "List the customers and their total order count, but only for customers from the United States.",
        "output": "SELECT customers.CustomerID, customers.CompanyName, COUNT(orders.OrderID) as OrderCount FROM customers JOIN orders ON customers.CustomerID = orders.CustomerID WHERE customers.Country = 'USA' GROUP BY customers.CustomerID;",
        "difficulty": "medium"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "Which city has the highest number of suppliers?",
        "output": "SELECT City, COUNT(SupplierID) AS SupplierCount FROM suppliers GROUP BY City ORDER BY SupplierCount DESC LIMIT 1;",
        "difficulty": "easy"
    },
    {
        "scenario": "Customer Analysis",
        "input": "How many orders were placed per each customer?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS TotalOrders FROM orders GROUP BY CustomerID;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which shipping method is used most frequently?",
        "output": "SELECT ShipVia, COUNT(*) AS Frequency FROM orders GROUP BY ShipVia ORDER BY Frequency DESC",
        "difficulty": "easy"
    },
    {
        "scenario": "Inventory Management",
        "input": "Which product categories contain the largest number of products?",
        "output": "SELECT CategoryID, COUNT(ProductID) FROM products GROUP BY CategoryID ORDER BY COUNT(ProductID) DESC;",
        "difficulty": "easy"
    },
    {
        "scenario": "Supplier Analysis",
        "input": "What is the total sales revenue generated last month?",
        "output": "SELECT SUM([Order Details].UnitPrice * [Order Details].Quantity * (1 - [Order Details].Discount)) AS TotalSales FROM orders JOIN [Order Details] ON orders.OrderID = [Order Details].OrderID WHERE YEAR(orders.OrderDate) = YEAR(CURDATE()) AND MONTH(orders.OrderDate) = MONTH(CURDATE()) - 1;",
        "difficulty": "medium"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "What is the average freight cost for orders shipped within the same city?",
        "output": "SELECT AVG(Freight) AS 'Average Freight Cost' FROM orders WHERE ShipCity = orders.ShipCity;",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "How is the shipping performance varying by different employees?",
        "output": "SELECT EmployeeID, AVG(DATEDIFF(ShippedDate, OrderDate)) AS AvgFulfillmentTime FROM orders GROUP BY EmployeeID ORDER BY EmployeeID;",
        "difficulty": "advanced"
    },
    {
        "scenario": "Employee Performance",
        "input": "Which employee has the highest order count?",
        "output": "SELECT e.EmployeeID, COUNT(o.OrderID) AS OrderCount FROM employees e JOIN orders o ON e.EmployeeID = o.EmployeeID GROUP BY e.EmployeeID ORDER BY OrderCount DESC LIMIT 1",
        "difficulty": "easy"
    },
    {
        "scenario": "Shipping Analysis",
        "input": "Which customer placed the most orders in the last 6 months?",
        "output": "SELECT CustomerID, COUNT(OrderID) AS 'Number of Orders' FROM orders WHERE OrderDate >= CURDATE() - INTERVAL 6 MONTH GROUP BY CustomerID ORDER BY COUNT(OrderID) DESC LIMIT 1;",
        "difficulty": "medium"
    }
]